{
  "nodes": {
    "SitePage /dev-404-page/": {
      "jsonName": "dev-404-page-5f9",
      "internalComponentName": "ComponentDev404Page",
      "path": "/dev-404-page/",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/.cache/dev-404-page.js",
      "componentChunkName": "component---cache-dev-404-page-js",
      "context": {},
      "pluginCreator___NODE": "Plugin dev-404-page",
      "pluginCreatorId": "Plugin dev-404-page",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/.cache/dev-404-page.js",
      "id": "SitePage /dev-404-page/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "fd39e7a5569ad44b8677bc52aa21e041",
        "description": "Plugin dev-404-page",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin dev-404-page": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby/dist/internal-plugins/dev-404-page",
      "id": "Plugin dev-404-page",
      "name": "dev-404-page",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPagesStatefully"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby/dist/internal-plugins/dev-404-page",
      "packageJson": {
        "name": "dev-404-page",
        "description": "Internal plugin to add a 404 page in development with helpful information",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "5339e0f436e1ca5ae0b67c4688e4c716",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin load-babel-config": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby/dist/internal-plugins/load-babel-config",
      "id": "Plugin load-babel-config",
      "name": "load-babel-config",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onPreBootstrap"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby/dist/internal-plugins/load-babel-config",
      "packageJson": {
        "name": "load-babel-config",
        "description": "Internal plugin that handles loading Babel configs",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "436c3a90f98fcef943eb0fe0d7852244",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin internal-data-bridge": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby/dist/internal-plugins/internal-data-bridge",
      "id": "Plugin internal-data-bridge",
      "name": "internal-data-bridge",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "sourceNodes",
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby/dist/internal-plugins/internal-data-bridge",
      "packageJson": {
        "name": "internal-data-bridge",
        "description": "An internal Gatsby plugin which creates data nodes from internal data",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "14ceca4af73c81bf87d4ac90abbe155a",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin prod-404": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby/dist/internal-plugins/prod-404",
      "id": "Plugin prod-404",
      "name": "prod-404",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby/dist/internal-plugins/prod-404",
      "packageJson": {
        "name": "prod-404",
        "description": "Internal plugin to detect various flavors of 404 pages and ensure there's a 404.html path created as well to ensure compatability with static hosts",
        "version": "1.0.0",
        "main": "index.js",
        "author": "Kyle Mathews <mathews.kyle@gmail.com>",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "7d80a370d5455496853acd1b3bede080",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin query-runner": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby/dist/internal-plugins/query-runner",
      "id": "Plugin query-runner",
      "name": "query-runner",
      "version": "1.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreatePage"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby/dist/internal-plugins/query-runner",
      "packageJson": {
        "name": "query-runner",
        "description": "Internal plugin for running queries",
        "version": "1.0.0",
        "main": "index.js",
        "author": "",
        "license": "MIT",
        "dependencies": [],
        "devDependencies": [],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "ed6a877c654ae5e255c452c441501219",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-react-helmet": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-react-helmet",
      "id": "Plugin gatsby-plugin-react-helmet",
      "name": "gatsby-plugin-react-helmet",
      "version": "3.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-react-helmet",
      "packageJson": {
        "name": "gatsby-plugin-react-helmet",
        "description": "Manage document head data with react-helmet. Provides drop-in server rendering support for Gatsby.",
        "version": "3.0.0",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "favicon",
          "react-helmet",
          "seo",
          "document",
          "head",
          "title",
          "meta",
          "link",
          "script",
          "base",
          "noscript",
          "style"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "matthews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          },
          {
            "name": "react-helmet",
            "version": ">=5.1.3"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "9332645c85a1eeb538ab2251fac5ed6b",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-styled-components": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-styled-components",
      "id": "Plugin gatsby-plugin-styled-components",
      "name": "gatsby-plugin-styled-components",
      "version": "3.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateBabelConfig"
      ],
      "browserAPIs": [],
      "ssrAPIs": [
        "wrapRootElement",
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-styled-components",
      "packageJson": {
        "name": "gatsby-plugin-styled-components",
        "description": "Gatsby plugin to add support for styled components",
        "version": "3.0.0",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "styled-components"
        ],
        "author": {
          "name": "Guten Ye",
          "email": "ywzhaifei@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          }
        ],
        "peerDependencies": [
          {
            "name": "babel-plugin-styled-components",
            "version": ">1.5.0"
          },
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          },
          {
            "name": "styled-components",
            "version": ">= 2.0.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "579390f061581aa35d3cc7c004140fc5",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-offline": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-offline",
      "id": "Plugin gatsby-plugin-offline",
      "name": "gatsby-plugin-offline",
      "version": "2.0.7",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "createPages",
        "onPostBuild"
      ],
      "browserAPIs": [
        "registerServiceWorker",
        "onPostPrefetchPathname",
        "onServiceWorkerActive"
      ],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-offline",
      "packageJson": {
        "name": "gatsby-plugin-offline",
        "description": "Gatsby plugin which sets up a site to be able to run offline",
        "version": "2.0.7",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "offline",
          "precache",
          "service-worker"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "cheerio",
            "version": "^1.0.0-rc.2"
          },
          {
            "name": "lodash",
            "version": "^4.17.10"
          },
          {
            "name": "workbox-build",
            "version": "^3.4.1"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">=2.0.20"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "2c1eff5b6dc0ebbbb471c6ba3b6195a5",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-typescript": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-typescript",
      "id": "Plugin gatsby-plugin-typescript",
      "name": "gatsby-plugin-typescript",
      "version": "2.0.0",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "resolvableExtensions",
        "onCreateBabelConfig",
        "onCreateWebpackConfig"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-typescript",
      "packageJson": {
        "name": "gatsby-plugin-typescript",
        "description": "Adds TypeScript support to Gatsby",
        "version": "2.0.0",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "typescript"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/preset-typescript",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "babel-plugin-remove-graphql-queries",
            "version": "^2.0.2-rc.3"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "0968c4f659718010b76e37ee36bacc3e",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-sass": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-sass",
      "id": "Plugin gatsby-plugin-sass",
      "name": "gatsby-plugin-sass",
      "version": "2.0.1",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateWebpackConfig"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-sass",
      "packageJson": {
        "name": "gatsby-plugin-sass",
        "description": "Gatsby plugin to handle scss/sass files",
        "version": "2.0.1",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "sass",
          "scss"
        ],
        "author": {
          "name": "Daniel Farrell",
          "email": "daniel@mobelux.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "sass-loader",
            "version": "^7.0.1"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          },
          {
            "name": "node-sass",
            "version": "^4.9.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "b70a0f20fb0951b77133906133a70407",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-manifest": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-manifest",
      "id": "Plugin gatsby-plugin-manifest",
      "name": "gatsby-plugin-manifest",
      "version": "2.0.5",
      "pluginOptions": {
        "plugins": [],
        "name": "Developer Blog",
        "short_name": "Majid Hajian Personal Website - a note to self for developer",
        "description": "Majid Hajian Personal Website - a note to self for developer",
        "start_url": "/",
        "background_color": "#2b2e3c",
        "theme_color": "#72cc96",
        "display": "standalone",
        "icon": "src/favicon.png"
      },
      "nodeAPIs": [
        "onPostBootstrap"
      ],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-manifest",
      "packageJson": {
        "name": "gatsby-plugin-manifest",
        "description": "Gatsby plugin which adds a manifest.webmanifest to make sites progressive web apps",
        "version": "2.0.5",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "favicon",
          "icons",
          "manifest.webmanifest",
          "progressive-web-app",
          "pwa"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "sharp",
            "version": "^0.20.2"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "899e1b26b184c2dcb2663a81a9d7e81b",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-catch-links": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-catch-links",
      "id": "Plugin gatsby-plugin-catch-links",
      "name": "gatsby-plugin-catch-links",
      "version": "2.0.5",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [
        "onClientEntry"
      ],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-catch-links",
      "packageJson": {
        "name": "gatsby-plugin-catch-links",
        "description": "Intercepts local links from markdown and other non-react pages and does a client-side pushState to avoid the browser having to refresh the page.",
        "version": "2.0.5",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "escape-string-regexp",
            "version": "^1.0.5"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-beta"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "22dc2f1aacc79e9ee6807cdf06de2d1b",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-sitemap": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-sitemap",
      "id": "Plugin gatsby-plugin-sitemap",
      "name": "gatsby-plugin-sitemap",
      "version": "2.0.1",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onPostBuild"
      ],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-sitemap",
      "packageJson": {
        "name": "gatsby-plugin-sitemap",
        "description": "Gatsby plugin that automatically creates a sitemap for your site",
        "version": "2.0.1",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Nicholas Young &lt;nicholas@nicholaswyoung.com&gt;"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "sitemap",
            "version": "^1.12.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "3cbb48f87277fc51b0f5565cb3ccbb45",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-lodash": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-lodash",
      "id": "Plugin gatsby-plugin-lodash",
      "name": "gatsby-plugin-lodash",
      "version": "3.0.1",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateWebpackConfig",
        "onCreateBabelConfig"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-lodash",
      "packageJson": {
        "name": "gatsby-plugin-lodash",
        "description": "Easy modular Lodash builds. Adds the Lodash webpack & Babel plugins to your Gatsby build",
        "version": "3.0.1",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "babel-plugin-lodash",
            "version": "^3.2.11"
          },
          {
            "name": "lodash-webpack-plugin",
            "version": "^0.11.5"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "8fba99068d493fd2bbbe10e45b55a637",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-source-filesystem": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-source-filesystem",
      "id": "Plugin gatsby-source-filesystem",
      "name": "gatsby-source-filesystem",
      "version": "2.0.4",
      "pluginOptions": {
        "plugins": [],
        "name": "post",
        "path": "/Users/majid/Projects/Personal/mhadaily.github.io/blog"
      },
      "nodeAPIs": [
        "sourceNodes",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-source-filesystem",
      "packageJson": {
        "name": "gatsby-source-filesystem",
        "description": "Gatsby plugin which parses files within a directory for further parsing by other plugins",
        "version": "2.0.4",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "better-queue",
            "version": "^3.8.7"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "chokidar",
            "version": "^1.7.0"
          },
          {
            "name": "fs-extra",
            "version": "^5.0.0"
          },
          {
            "name": "got",
            "version": "^7.1.0"
          },
          {
            "name": "md5-file",
            "version": "^3.1.1"
          },
          {
            "name": "mime",
            "version": "^2.2.0"
          },
          {
            "name": "pretty-bytes",
            "version": "^4.0.2"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          },
          {
            "name": "valid-url",
            "version": "^1.0.9"
          },
          {
            "name": "xstate",
            "version": "^3.1.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "be02cc1a08d33024634814300da4df22",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-google-tagmanager": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-google-tagmanager",
      "id": "Plugin gatsby-plugin-google-tagmanager",
      "name": "gatsby-plugin-google-tagmanager",
      "version": "2.0.5",
      "pluginOptions": {
        "plugins": [],
        "id": "GTM-MVP42QK",
        "includeInDevelopment": false
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-google-tagmanager",
      "packageJson": {
        "name": "gatsby-plugin-google-tagmanager",
        "description": "Gatsby plugin to add google tagmanager onto a site",
        "version": "2.0.5",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "google analytics",
          "google tagmanager"
        ],
        "author": {
          "name": "Thijs Koerselman",
          "email": "thijs@vauxlab.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "e110f1a763ee78e59f658554617fd068",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-transformer-remark": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-transformer-remark",
      "id": "Plugin gatsby-transformer-remark",
      "name": "gatsby-transformer-remark",
      "version": "2.1.7",
      "pluginOptions": {
        "plugins": [
          {
            "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-remark-external-links",
            "id": "Plugin gatsby-remark-external-links",
            "name": "gatsby-remark-external-links",
            "version": "0.0.4",
            "pluginOptions": {
              "plugins": [],
              "target": "_blank",
              "rel": "nofollow noopener noreferrer"
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-remark-external-links"
          },
          {
            "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-remark-prismjs",
            "id": "Plugin gatsby-remark-prismjs",
            "name": "gatsby-remark-prismjs",
            "version": "3.0.2",
            "pluginOptions": {
              "plugins": []
            },
            "nodeAPIs": [],
            "browserAPIs": [],
            "ssrAPIs": [],
            "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-remark-prismjs"
          },
          {
            "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-remark-autolink-headers",
            "id": "Plugin gatsby-remark-autolink-headers",
            "name": "gatsby-remark-autolink-headers",
            "version": "2.0.7",
            "pluginOptions": {
              "plugins": []
            },
            "nodeAPIs": [],
            "browserAPIs": [
              "onClientEntry",
              "onRouteUpdate"
            ],
            "ssrAPIs": [
              "onRenderBody"
            ],
            "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-remark-autolink-headers"
          }
        ]
      },
      "nodeAPIs": [
        "onCreateNode",
        "setFieldsOnGraphQLNodeType"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-transformer-remark",
      "packageJson": {
        "name": "gatsby-transformer-remark",
        "description": "Gatsby transformer plugin for Markdown using the Remark library and ecosystem",
        "version": "2.1.7",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "markdown",
          "remark"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "gray-matter",
            "version": "^4.0.0"
          },
          {
            "name": "hast-util-raw",
            "version": "^2.0.2"
          },
          {
            "name": "hast-util-to-html",
            "version": "^3.0.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.10"
          },
          {
            "name": "mdast-util-to-hast",
            "version": "^3.0.0"
          },
          {
            "name": "mdast-util-toc",
            "version": "^2.0.1"
          },
          {
            "name": "remark",
            "version": "^9.0.0"
          },
          {
            "name": "remark-parse",
            "version": "^5.0.0"
          },
          {
            "name": "remark-retext",
            "version": "^3.1.0"
          },
          {
            "name": "remark-stringify",
            "version": "^5.0.0"
          },
          {
            "name": "retext-english",
            "version": "^3.0.0"
          },
          {
            "name": "sanitize-html",
            "version": "^1.18.2"
          },
          {
            "name": "underscore.string",
            "version": "^3.3.4"
          },
          {
            "name": "unified",
            "version": "^6.1.5"
          },
          {
            "name": "unist-util-remove-position",
            "version": "^1.1.2"
          },
          {
            "name": "unist-util-select",
            "version": "^1.5.0"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.3.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "2ac85bfbd063bddb0c0ccdd46a00ffc5",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-external-links": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-remark-external-links",
      "id": "Plugin gatsby-remark-external-links",
      "name": "gatsby-remark-external-links",
      "version": "0.0.4",
      "pluginOptions": {
        "plugins": [],
        "target": "_blank",
        "rel": "nofollow noopener noreferrer"
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-remark-external-links",
      "packageJson": {
        "name": "gatsby-remark-external-links",
        "description": "Automatically adds the target and rel attributes to external links in markdown.",
        "version": "0.0.4",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "remark"
        ],
        "author": {
          "name": "Jimmy Longley",
          "email": "jimmylongley@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "babel-runtime",
            "version": "^6.26.0"
          },
          {
            "name": "is-relative-url",
            "version": "^2.0.0"
          },
          {
            "name": "unist-util-find",
            "version": "^1.0.1"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.1.3"
          }
        ],
        "devDependencies": [
          {
            "name": "babel-cli",
            "version": "^6.26.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          },
          {
            "name": "dedent",
            "version": "^0.7.0"
          },
          {
            "name": "jest",
            "version": "^21.2.1"
          },
          {
            "name": "remark",
            "version": "^8.0.0"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "f9de2164ba4575150ff75c9b08de9b26",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-prismjs": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-remark-prismjs",
      "id": "Plugin gatsby-remark-prismjs",
      "name": "gatsby-remark-prismjs",
      "version": "3.0.2",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-remark-prismjs",
      "packageJson": {
        "name": "gatsby-remark-prismjs",
        "description": "Adds syntax highlighting to code blocks at build time using PrismJS",
        "version": "3.0.2",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "prismjs",
          "remark"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "parse-numeric-range",
            "version": "^0.0.2"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.3.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          },
          {
            "name": "prismjs",
            "version": "^1.15.0"
          },
          {
            "name": "remark",
            "version": "^9.0.0"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          },
          {
            "name": "prismjs",
            "version": "^1.15.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "764f6544b5bc55c0333acacc7aa86165",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-remark-autolink-headers": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-remark-autolink-headers",
      "id": "Plugin gatsby-remark-autolink-headers",
      "name": "gatsby-remark-autolink-headers",
      "version": "2.0.7",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [],
      "browserAPIs": [
        "onClientEntry",
        "onRouteUpdate"
      ],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-remark-autolink-headers",
      "packageJson": {
        "name": "gatsby-remark-autolink-headers",
        "description": "Gatsby plugin to autolink headers in markdown processed by Remark",
        "version": "2.0.7",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "remark"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "github-slugger",
            "version": "^1.1.1"
          },
          {
            "name": "mdast-util-to-string",
            "version": "^1.0.2"
          },
          {
            "name": "unist-util-visit",
            "version": "^1.3.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "625046b3b1db6f094dcba764b1405364",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-typography": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-typography",
      "id": "Plugin gatsby-plugin-typography",
      "name": "gatsby-plugin-typography",
      "version": "2.2.0",
      "pluginOptions": {
        "plugins": [],
        "pathToConfigModule": "src/utils/typography.ts"
      },
      "nodeAPIs": [
        "onPreBootstrap"
      ],
      "browserAPIs": [],
      "ssrAPIs": [
        "onRenderBody"
      ],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-typography",
      "packageJson": {
        "name": "gatsby-plugin-typography",
        "description": "Gatsby plugin to setup server rendering of Typography.js' CSS",
        "version": "2.2.0",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin",
          "typography",
          "typography.js"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.1.4"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          },
          {
            "name": "react-typography",
            "version": "^0.16.1 || ^1.0.0-alpha.0"
          },
          {
            "name": "typography",
            "version": "^0.16.0 || ^1.0.0-alpha.0"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "3725d0c0d3238bb18b0ca20fb1ae6191",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin default-site-plugin": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io",
      "id": "Plugin default-site-plugin",
      "name": "default-site-plugin",
      "version": "25ca15d7560af46598011af7e88245ac",
      "pluginOptions": {
        "plugins": []
      },
      "nodeAPIs": [
        "onCreateNode",
        "onCreateWebpackConfig",
        "createPages"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io",
      "packageJson": {
        "name": "gatsby-starter-typescirpt-power-blog",
        "description": "gatsyby blog template with typescript and tslint",
        "version": "1.0.0",
        "main": "n/a",
        "keywords": [
          "gatsby, typescript",
          "blog"
        ],
        "author": "Majid Hajian ( mhadaily@gmail.com )",
        "license": "MIT",
        "dependencies": [
          {
            "name": "gatsby-plugin-google-tagmanager",
            "version": "^2.0.5"
          }
        ],
        "devDependencies": [
          {
            "name": "@types/lodash",
            "version": "^4.14.117"
          },
          {
            "name": "@types/react",
            "version": "^16.4.18"
          },
          {
            "name": "@types/react-dom",
            "version": "^16.0.9"
          },
          {
            "name": "@types/react-helmet",
            "version": "^5.0.7"
          },
          {
            "name": "@types/styled-components",
            "version": "^4.0.1"
          },
          {
            "name": "@types/typography",
            "version": "^0.16.0"
          },
          {
            "name": "babel-plugin-styled-components",
            "version": "^1.8.0"
          },
          {
            "name": "gatsby",
            "version": "^2.0.25"
          },
          {
            "name": "gatsby-plugin-catch-links",
            "version": "^2.0.5"
          },
          {
            "name": "gatsby-plugin-lodash",
            "version": "^3.0.1"
          },
          {
            "name": "gatsby-plugin-manifest",
            "version": "^2.0.5"
          },
          {
            "name": "gatsby-plugin-offline",
            "version": "^2.0.7"
          },
          {
            "name": "gatsby-plugin-react-helmet",
            "version": "^3.0.0"
          },
          {
            "name": "gatsby-plugin-sass",
            "version": "^2.0.1"
          },
          {
            "name": "gatsby-plugin-sitemap",
            "version": "^2.0.1"
          },
          {
            "name": "gatsby-plugin-styled-components",
            "version": "^3.0.0"
          },
          {
            "name": "gatsby-plugin-typescript",
            "version": "^2.0.0"
          },
          {
            "name": "gatsby-plugin-typography",
            "version": "^2.2.0"
          },
          {
            "name": "gatsby-remark-autolink-headers",
            "version": "^2.0.7"
          },
          {
            "name": "gatsby-remark-external-links",
            "version": "0.0.4"
          },
          {
            "name": "gatsby-remark-prismjs",
            "version": "^3.0.2"
          },
          {
            "name": "gatsby-source-filesystem",
            "version": "^2.0.4"
          },
          {
            "name": "gatsby-transformer-remark",
            "version": "^2.1.7"
          },
          {
            "name": "gh-pages",
            "version": "^2.0.1"
          },
          {
            "name": "husky",
            "version": "^1.1.2"
          },
          {
            "name": "lint-staged",
            "version": "^7.3.0"
          },
          {
            "name": "lodash",
            "version": "^4.17.11"
          },
          {
            "name": "node-sass",
            "version": "^4.9.4"
          },
          {
            "name": "polished",
            "version": "^2.2.0"
          },
          {
            "name": "prettier",
            "version": "^1.14.3"
          },
          {
            "name": "prismjs",
            "version": "^1.15.0"
          },
          {
            "name": "react",
            "version": "^16.5.2"
          },
          {
            "name": "react-dom",
            "version": "^16.5.2"
          },
          {
            "name": "react-helmet",
            "version": "^5.2.0"
          },
          {
            "name": "react-typography",
            "version": "^0.16.13"
          },
          {
            "name": "source-map-support",
            "version": "latest"
          },
          {
            "name": "styled-components",
            "version": "^4.0.0"
          },
          {
            "name": "stylelint",
            "version": "^9.6.0"
          },
          {
            "name": "stylelint-config-css-modules",
            "version": "^1.3.0"
          },
          {
            "name": "stylelint-config-prettier",
            "version": "^4.0.0"
          },
          {
            "name": "stylelint-config-recommended-scss",
            "version": "^3.2.0"
          },
          {
            "name": "stylelint-order",
            "version": "^1.0.0"
          },
          {
            "name": "stylelint-scss",
            "version": "^3.3.1"
          },
          {
            "name": "ts-node",
            "version": "^7.0.1"
          },
          {
            "name": "tslint",
            "version": "^5.11.0"
          },
          {
            "name": "tslint-config-blvd",
            "version": "^1.2.1"
          },
          {
            "name": "tslint-config-prettier",
            "version": "^1.15.0"
          },
          {
            "name": "tslint-plugin-prettier",
            "version": "^2.0.0"
          },
          {
            "name": "typescript",
            "version": "^3.1.3"
          },
          {
            "name": "typography",
            "version": "^0.16.17"
          }
        ],
        "peerDependencies": [],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "dc97278b057a22fc320c6d8ed46b3eba",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Plugin gatsby-plugin-page-creator": {
      "resolve": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-page-creator",
      "id": "Plugin gatsby-plugin-page-creator",
      "name": "gatsby-plugin-page-creator",
      "version": "2.0.1",
      "pluginOptions": {
        "plugins": [],
        "path": "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages",
        "pathCheck": false
      },
      "nodeAPIs": [
        "createPagesStatefully"
      ],
      "browserAPIs": [],
      "ssrAPIs": [],
      "pluginFilepath": "/Users/majid/Projects/Personal/mhadaily.github.io/node_modules/gatsby-plugin-page-creator",
      "packageJson": {
        "name": "gatsby-plugin-page-creator",
        "description": "Gatsby plugin that automatically creates pages from React components in specified directories",
        "version": "2.0.1",
        "main": "index.js",
        "keywords": [
          "gatsby",
          "gatsby-plugin"
        ],
        "author": {
          "name": "Kyle Mathews",
          "email": "mathews.kyle@gmail.com"
        },
        "license": "MIT",
        "dependencies": [
          {
            "name": "@babel/runtime",
            "version": "^7.0.0"
          },
          {
            "name": "bluebird",
            "version": "^3.5.0"
          },
          {
            "name": "chokidar",
            "version": "^1.7.0"
          },
          {
            "name": "fs-exists-cached",
            "version": "^1.0.0"
          },
          {
            "name": "glob",
            "version": "^7.1.1"
          },
          {
            "name": "lodash",
            "version": "^4.17.10"
          },
          {
            "name": "parse-filepath",
            "version": "^1.0.1"
          },
          {
            "name": "slash",
            "version": "^1.0.0"
          }
        ],
        "devDependencies": [
          {
            "name": "@babel/cli",
            "version": "^7.0.0"
          },
          {
            "name": "@babel/core",
            "version": "^7.0.0"
          },
          {
            "name": "cross-env",
            "version": "^5.0.5"
          }
        ],
        "peerDependencies": [
          {
            "name": "gatsby",
            "version": ">2.0.0-alpha"
          }
        ],
        "optionalDependecies": [],
        "bundledDependecies": []
      },
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "6608b4ccfaccb6a15d852df0e7df9264",
        "type": "SitePlugin",
        "owner": "internal-data-bridge"
      }
    },
    "Site": {
      "siteMetadata": {
        "siteUrl": "https://www.majidhajian.com"
      },
      "port": "8000",
      "host": "localhost",
      "pathPrefix": "",
      "polyfill": true,
      "buildTime": "2018-10-29T14:07:08.267Z",
      "id": "Site",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "contentDigest": "1fac6208002b54298046a99d14b9061f",
        "type": "Site",
        "owner": "internal-data-bridge"
      }
    },
    "443ec3d9-5cf5-5dc0-9bef-109d49f50594": {
      "id": "443ec3d9-5cf5-5dc0-9bef-109d49f50594",
      "children": [],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "5ca66679d103e21acae2bedf7350bb02",
        "type": "Directory",
        "description": "Directory \"blog\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "post",
      "absolutePath": "/Users/majid/Projects/Personal/mhadaily.github.io/blog",
      "relativePath": "",
      "extension": "",
      "size": 160,
      "prettySize": "160 B",
      "modifiedTime": "2018-10-29T13:33:41.008Z",
      "accessTime": "2018-10-29T14:07:14.317Z",
      "changeTime": "2018-10-29T13:48:55.786Z",
      "birthTime": "2018-10-29T13:33:41.008Z",
      "root": "/",
      "dir": "/Users/majid/Projects/Personal/mhadaily.github.io",
      "base": "blog",
      "ext": "",
      "name": "blog",
      "relativeDirectory": "..",
      "dev": 16777220,
      "mode": 16877,
      "nlink": 5,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 19626783,
      "blocks": 0,
      "atimeMs": 1540822034317.2922,
      "mtimeMs": 1540820021008.262,
      "ctimeMs": 1540820935786.3428,
      "birthtimeMs": 1540820021007.8403,
      "atime": "2018-10-29T14:07:14.317Z",
      "mtime": "2018-10-29T13:33:41.008Z",
      "ctime": "2018-10-29T13:48:55.786Z",
      "birthtime": "2018-10-29T13:33:41.008Z"
    },
    "c8803eb4-932a-55d0-a59b-474141fa9d02": {
      "id": "c8803eb4-932a-55d0-a59b-474141fa9d02",
      "children": [
        "8d44fc67-497f-5a98-9566-a316ab6286db"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "cefc921810d0a4ac59814a2adf31fd78",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"blog/2016-12-07-mysql-import-using-pipeviewer.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "post",
      "absolutePath": "/Users/majid/Projects/Personal/mhadaily.github.io/blog/2016-12-07-mysql-import-using-pipeviewer.md",
      "relativePath": "2016-12-07-mysql-import-using-pipeviewer.md",
      "extension": "md",
      "size": 4139,
      "prettySize": "4.14 kB",
      "modifiedTime": "2018-10-29T13:50:51.853Z",
      "accessTime": "2018-10-29T13:50:36.416Z",
      "changeTime": "2018-10-29T13:50:51.853Z",
      "birthTime": "2018-10-29T13:33:41.008Z",
      "root": "/",
      "dir": "/Users/majid/Projects/Personal/mhadaily.github.io/blog",
      "base": "2016-12-07-mysql-import-using-pipeviewer.md",
      "ext": ".md",
      "name": "2016-12-07-mysql-import-using-pipeviewer",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 19626784,
      "blocks": 16,
      "atimeMs": 1540821036416.4026,
      "mtimeMs": 1540821051853.2346,
      "ctimeMs": 1540821051853.2346,
      "birthtimeMs": 1540820021007.9197,
      "atime": "2018-10-29T13:50:36.416Z",
      "mtime": "2018-10-29T13:50:51.853Z",
      "ctime": "2018-10-29T13:50:51.853Z",
      "birthtime": "2018-10-29T13:33:41.008Z"
    },
    "d61709f1-a6be-59df-a32d-f30395b759e1": {
      "id": "d61709f1-a6be-59df-a32d-f30395b759e1",
      "children": [
        "dfa733e0-c45d-5ce6-9566-d6babb618589"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "1ac13aed143a6b6edec6623ba0dabdff",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"blog/2016-12-08-converting-mysql-to-postgresql-using-pgloader.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "post",
      "absolutePath": "/Users/majid/Projects/Personal/mhadaily.github.io/blog/2016-12-08-converting-mysql-to-postgresql-using-pgloader.md",
      "relativePath": "2016-12-08-converting-mysql-to-postgresql-using-pgloader.md",
      "extension": "md",
      "size": 8256,
      "prettySize": "8.26 kB",
      "modifiedTime": "2018-10-29T13:50:51.848Z",
      "accessTime": "2018-10-29T13:50:36.416Z",
      "changeTime": "2018-10-29T13:50:51.848Z",
      "birthTime": "2018-10-29T13:33:41.008Z",
      "root": "/",
      "dir": "/Users/majid/Projects/Personal/mhadaily.github.io/blog",
      "base": "2016-12-08-converting-mysql-to-postgresql-using-pgloader.md",
      "ext": ".md",
      "name": "2016-12-08-converting-mysql-to-postgresql-using-pgloader",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 19626785,
      "blocks": 24,
      "atimeMs": 1540821036416.435,
      "mtimeMs": 1540821051848.3774,
      "ctimeMs": 1540821051848.3774,
      "birthtimeMs": 1540820021008.0793,
      "atime": "2018-10-29T13:50:36.416Z",
      "mtime": "2018-10-29T13:50:51.848Z",
      "ctime": "2018-10-29T13:50:51.848Z",
      "birthtime": "2018-10-29T13:33:41.008Z"
    },
    "7dafafe2-fc5f-5df3-97c6-1d3a8ca79389": {
      "id": "7dafafe2-fc5f-5df3-97c6-1d3a8ca79389",
      "children": [
        "97733994-8c9e-5380-b6b0-3eef063adda1"
      ],
      "parent": "___SOURCE___",
      "internal": {
        "contentDigest": "7146a52faa1b367a97d044c15eebf058",
        "type": "File",
        "mediaType": "text/markdown",
        "description": "File \"blog/2017-03-12-Angular2-Vue2-Ember-and-React-comparison.md\"",
        "owner": "gatsby-source-filesystem"
      },
      "sourceInstanceName": "post",
      "absolutePath": "/Users/majid/Projects/Personal/mhadaily.github.io/blog/2017-03-12-Angular2-Vue2-Ember-and-React-comparison.md",
      "relativePath": "2017-03-12-Angular2-Vue2-Ember-and-React-comparison.md",
      "extension": "md",
      "size": 18938,
      "prettySize": "18.9 kB",
      "modifiedTime": "2018-10-29T14:00:52.262Z",
      "accessTime": "2018-10-29T14:00:41.375Z",
      "changeTime": "2018-10-29T14:00:52.262Z",
      "birthTime": "2018-10-29T13:33:41.008Z",
      "root": "/",
      "dir": "/Users/majid/Projects/Personal/mhadaily.github.io/blog",
      "base": "2017-03-12-Angular2-Vue2-Ember-and-React-comparison.md",
      "ext": ".md",
      "name": "2017-03-12-Angular2-Vue2-Ember-and-React-comparison",
      "relativeDirectory": "",
      "dev": 16777220,
      "mode": 33188,
      "nlink": 1,
      "uid": 501,
      "gid": 20,
      "rdev": 0,
      "blksize": 4096,
      "ino": 19626786,
      "blocks": 40,
      "atimeMs": 1540821641374.9653,
      "mtimeMs": 1540821652262.3447,
      "ctimeMs": 1540821652262.3447,
      "birthtimeMs": 1540820021008.2556,
      "atime": "2018-10-29T14:00:41.375Z",
      "mtime": "2018-10-29T14:00:52.262Z",
      "ctime": "2018-10-29T14:00:52.262Z",
      "birthtime": "2018-10-29T13:33:41.008Z"
    },
    "8d44fc67-497f-5a98-9566-a316ab6286db": {
      "id": "8d44fc67-497f-5a98-9566-a316ab6286db",
      "children": [],
      "parent": "c8803eb4-932a-55d0-a59b-474141fa9d02",
      "internal": {
        "content": "\nOne of the common command on Linux is to compress or decompress files and folders. While it's easy to do, there is no progress bar\nfor usual command such as Tar, Zip, Importing to Database or Exporting logs. It may be interesting that there are lots of tools to use. However, I found \n[Pipe Viewer](http://www.ivarch.com/programs/pv.shtml) very handy and useful. \n\n**PV** _[Pipe Viewer]_ is a terminal-based tool for monitoring \nthe progress of data through a pipeline. It can be inserted into any normal pipeline between two processes to give a visual indication of \nhow quickly data is passing through, how long it has taken, how near to completion it is, and an estimate of how long it will be until completion.\n\n### Some of the benefits of using PV are:\n- Total data transferred\n- Time elapsed\n- Current throughput rate\n- Percentage completed\n- ETA\n\n### To Install PV, follow the guides below depends on your OS: \n\n* **CentOS / RHEL:**\tSet up my YUM repository or use RepoForge, then do `yum install pv`.\n* **Fedora:**\tRun `yum install pv`; the \"extras\" repository may be required.\n* **Debian / Ubuntu:**\tRun `apt-get install pv` to get the latest packaged version from `unstable` / `testing`.\n* **Slackware:**\tUse this SlackBuild script.\n* **Cygwin:**\tAvailable as a package.\n* **FreeBSD:** Listed on FreshPorts.\n* **OpenBSD:** Listed under ports.\n* **Solaris:** Download binary packages from OpenCSW.\n* **OpenSolaris:**\tIncludes pv version 1.1.4 in the `/dev` repository (as of build 119). Install with `pkg install SUNWpipe-viewer`.\n* **AIX:** An RPM from *Pawel Piatek* is in the downloads section.\n* **MacPorts:**\tRun `port install pv` to get the latest version. \n* **Mac HomeBrew:**\tRun `brew update & brew install pv` to get the latest version. \n* **Exherbo:**\tRun `cave resolve -x app-misc/pv` to get the latest version. \n* **Gentoo:**\tRun `emerge sys-apps/pv` to get the latest version. \n* **IRIX Nekoware:**\tAvailable in the *Nekoware* \"beta\" repository.\n\nAs an example, I would like to start with using PV while importing a dump of **MySQL** database. \n\nYou are able to import your `.sql` file into the database as easy as the command below:\n\n````\nmysql --user=username --password=password database_name < dump.sql\n````\n\nwhich in short is equivalent to \n\n````\nmysql -u username -p password database_name < dump.sql\n````\n\nAlthough it seems quite OK, It is not as helpful as it looks when you have a big file. \nWe might have considered better solution as we need to know the status of progress for our \nrecord. Therefore, here is the usage of PV while importing our dump. \n\n````\npv your_dump.sql | mysql -u root database_name\n````\n\nIn this case, you are able to see the progress bar just as below:\n\n![PV Status Bar](/assets/images/dec2016/pv-sample.jpg \"Pipe Viewer example\")\n\n### More examples to Monitor of PV data progress, sent via a Pipe:\n\n1- To copy a file called your_access.log to /tmp/something-access.log and show progress:\n\n````\npv your_access.log > /tmp/something-access.log\n````\n\n2- To compress a lot of files within a folder and seeing progress bar\n\n````\ntar cf - /folder-with-big-files -P | pv -s $(du -sb /folder-with-big-files | awk '{print $1}') | gzip > big-files.tar.gz\n````\n\n3- To watch how quickly a file is transferred using nc(1):\n\n````\npv file | nc -w 1 somewhere.com 3000\n````\n\n4- To transfer a file from another process and passing the expected size to pv:\n   \n````\ncat file | pv -s 12345 | nc -w 1 majidhajian.com 3000\n````\n\n5- To decompress a huge tar.gz file\n\n````\npv file.tgz | tar xzf - -C target_directory\n````\n\nAll in all, Result of all of them like I added a picture to show, is similar as follow:\n\n````\n12.16MB 0:00:20 [6.06MB/s] [==================>               ] 55%  ETA 0:00:37\n````\n\nI encourage you to read more about this amazing tool and be familiar with that. I have plan to \npublish another article about `screen` which is another great tool and combination of both, will make your\nlife as a developer more relaxed. \n\n\n",
        "type": "MarkdownRemark",
        "contentDigest": "e36f3ec4c3285a5c591a06806b6bf68b",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Progress status using PipeViewer while importing MySQL databases",
        "date": "2016-12-07",
        "category": "DevOps",
        "tags": [
          "linux",
          "mysql"
        ],
        "banner": "",
        "_PARENT": "c8803eb4-932a-55d0-a59b-474141fa9d02"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nOne of the common command on Linux is to compress or decompress files and folders. While it's easy to do, there is no progress bar\nfor usual command such as Tar, Zip, Importing to Database or Exporting logs. It may be interesting that there are lots of tools to use. However, I found \n[Pipe Viewer](http://www.ivarch.com/programs/pv.shtml) very handy and useful. \n\n**PV** _[Pipe Viewer]_ is a terminal-based tool for monitoring \nthe progress of data through a pipeline. It can be inserted into any normal pipeline between two processes to give a visual indication of \nhow quickly data is passing through, how long it has taken, how near to completion it is, and an estimate of how long it will be until completion.\n\n### Some of the benefits of using PV are:\n- Total data transferred\n- Time elapsed\n- Current throughput rate\n- Percentage completed\n- ETA\n\n### To Install PV, follow the guides below depends on your OS: \n\n* **CentOS / RHEL:**\tSet up my YUM repository or use RepoForge, then do `yum install pv`.\n* **Fedora:**\tRun `yum install pv`; the \"extras\" repository may be required.\n* **Debian / Ubuntu:**\tRun `apt-get install pv` to get the latest packaged version from `unstable` / `testing`.\n* **Slackware:**\tUse this SlackBuild script.\n* **Cygwin:**\tAvailable as a package.\n* **FreeBSD:** Listed on FreshPorts.\n* **OpenBSD:** Listed under ports.\n* **Solaris:** Download binary packages from OpenCSW.\n* **OpenSolaris:**\tIncludes pv version 1.1.4 in the `/dev` repository (as of build 119). Install with `pkg install SUNWpipe-viewer`.\n* **AIX:** An RPM from *Pawel Piatek* is in the downloads section.\n* **MacPorts:**\tRun `port install pv` to get the latest version. \n* **Mac HomeBrew:**\tRun `brew update & brew install pv` to get the latest version. \n* **Exherbo:**\tRun `cave resolve -x app-misc/pv` to get the latest version. \n* **Gentoo:**\tRun `emerge sys-apps/pv` to get the latest version. \n* **IRIX Nekoware:**\tAvailable in the *Nekoware* \"beta\" repository.\n\nAs an example, I would like to start with using PV while importing a dump of **MySQL** database. \n\nYou are able to import your `.sql` file into the database as easy as the command below:\n\n````\nmysql --user=username --password=password database_name < dump.sql\n````\n\nwhich in short is equivalent to \n\n````\nmysql -u username -p password database_name < dump.sql\n````\n\nAlthough it seems quite OK, It is not as helpful as it looks when you have a big file. \nWe might have considered better solution as we need to know the status of progress for our \nrecord. Therefore, here is the usage of PV while importing our dump. \n\n````\npv your_dump.sql | mysql -u root database_name\n````\n\nIn this case, you are able to see the progress bar just as below:\n\n![PV Status Bar](/assets/images/dec2016/pv-sample.jpg \"Pipe Viewer example\")\n\n### More examples to Monitor of PV data progress, sent via a Pipe:\n\n1- To copy a file called your_access.log to /tmp/something-access.log and show progress:\n\n````\npv your_access.log > /tmp/something-access.log\n````\n\n2- To compress a lot of files within a folder and seeing progress bar\n\n````\ntar cf - /folder-with-big-files -P | pv -s $(du -sb /folder-with-big-files | awk '{print $1}') | gzip > big-files.tar.gz\n````\n\n3- To watch how quickly a file is transferred using nc(1):\n\n````\npv file | nc -w 1 somewhere.com 3000\n````\n\n4- To transfer a file from another process and passing the expected size to pv:\n   \n````\ncat file | pv -s 12345 | nc -w 1 majidhajian.com 3000\n````\n\n5- To decompress a huge tar.gz file\n\n````\npv file.tgz | tar xzf - -C target_directory\n````\n\nAll in all, Result of all of them like I added a picture to show, is similar as follow:\n\n````\n12.16MB 0:00:20 [6.06MB/s] [==================>               ] 55%  ETA 0:00:37\n````\n\nI encourage you to read more about this amazing tool and be familiar with that. I have plan to \npublish another article about `screen` which is another great tool and combination of both, will make your\nlife as a developer more relaxed. \n\n\n",
      "fileAbsolutePath": "/Users/majid/Projects/Personal/mhadaily.github.io/blog/2016-12-07-mysql-import-using-pipeviewer.md",
      "fields": {
        "slug": "progress-status-using-pipe-viewer-while-importing-my-sql-databases"
      }
    },
    "dfa733e0-c45d-5ce6-9566-d6babb618589": {
      "id": "dfa733e0-c45d-5ce6-9566-d6babb618589",
      "children": [],
      "parent": "d61709f1-a6be-59df-a32d-f30395b759e1",
      "internal": {
        "content": "\n## Decision made\n\nWhile we were developing our *affiliate manager software* in my company, we (development team) decided to migrate raw data from \na 3rd party **MySQL**(MariaDB) database which company was using to our **Rails** default db engine which was **PostgresSQL**. \nThus, I was assigned to do this task. \n\nI went through many available tools and tested as much as possible. I could not make sure they all are capable \nof handling such a massive sql file. I was about to decide witting a migration script with **NodeJS** that \nI finally found [Pgloader](http://pgloader.io/) by [Dimitri Fontaine](https://twitter.com/tapoueh). \n\nFirst, It looked to me very promising and I said to myself: \"Yes, this is it.\". Before counting, let me say what is Pgloader. \n\n<blockquote>pgloader is a data loading tool for PostgreSQL, using the COPY command.\nIts main advantage over just using COPY or \\copy, and over using a Foreign Data Wrapper, is its transaction behaviour, where pgloader will keep a separate file of rejected data, but continue trying to copy good data in your database.\nThe default PostgreSQL behaviour is transactional, which means that any erroneous line in the input data (file or remote database) will stop the entire bulk load for the table.\npgloader also implements data reformatting, a typical example of that being the transformation of MySQL datestamps 0000-00-00 and 0000-00-00 00:00:00 to PostgreSQL NULL value (because our calendar never had a year zero).\n</blockquote>\n\n\nI started testing that with different circumstances and all test was pretty good. Therefore, I gave it a try and \nrun the final command to migrate that the result was pretty awesome in my Mac and I was excited though:\n\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Successfully migrated from <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> 5 to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> 9.5, roughly 16GB data, thanks to <a href=\"https://twitter.com/tapoueh\">@tapoueh</a> for a fantastic <a href=\"https://twitter.com/hashtag/pgloader?src=hash\">#pgloader</a> tool <a href=\"https://t.co/8lDziCnJqV\">pic.twitter.com/8lDziCnJqV</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/806763214092414976\">December 8, 2016</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nAlthough, everything was pretty good on my local machine while I wanted to do that in our **EC2**, I faced with many difficulties as\nour server was not as perfect as my local machine with a low memory as small as 512MB until I made [ClozureCL](http://ccl.clozure.com/) on the Ubuntu as a default \ncompiler for [Lisp](https://www.common-lisp.net/) which is written's lagrange of Pgloader and performance was incredibly unbelievable. \n \n <blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/ClozureCL?src=hash\">#ClozureCL</a> instead of <a href=\"https://twitter.com/hashtag/SBCL?src=hash\">#SBCL</a> while migrating <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> with 16GB data on <a href=\"https://twitter.com/hashtag/AWS?src=hash\">#AWS</a> <a href=\"https://twitter.com/hashtag/EC2?src=hash\">#EC2</a> 512MB RAM!! That&#39;s awesome, thanks <a href=\"https://twitter.com/tapoueh\">@tapoueh</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/807632035300769792\">December 10, 2016</a></blockquote>\n <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n \nI encourage you to watch this video : [http://pgloader.io/](Why did pgloader get so much faster?). \n\nEven though, many different ways of conversions are provided by Pgloader, I pick only migration from Mysql part and write my experience with that.\nHowever, feel free to check Pgloader website's documentation and do more with less!\n \n \n## Pgloader installation\n\nHopefully, Pgloader developed with increasing productivity and performance in mind. So, it is predictable that installing \nthis tools would be as easy as a command. To start with that you can read [Quick Start](http://pgloader.io/howto/quickstart.html) on pgloader.io. \n\nBinary build are available on distributions where pgloader is packaged, which currently includes only **debian** and **apt.postgresql.org** which covers both **debian** and **ubuntu** Operating Systems.\n\nNote that pgloader is easy enough to build from sources, see pgloader INSTALL.md file. For RPM based systems, see also the bootstrap-centos7.sh script that prepares your build environment so that building is then just a git clone then make away.\n\nBuilding for the **Windows™ Operating System** is easy enough and the platform is fully supported.\n\n \n* **Mac** `brew install pgloader`\n* **Ubuntu** `apt-get install pgloader`\n* **Docker**: You can also use a docker image for pgloader at https://hub.docker.com/r/dimitri/pgloader/ \n\n````\n$ docker pull dimitri/pgloader\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --version\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --help\n````\n* **Build From Source** Pgloader is now a Common Lisp program, tested using the SBCL (>= 1.1.14) and Clozure CL implementations with Quicklisp.\n\n````\napt-get install sbcl unzip libsqlite3-dev make curl gawk freetds-dev libzip-dev\ncd /path/to/pgloader\nmake pgloader\n./build/bin/pgloader --help\n````\n* **Repository**: [To learn more information](https://github.com/dimitri/pgloader)\n\nPlease feel free to drop me an email if you need more help.\n\n## Better Performance with ClozureCL \n\nOne of the important problem that I faced, was low memory and killing process by pgloader on our EC2 which has 512MB ram. So, \nDimitri in one of the issue on Github Suggest to use CCL instead of SBCL so I also recommend to do it as the performance is significantly\nbetter and no issue in dropping process because lack of memory. \n\nThe preferred way to get Clozure CL is via Subversion. For example, to get Clozure CL 1.11 for Darwin/x86, you'd type (where the $ is the shell prompt):\n\n````\nsvn co http://svn.clozure.com/publicsvn/openmcl/release/1.11/darwinx86/ccl\n````\n\nPlease follow all the steps (here)(http://ccl.clozure.com/download.html) and after making that done remember to make Pgloader with CCL as follow:\n\n````\nmake CL=ccl pgloader\n````\nNow, We are all good to begin.\n\n## Migrating from MySQL\n\nJust create a database where to host the MySQL data and definitions and have pgloader do the migration for you in a single command line:\n\n```\ncreatedb pgdb\n```  \n\na single simple command to start, is just as easy as:\n\n````\npgloader mysql://user@localhost/mydb postgresql:///pgdb \n````\n\nwhere you can expand your Postgresql link as such:\n\n````\npostgres://username:password@server:port/databasename\n````\n\nbut it my not be enough. For instance, if you are connection to a remote database such a database on **Heroku** where \nit consumes SSL as default, you need to add your params to the url to enable ssl, so command would be as below:\n\n````\npostgres://username:password@server:port/databasename?sslmode=require\n````\n\nSo, if you want to load your pg dump to Heroku you can run as simple as:\n\n````\nheroku pg:psql HEROKU_POSTGRESQL_GREEN_URL --app YOUR_APP_NAME_HERE < pgdump\n````\n\n\n## Common issues\n\nYou may see the following error for first time: `this is incompatible with sql_mode=only_full_group_by`\nbut no worries you can easily bypass that. \nYou can try to disable the only_full_group_by setting by executing the following:\n\n````\nmysql> set global sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';\n````\nor \n\n````\nmysql> set session sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';\n````\n\nI hope you find this post helpful and feel free to drop an email your feedback which is already appreciated.\n",
        "type": "MarkdownRemark",
        "contentDigest": "3e612ceefb39b9993f0b634ffb150137",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Pgloader makes that easy to migrate From Mysql to Postgresql",
        "date": "2016-12-08",
        "category": "DevOps",
        "tags": [
          "databases",
          "mysql",
          "postgresql"
        ],
        "banner": "",
        "_PARENT": "d61709f1-a6be-59df-a32d-f30395b759e1"
      },
      "excerpt": "",
      "rawMarkdownBody": "\n## Decision made\n\nWhile we were developing our *affiliate manager software* in my company, we (development team) decided to migrate raw data from \na 3rd party **MySQL**(MariaDB) database which company was using to our **Rails** default db engine which was **PostgresSQL**. \nThus, I was assigned to do this task. \n\nI went through many available tools and tested as much as possible. I could not make sure they all are capable \nof handling such a massive sql file. I was about to decide witting a migration script with **NodeJS** that \nI finally found [Pgloader](http://pgloader.io/) by [Dimitri Fontaine](https://twitter.com/tapoueh). \n\nFirst, It looked to me very promising and I said to myself: \"Yes, this is it.\". Before counting, let me say what is Pgloader. \n\n<blockquote>pgloader is a data loading tool for PostgreSQL, using the COPY command.\nIts main advantage over just using COPY or \\copy, and over using a Foreign Data Wrapper, is its transaction behaviour, where pgloader will keep a separate file of rejected data, but continue trying to copy good data in your database.\nThe default PostgreSQL behaviour is transactional, which means that any erroneous line in the input data (file or remote database) will stop the entire bulk load for the table.\npgloader also implements data reformatting, a typical example of that being the transformation of MySQL datestamps 0000-00-00 and 0000-00-00 00:00:00 to PostgreSQL NULL value (because our calendar never had a year zero).\n</blockquote>\n\n\nI started testing that with different circumstances and all test was pretty good. Therefore, I gave it a try and \nrun the final command to migrate that the result was pretty awesome in my Mac and I was excited though:\n\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Successfully migrated from <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> 5 to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> 9.5, roughly 16GB data, thanks to <a href=\"https://twitter.com/tapoueh\">@tapoueh</a> for a fantastic <a href=\"https://twitter.com/hashtag/pgloader?src=hash\">#pgloader</a> tool <a href=\"https://t.co/8lDziCnJqV\">pic.twitter.com/8lDziCnJqV</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/806763214092414976\">December 8, 2016</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nAlthough, everything was pretty good on my local machine while I wanted to do that in our **EC2**, I faced with many difficulties as\nour server was not as perfect as my local machine with a low memory as small as 512MB until I made [ClozureCL](http://ccl.clozure.com/) on the Ubuntu as a default \ncompiler for [Lisp](https://www.common-lisp.net/) which is written's lagrange of Pgloader and performance was incredibly unbelievable. \n \n <blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/ClozureCL?src=hash\">#ClozureCL</a> instead of <a href=\"https://twitter.com/hashtag/SBCL?src=hash\">#SBCL</a> while migrating <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> with 16GB data on <a href=\"https://twitter.com/hashtag/AWS?src=hash\">#AWS</a> <a href=\"https://twitter.com/hashtag/EC2?src=hash\">#EC2</a> 512MB RAM!! That&#39;s awesome, thanks <a href=\"https://twitter.com/tapoueh\">@tapoueh</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/807632035300769792\">December 10, 2016</a></blockquote>\n <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n \nI encourage you to watch this video : [http://pgloader.io/](Why did pgloader get so much faster?). \n\nEven though, many different ways of conversions are provided by Pgloader, I pick only migration from Mysql part and write my experience with that.\nHowever, feel free to check Pgloader website's documentation and do more with less!\n \n \n## Pgloader installation\n\nHopefully, Pgloader developed with increasing productivity and performance in mind. So, it is predictable that installing \nthis tools would be as easy as a command. To start with that you can read [Quick Start](http://pgloader.io/howto/quickstart.html) on pgloader.io. \n\nBinary build are available on distributions where pgloader is packaged, which currently includes only **debian** and **apt.postgresql.org** which covers both **debian** and **ubuntu** Operating Systems.\n\nNote that pgloader is easy enough to build from sources, see pgloader INSTALL.md file. For RPM based systems, see also the bootstrap-centos7.sh script that prepares your build environment so that building is then just a git clone then make away.\n\nBuilding for the **Windows™ Operating System** is easy enough and the platform is fully supported.\n\n \n* **Mac** `brew install pgloader`\n* **Ubuntu** `apt-get install pgloader`\n* **Docker**: You can also use a docker image for pgloader at https://hub.docker.com/r/dimitri/pgloader/ \n\n````\n$ docker pull dimitri/pgloader\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --version\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --help\n````\n* **Build From Source** Pgloader is now a Common Lisp program, tested using the SBCL (>= 1.1.14) and Clozure CL implementations with Quicklisp.\n\n````\napt-get install sbcl unzip libsqlite3-dev make curl gawk freetds-dev libzip-dev\ncd /path/to/pgloader\nmake pgloader\n./build/bin/pgloader --help\n````\n* **Repository**: [To learn more information](https://github.com/dimitri/pgloader)\n\nPlease feel free to drop me an email if you need more help.\n\n## Better Performance with ClozureCL \n\nOne of the important problem that I faced, was low memory and killing process by pgloader on our EC2 which has 512MB ram. So, \nDimitri in one of the issue on Github Suggest to use CCL instead of SBCL so I also recommend to do it as the performance is significantly\nbetter and no issue in dropping process because lack of memory. \n\nThe preferred way to get Clozure CL is via Subversion. For example, to get Clozure CL 1.11 for Darwin/x86, you'd type (where the $ is the shell prompt):\n\n````\nsvn co http://svn.clozure.com/publicsvn/openmcl/release/1.11/darwinx86/ccl\n````\n\nPlease follow all the steps (here)(http://ccl.clozure.com/download.html) and after making that done remember to make Pgloader with CCL as follow:\n\n````\nmake CL=ccl pgloader\n````\nNow, We are all good to begin.\n\n## Migrating from MySQL\n\nJust create a database where to host the MySQL data and definitions and have pgloader do the migration for you in a single command line:\n\n```\ncreatedb pgdb\n```  \n\na single simple command to start, is just as easy as:\n\n````\npgloader mysql://user@localhost/mydb postgresql:///pgdb \n````\n\nwhere you can expand your Postgresql link as such:\n\n````\npostgres://username:password@server:port/databasename\n````\n\nbut it my not be enough. For instance, if you are connection to a remote database such a database on **Heroku** where \nit consumes SSL as default, you need to add your params to the url to enable ssl, so command would be as below:\n\n````\npostgres://username:password@server:port/databasename?sslmode=require\n````\n\nSo, if you want to load your pg dump to Heroku you can run as simple as:\n\n````\nheroku pg:psql HEROKU_POSTGRESQL_GREEN_URL --app YOUR_APP_NAME_HERE < pgdump\n````\n\n\n## Common issues\n\nYou may see the following error for first time: `this is incompatible with sql_mode=only_full_group_by`\nbut no worries you can easily bypass that. \nYou can try to disable the only_full_group_by setting by executing the following:\n\n````\nmysql> set global sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';\n````\nor \n\n````\nmysql> set session sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';\n````\n\nI hope you find this post helpful and feel free to drop an email your feedback which is already appreciated.\n",
      "fileAbsolutePath": "/Users/majid/Projects/Personal/mhadaily.github.io/blog/2016-12-08-converting-mysql-to-postgresql-using-pgloader.md",
      "fields": {
        "slug": "pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql"
      }
    },
    "97733994-8c9e-5380-b6b0-3eef063adda1": {
      "id": "97733994-8c9e-5380-b6b0-3eef063adda1",
      "children": [],
      "parent": "7dafafe2-fc5f-5df3-97c6-1d3a8ca79389",
      "internal": {
        "content": "\nIt is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using \nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:  [Live Demo - Vue.js Shop](https://www.majidhajian.com/vue2-shop/)\n\nIn the battle of front-end frameworks, these days, I feel I am confused that how to answer my question about \"which frameworks should I choose?\". \nAs a passionate Javascript developer, it is super tough to choose between the following frameworks or libraries to start a new project. All of them come with pros and cons as well as perfect features that makes you impressed and as confused as you are not able to stick on one. \n\nI tend to wrap up my research and experiences as a single table which can be reviewed below:\n<div style=\"overflow-x:auto;\">\n\n|                               | Ember.js                                                                               | Angular 2                                                                                                                                                 | Vue.js 2                                                                                           | React.js                                           |\n|-------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------|----------------------------------------------------|\n| Github Star                   | 17,620                                                                                 | 55,021 + 21,572                                                                                                                                           | 46,272                                                                                             | 61,653                                             |\n| Contributors                  | 651                                                                                    | 1571 + 408                                                                                                                                                | 84                                                                                                 | 954                                                |\n| Stackoverflow                 | 20,822                                                                                 | 40,374                                                                                                                                                    | 4,789                                                                                              | 35,846                                             |\n| Reactive Programming          | Not in the core - Addon : RxEmber - not up to date                                     | RxJs 5, In the core                                                                                                                                       | Partially in the core, Fully with addon                                                            | Not in the core, very good plugin                  |\n| State Management              | Ember Data - core  Ember-Redux addon                                                   | Observable Stream in core, Two perfect plugin for Redux One is a wrapper Redux =-angular and one is based on Redux but it has its own API, Ng-redux/store | Vuex which considers as Core addon                                                                 | React-Redux supports with community                |\n| Functional Programing         | yes                                                                                    | yes                                                                                                                                                       | yes                                                                                                | yes                                                |\n| Isomorphic                    | Fast-boot Still beta                                                                   | Universal, part of the core                                                                                                                               | different plugin, Nuxt, vue-server-renderer                                                         | different approach, mostly good                    |\n| Native App Or Hybrid App      | different addons such as ember-cli-cordova                                             | NativeScript port                                                                                                                                         | weex, still under development from Alibaba                                                         | React Native                                       |\n| Browser Support               | IE9+                                                                                   | IE10+ , Polyfill for IE9                                                                                                                                  | IE9+                                                                                               | IE9+                                               |\n| Animation Support             | with addon                                                                             | In core, @angular/animation                                                                                                                               | in core Transition                                                                                 | Addon                                              |\n| Bundler                       | Broccoli, however can be port to webpack and rollupjs                                  | Webpack, completely ready to be use with System.js or Rollup.js                                                                                           | webpack, can be port to different bundler                                                          | webpack can be port to different bundler           |\n| App Structure                 | Strictly Opinionated                                                                   | Partially Opinionated                                                                                                                                     | unopinionated                                                                                      | unopinionated                                      |\n| Sponsor                       | Tilde INC                                                                              | Google                                                                                                                                                    | Evan You! but to be adapted by Alibaba                                                             | Facebook                                           |\n| Typescript Support            | Through Addon with Pain, However, ES6 is more than enough for Ember                    | Core                                                                                                                                                      | can be port to typescript however can be painful while using addon due to lack of proper typing    | possible, however JSX is powerful enough           |\n| Lazy Loading                  | with Addon, natively needs more develop, however, result is aswesome                   | in Core with ng router and webpack                                                                                                                        | in core with vue-router and webpack                                                                | addon with react-router and webpack                |\n| Framework Architecture        | MVVM                                                                                   | MVVM + Modular system through Component Architecture                                                                                                      | VM and component architecture                                                                      | VM and component architecture                      |\n| Tree Shaking                  | Addon for broccoli                                                                     | webpack2 supports                                                                                                                                         | webpack2 supports                                                                                  | webpack2 supports                                  |\n| Deployment                    | wide range of platforms with Ember-cli-deploy as easy as one command !!                | through addons with great support and less configuration,However, good pipeline for deployment                                                            | Not really have  good pipeline and can be painful to design, however, many good examples are found | wide rang of possibilities with Zero configuration |\n| Unit Test                     | Qunit but not limited to                                                               | Jasmine but not limited to                                                                                                                                | Mocha but not limited to                                                                           | Jest but not limited to                            |\n| Test Runner                   | Karma                                                                                  | Karma                                                                                                                                                     | Karma                                                                                              | Karma                                              |\n| End-to-End (integration) Test | ember-testing,and can be integrated with different approach however, it may be painful | protractor and can be integrated with different approach however, it may be painful                                                                       | Nightwatch or Testcafe                                                                             | Selenium WebDriver and many more                   |\n| Learning Curve                | Advanced                                                                               | Advanced                                                                                                                                                  | Simple                                                                                             | Simple                                             |\n| Enterprise Adaptability       | YES, specially with Ember Engine                                                       | Recommend for this section                                                                                                                                | apparently it is however, not much real example                                                    | Yes                                                |\n| Code Complexity               | Mature SDK like Rails                                                                  | Well-rich   framework like Java based frameworks                                                                                                          | Library                                                                                            | Library                                            |\n| Chrome Debugger               | YES                                                                                    | YES                                                                                                                                                       | YES                                                                                                | YES                                                |\n| Progressive web app           | Addon                                                                                  | Addon and webpack plugin                                                                                                                                  | Addon,and webpack plugin                                                                           | Addon,and webpack plugin                           |\n| Job Opportunity               | not that much                                                                          | A lot                                                                                                                                                     | rarely                                                                                             | A lot                                              |\n| Directive                     | yes but different approach                                                             | yes                                                                                                                                                       | yes                                                                                                | yes                                                |\n| Data binding                  | Two way, very efficient                                                                | Two way, super efficient                                                                                                                                  | Two way, super efficient                                                                           | Two way, super efficient                           |\n| Filter, Pipe, mixin, helper   | All supported                                                                          | All supported                                                                                                                                             | All supported                                                                                      | All supported                                      |\n| Event Binding                 | yes such as on-submit, also using actions                                              | yes such as ng-click and also using Emitter                                                                                                               | Yes such as v-on and also using Methods                                                            | yes such as onclick and also using methods         |\n\n</div>\n## Performance\n \n All have been developed with performance in mind,however, they are fairly similar with a minor differences which in my \n opinion, it ready does not matter in the end. The chart below shows that the final results is pretty much similar with little milliseconds discrepancies.\n \n![Quick Performance comparison](/assets/images/march2017/performance.jpg \"quick performance comparison\"){:class=\"img-responsive\"}\n\nBenchmarked by: [js-framework-benchmark](https://github.com/krausest/js-framework-benchmark)\nCredited to: [stefan krause](http://www.stefankrause.net/wp/?p=392) \n \n## Which one to choose?\n\nAs you see, There are many similarities between them, although they tend to follow their mindset. All of them are awesome \nand all of their works is highly appreciated. However, at the end of the day, we need to choose one in our team, therefore, \nhere is my opinion. \n\n### Ember.js\n\nAn awesome framework and as its builders say, it is going to be a SDK for web. Although learning ember doest not seem easy, it is\na fact that if you get used to it, you are not able to abandon it! I personally believe (as a one year Ember developer), it's by far\none of the best in Front-end technology and should be used for Semi-enterprise to enterprise application where all developers\nare mostly senior. Moreover, finding senior and ember developer should not be that much difficult for the company in order to expand the team in the future. \n\n### Angular 2\n\nWell, it has been designed to mitigate performance, productivity and unique codebase between different platforms. Hence, indeed, they did a great job can could achieve their goals. \nAngular's roadmap is very distinctive. One of the main strengths of Angular team is to be backed by Google. However, it's should be considered only for enterprise application.\n \n### Vue.js\n\nNothing can be easier than Vue.js. Super slim and easy to learn. Vue's goal tends to stick on pure javascript object and functionality rather than make that complex. \nHence, Vue's performance has slightly better than other rivals and make that easy to learn and very handy to have a quick project. However, due to less community members and obscured\nroadmap as well as lack of large well-tested application in production, I am still doubtful to say it can be use in enterprise while it is the best to start\nfor small and medium applications. \n\n### React.js\n\nWell, nothing to say. It's perfect at every single aspect. Although I personally do not like to write JSX code, I would say it is the \nmost powerful approach that I have seen so far. React is a tiny library to manipulate the DOM which fits small project need, whereas it can be powerful enough when it combines with other addons to build a enterprise app. In one word, \n \n \n## So what do I prefer finally?\n\nIn my perspective, choosing of the above frameworks is completely depends on your projects, the future of that and more importantly\nthe company and the team that you are working with. For some, it's is important to see huge backers and obvious roadmap then you should consider React and Angular2 while others think simplicity is the most important one then \nyou definitely should consider Vue.js. \n\nLike I said, I am a passionate Javascript developer and I love all of them. However, last but not least, my personal choices would be: 1- Angular, 2- Ember, 3- React and 4- Vue. \n\nMy advice is \"do not spend to much time to choose between one of the frameworks named above, in fact, find the one that is the most desirable and adaptable among team's developers or you feel comfortable the most.\"\n",
        "type": "MarkdownRemark",
        "contentDigest": "a60aa67f4292e70b960250bc990d0cb9",
        "owner": "gatsby-transformer-remark",
        "fieldOwners": {
          "slug": "default-site-plugin"
        }
      },
      "frontmatter": {
        "title": "Which one should I choose? Angular 2, Vue.js, React.js and Ember.js?",
        "date": "2017-03-12",
        "category": "Frontend",
        "tags": [
          "Angular",
          "React",
          "Vue.js",
          "Ember.js"
        ],
        "banner": "",
        "_PARENT": "7dafafe2-fc5f-5df3-97c6-1d3a8ca79389"
      },
      "excerpt": "",
      "rawMarkdownBody": "\nIt is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using \nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:  [Live Demo - Vue.js Shop](https://www.majidhajian.com/vue2-shop/)\n\nIn the battle of front-end frameworks, these days, I feel I am confused that how to answer my question about \"which frameworks should I choose?\". \nAs a passionate Javascript developer, it is super tough to choose between the following frameworks or libraries to start a new project. All of them come with pros and cons as well as perfect features that makes you impressed and as confused as you are not able to stick on one. \n\nI tend to wrap up my research and experiences as a single table which can be reviewed below:\n<div style=\"overflow-x:auto;\">\n\n|                               | Ember.js                                                                               | Angular 2                                                                                                                                                 | Vue.js 2                                                                                           | React.js                                           |\n|-------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------|----------------------------------------------------|\n| Github Star                   | 17,620                                                                                 | 55,021 + 21,572                                                                                                                                           | 46,272                                                                                             | 61,653                                             |\n| Contributors                  | 651                                                                                    | 1571 + 408                                                                                                                                                | 84                                                                                                 | 954                                                |\n| Stackoverflow                 | 20,822                                                                                 | 40,374                                                                                                                                                    | 4,789                                                                                              | 35,846                                             |\n| Reactive Programming          | Not in the core - Addon : RxEmber - not up to date                                     | RxJs 5, In the core                                                                                                                                       | Partially in the core, Fully with addon                                                            | Not in the core, very good plugin                  |\n| State Management              | Ember Data - core  Ember-Redux addon                                                   | Observable Stream in core, Two perfect plugin for Redux One is a wrapper Redux =-angular and one is based on Redux but it has its own API, Ng-redux/store | Vuex which considers as Core addon                                                                 | React-Redux supports with community                |\n| Functional Programing         | yes                                                                                    | yes                                                                                                                                                       | yes                                                                                                | yes                                                |\n| Isomorphic                    | Fast-boot Still beta                                                                   | Universal, part of the core                                                                                                                               | different plugin, Nuxt, vue-server-renderer                                                         | different approach, mostly good                    |\n| Native App Or Hybrid App      | different addons such as ember-cli-cordova                                             | NativeScript port                                                                                                                                         | weex, still under development from Alibaba                                                         | React Native                                       |\n| Browser Support               | IE9+                                                                                   | IE10+ , Polyfill for IE9                                                                                                                                  | IE9+                                                                                               | IE9+                                               |\n| Animation Support             | with addon                                                                             | In core, @angular/animation                                                                                                                               | in core Transition                                                                                 | Addon                                              |\n| Bundler                       | Broccoli, however can be port to webpack and rollupjs                                  | Webpack, completely ready to be use with System.js or Rollup.js                                                                                           | webpack, can be port to different bundler                                                          | webpack can be port to different bundler           |\n| App Structure                 | Strictly Opinionated                                                                   | Partially Opinionated                                                                                                                                     | unopinionated                                                                                      | unopinionated                                      |\n| Sponsor                       | Tilde INC                                                                              | Google                                                                                                                                                    | Evan You! but to be adapted by Alibaba                                                             | Facebook                                           |\n| Typescript Support            | Through Addon with Pain, However, ES6 is more than enough for Ember                    | Core                                                                                                                                                      | can be port to typescript however can be painful while using addon due to lack of proper typing    | possible, however JSX is powerful enough           |\n| Lazy Loading                  | with Addon, natively needs more develop, however, result is aswesome                   | in Core with ng router and webpack                                                                                                                        | in core with vue-router and webpack                                                                | addon with react-router and webpack                |\n| Framework Architecture        | MVVM                                                                                   | MVVM + Modular system through Component Architecture                                                                                                      | VM and component architecture                                                                      | VM and component architecture                      |\n| Tree Shaking                  | Addon for broccoli                                                                     | webpack2 supports                                                                                                                                         | webpack2 supports                                                                                  | webpack2 supports                                  |\n| Deployment                    | wide range of platforms with Ember-cli-deploy as easy as one command !!                | through addons with great support and less configuration,However, good pipeline for deployment                                                            | Not really have  good pipeline and can be painful to design, however, many good examples are found | wide rang of possibilities with Zero configuration |\n| Unit Test                     | Qunit but not limited to                                                               | Jasmine but not limited to                                                                                                                                | Mocha but not limited to                                                                           | Jest but not limited to                            |\n| Test Runner                   | Karma                                                                                  | Karma                                                                                                                                                     | Karma                                                                                              | Karma                                              |\n| End-to-End (integration) Test | ember-testing,and can be integrated with different approach however, it may be painful | protractor and can be integrated with different approach however, it may be painful                                                                       | Nightwatch or Testcafe                                                                             | Selenium WebDriver and many more                   |\n| Learning Curve                | Advanced                                                                               | Advanced                                                                                                                                                  | Simple                                                                                             | Simple                                             |\n| Enterprise Adaptability       | YES, specially with Ember Engine                                                       | Recommend for this section                                                                                                                                | apparently it is however, not much real example                                                    | Yes                                                |\n| Code Complexity               | Mature SDK like Rails                                                                  | Well-rich   framework like Java based frameworks                                                                                                          | Library                                                                                            | Library                                            |\n| Chrome Debugger               | YES                                                                                    | YES                                                                                                                                                       | YES                                                                                                | YES                                                |\n| Progressive web app           | Addon                                                                                  | Addon and webpack plugin                                                                                                                                  | Addon,and webpack plugin                                                                           | Addon,and webpack plugin                           |\n| Job Opportunity               | not that much                                                                          | A lot                                                                                                                                                     | rarely                                                                                             | A lot                                              |\n| Directive                     | yes but different approach                                                             | yes                                                                                                                                                       | yes                                                                                                | yes                                                |\n| Data binding                  | Two way, very efficient                                                                | Two way, super efficient                                                                                                                                  | Two way, super efficient                                                                           | Two way, super efficient                           |\n| Filter, Pipe, mixin, helper   | All supported                                                                          | All supported                                                                                                                                             | All supported                                                                                      | All supported                                      |\n| Event Binding                 | yes such as on-submit, also using actions                                              | yes such as ng-click and also using Emitter                                                                                                               | Yes such as v-on and also using Methods                                                            | yes such as onclick and also using methods         |\n\n</div>\n## Performance\n \n All have been developed with performance in mind,however, they are fairly similar with a minor differences which in my \n opinion, it ready does not matter in the end. The chart below shows that the final results is pretty much similar with little milliseconds discrepancies.\n \n![Quick Performance comparison](/assets/images/march2017/performance.jpg \"quick performance comparison\"){:class=\"img-responsive\"}\n\nBenchmarked by: [js-framework-benchmark](https://github.com/krausest/js-framework-benchmark)\nCredited to: [stefan krause](http://www.stefankrause.net/wp/?p=392) \n \n## Which one to choose?\n\nAs you see, There are many similarities between them, although they tend to follow their mindset. All of them are awesome \nand all of their works is highly appreciated. However, at the end of the day, we need to choose one in our team, therefore, \nhere is my opinion. \n\n### Ember.js\n\nAn awesome framework and as its builders say, it is going to be a SDK for web. Although learning ember doest not seem easy, it is\na fact that if you get used to it, you are not able to abandon it! I personally believe (as a one year Ember developer), it's by far\none of the best in Front-end technology and should be used for Semi-enterprise to enterprise application where all developers\nare mostly senior. Moreover, finding senior and ember developer should not be that much difficult for the company in order to expand the team in the future. \n\n### Angular 2\n\nWell, it has been designed to mitigate performance, productivity and unique codebase between different platforms. Hence, indeed, they did a great job can could achieve their goals. \nAngular's roadmap is very distinctive. One of the main strengths of Angular team is to be backed by Google. However, it's should be considered only for enterprise application.\n \n### Vue.js\n\nNothing can be easier than Vue.js. Super slim and easy to learn. Vue's goal tends to stick on pure javascript object and functionality rather than make that complex. \nHence, Vue's performance has slightly better than other rivals and make that easy to learn and very handy to have a quick project. However, due to less community members and obscured\nroadmap as well as lack of large well-tested application in production, I am still doubtful to say it can be use in enterprise while it is the best to start\nfor small and medium applications. \n\n### React.js\n\nWell, nothing to say. It's perfect at every single aspect. Although I personally do not like to write JSX code, I would say it is the \nmost powerful approach that I have seen so far. React is a tiny library to manipulate the DOM which fits small project need, whereas it can be powerful enough when it combines with other addons to build a enterprise app. In one word, \n \n \n## So what do I prefer finally?\n\nIn my perspective, choosing of the above frameworks is completely depends on your projects, the future of that and more importantly\nthe company and the team that you are working with. For some, it's is important to see huge backers and obvious roadmap then you should consider React and Angular2 while others think simplicity is the most important one then \nyou definitely should consider Vue.js. \n\nLike I said, I am a passionate Javascript developer and I love all of them. However, last but not least, my personal choices would be: 1- Angular, 2- Ember, 3- React and 4- Vue. \n\nMy advice is \"do not spend to much time to choose between one of the frameworks named above, in fact, find the one that is the most desirable and adaptable among team's developers or you feel comfortable the most.\"\n",
      "fileAbsolutePath": "/Users/majid/Projects/Personal/mhadaily.github.io/blog/2017-03-12-Angular2-Vue2-Ember-and-React-comparison.md",
      "fields": {
        "slug": "which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js"
      }
    },
    "SitePage /blog": {
      "jsonName": "blog-c06",
      "internalComponentName": "ComponentBlog",
      "path": "/blog",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Blog.tsx",
      "componentChunkName": "component---src-templates-blog-tsx",
      "context": {
        "limit": 4,
        "skip": 0,
        "totalPages": 1,
        "currentPage": 1
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Blog.tsx",
      "id": "SitePage /blog",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "1ed3711b47b0d19e7937c2c7f90cbba2",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /categories": {
      "jsonName": "categories-b0b",
      "internalComponentName": "ComponentCategories",
      "path": "/categories",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/AllCategory.tsx",
      "componentChunkName": "component---src-templates-all-category-tsx",
      "context": {
        "categories": [
          "DevOps",
          "Frontend"
        ]
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/AllCategory.tsx",
      "id": "SitePage /categories",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "c36f434328bc82bfdec70e29978cabbc",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /categories/dev-ops": {
      "jsonName": "categories-dev-ops-42f",
      "internalComponentName": "ComponentCategoriesDevOps",
      "path": "/categories/dev-ops",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Category.tsx",
      "componentChunkName": "component---src-templates-category-tsx",
      "context": {
        "posts": [
          {
            "excerpt": "Decision made While we were developing our  affiliate manager software  in my company, we (development team) decided to migrate raw data from \na 3rd party  MySQL (MariaDB) database which company was using to our  Rails  default db engine which was…",
            "html": "<h2 id=\"decision-made\"><a href=\"#decision-made\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Decision made</h2>\n<p>While we were developing our <em>affiliate manager software</em> in my company, we (development team) decided to migrate raw data from\na 3rd party <strong>MySQL</strong>(MariaDB) database which company was using to our <strong>Rails</strong> default db engine which was <strong>PostgresSQL</strong>.\nThus, I was assigned to do this task. </p>\n<p>I went through many available tools and tested as much as possible. I could not make sure they all are capable\nof handling such a massive sql file. I was about to decide witting a migration script with <strong>NodeJS</strong> that\nI finally found <a href=\"http://pgloader.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pgloader</a> by <a href=\"https://twitter.com/tapoueh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dimitri Fontaine</a>. </p>\n<p>First, It looked to me very promising and I said to myself: \"Yes, this is it.\". Before counting, let me say what is Pgloader. </p>\n<blockquote>pgloader is a data loading tool for PostgreSQL, using the COPY command.\nIts main advantage over just using COPY or \\copy, and over using a Foreign Data Wrapper, is its transaction behaviour, where pgloader will keep a separate file of rejected data, but continue trying to copy good data in your database.\nThe default PostgreSQL behaviour is transactional, which means that any erroneous line in the input data (file or remote database) will stop the entire bulk load for the table.\npgloader also implements data reformatting, a typical example of that being the transformation of MySQL datestamps 0000-00-00 and 0000-00-00 00:00:00 to PostgreSQL NULL value (because our calendar never had a year zero).\n</blockquote>\n<p>I started testing that with different circumstances and all test was pretty good. Therefore, I gave it a try and\nrun the final command to migrate that the result was pretty awesome in my Mac and I was excited though:</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Successfully migrated from <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> 5 to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> 9.5, roughly 16GB data, thanks to <a href=\"https://twitter.com/tapoueh\">@tapoueh</a> for a fantastic <a href=\"https://twitter.com/hashtag/pgloader?src=hash\">#pgloader</a> tool <a href=\"https://t.co/8lDziCnJqV\">pic.twitter.com/8lDziCnJqV</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/806763214092414976\">December 8, 2016</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p>Although, everything was pretty good on my local machine while I wanted to do that in our <strong>EC2</strong>, I faced with many difficulties as\nour server was not as perfect as my local machine with a low memory as small as 512MB until I made <a href=\"http://ccl.clozure.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ClozureCL</a> on the Ubuntu as a default\ncompiler for <a href=\"https://www.common-lisp.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lisp</a> which is written's lagrange of Pgloader and performance was incredibly unbelievable. </p>\n <blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/ClozureCL?src=hash\">#ClozureCL</a> instead of <a href=\"https://twitter.com/hashtag/SBCL?src=hash\">#SBCL</a> while migrating <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> with 16GB data on <a href=\"https://twitter.com/hashtag/AWS?src=hash\">#AWS</a> <a href=\"https://twitter.com/hashtag/EC2?src=hash\">#EC2</a> 512MB RAM!! That&#39;s awesome, thanks <a href=\"https://twitter.com/tapoueh\">@tapoueh</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/807632035300769792\">December 10, 2016</a></blockquote>\n <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n \nI encourage you to watch this video : [http://pgloader.io/](Why did pgloader get so much faster?). \n<p>Even though, many different ways of conversions are provided by Pgloader, I pick only migration from Mysql part and write my experience with that.\nHowever, feel free to check Pgloader website's documentation and do more with less!</p>\n<h2 id=\"pgloader-installation\"><a href=\"#pgloader-installation\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pgloader installation</h2>\n<p>Hopefully, Pgloader developed with increasing productivity and performance in mind. So, it is predictable that installing\nthis tools would be as easy as a command. To start with that you can read <a href=\"http://pgloader.io/howto/quickstart.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Quick Start</a> on pgloader.io. </p>\n<p>Binary build are available on distributions where pgloader is packaged, which currently includes only <strong>debian</strong> and <strong>apt.postgresql.org</strong> which covers both <strong>debian</strong> and <strong>ubuntu</strong> Operating Systems.</p>\n<p>Note that pgloader is easy enough to build from sources, see pgloader INSTALL.md file. For RPM based systems, see also the bootstrap-centos7.sh script that prepares your build environment so that building is then just a git clone then make away.</p>\n<p>Building for the <strong>Windows™ Operating System</strong> is easy enough and the platform is fully supported.</p>\n<ul>\n<li><strong>Mac</strong> <code class=\"language-text\">brew install pgloader</code></li>\n<li><strong>Ubuntu</strong> <code class=\"language-text\">apt-get install pgloader</code></li>\n<li><strong>Docker</strong>: You can also use a docker image for pgloader at <a href=\"https://hub.docker.com/r/dimitri/pgloader/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hub.docker.com/r/dimitri/pgloader/</a> </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker pull dimitri/pgloader\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --version\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --help</code></pre></div>\n<ul>\n<li><strong>Build From Source</strong> Pgloader is now a Common Lisp program, tested using the SBCL (>= 1.1.14) and Clozure CL implementations with Quicklisp.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apt-get install sbcl unzip libsqlite3-dev make curl gawk freetds-dev libzip-dev\ncd /path/to/pgloader\nmake pgloader\n./build/bin/pgloader --help</code></pre></div>\n<ul>\n<li><strong>Repository</strong>: <a href=\"https://github.com/dimitri/pgloader\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">To learn more information</a></li>\n</ul>\n<p>Please feel free to drop me an email if you need more help.</p>\n<h2 id=\"better-performance-with-clozurecl\"><a href=\"#better-performance-with-clozurecl\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Better Performance with ClozureCL</h2>\n<p>One of the important problem that I faced, was low memory and killing process by pgloader on our EC2 which has 512MB ram. So,\nDimitri in one of the issue on Github Suggest to use CCL instead of SBCL so I also recommend to do it as the performance is significantly\nbetter and no issue in dropping process because lack of memory. </p>\n<p>The preferred way to get Clozure CL is via Subversion. For example, to get Clozure CL 1.11 for Darwin/x86, you'd type (where the $ is the shell prompt):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">svn co http://svn.clozure.com/publicsvn/openmcl/release/1.11/darwinx86/ccl</code></pre></div>\n<p>Please follow all the steps (here)(<a href=\"http://ccl.clozure.com/download.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://ccl.clozure.com/download.html</a>) and after making that done remember to make Pgloader with CCL as follow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">make CL=ccl pgloader</code></pre></div>\n<p>Now, We are all good to begin.</p>\n<h2 id=\"migrating-from-mysql\"><a href=\"#migrating-from-mysql\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Migrating from MySQL</h2>\n<p>Just create a database where to host the MySQL data and definitions and have pgloader do the migration for you in a single command line:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">createdb pgdb</code></pre></div>\n<p>a single simple command to start, is just as easy as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pgloader mysql://user@localhost/mydb postgresql:///pgdb </code></pre></div>\n<p>where you can expand your Postgresql link as such:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgres://username:password@server:port/databasename</code></pre></div>\n<p>but it my not be enough. For instance, if you are connection to a remote database such a database on <strong>Heroku</strong> where\nit consumes SSL as default, you need to add your params to the url to enable ssl, so command would be as below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgres://username:password@server:port/databasename?sslmode=require</code></pre></div>\n<p>So, if you want to load your pg dump to Heroku you can run as simple as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">heroku pg:psql HEROKU_POSTGRESQL_GREEN_URL --app YOUR_APP_NAME_HERE &lt; pgdump</code></pre></div>\n<h2 id=\"common-issues\"><a href=\"#common-issues\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Common issues</h2>\n<p>You may see the following error for first time: <code class=\"language-text\">this is incompatible with sql_mode=only_full_group_by</code>\nbut no worries you can easily bypass that.\nYou can try to disable the only<em>full</em>group_by setting by executing the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql&gt; set global sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></pre></div>\n<p>or </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql&gt; set session sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></pre></div>\n<p>I hope you find this post helpful and feel free to drop an email your feedback which is already appreciated.</p>",
            "id": "dfa733e0-c45d-5ce6-9566-d6babb618589",
            "fields": {
              "slug": "pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql"
            },
            "frontmatter": {
              "date": "2016-12-08",
              "title": "Pgloader makes that easy to migrate From Mysql to Postgresql",
              "category": "DevOps",
              "tags": [
                "databases",
                "mysql",
                "postgresql"
              ],
              "banner": ""
            },
            "timeToRead": 6
          },
          {
            "excerpt": "One of the common command on Linux is to compress or decompress files and folders. While it's easy to do, there is no progress bar\nfor usual command such as Tar, Zip, Importing to Database or Exporting logs. It may be interesting that there are lots…",
            "html": "<p>One of the common command on Linux is to compress or decompress files and folders. While it's easy to do, there is no progress bar\nfor usual command such as Tar, Zip, Importing to Database or Exporting logs. It may be interesting that there are lots of tools to use. However, I found\n<a href=\"http://www.ivarch.com/programs/pv.shtml\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pipe Viewer</a> very handy and useful. </p>\n<p><strong>PV</strong> <em>[Pipe Viewer]</em> is a terminal-based tool for monitoring\nthe progress of data through a pipeline. It can be inserted into any normal pipeline between two processes to give a visual indication of\nhow quickly data is passing through, how long it has taken, how near to completion it is, and an estimate of how long it will be until completion.</p>\n<h3 id=\"some-of-the-benefits-of-using-pv-are\"><a href=\"#some-of-the-benefits-of-using-pv-are\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Some of the benefits of using PV are:</h3>\n<ul>\n<li>Total data transferred</li>\n<li>Time elapsed</li>\n<li>Current throughput rate</li>\n<li>Percentage completed</li>\n<li>ETA</li>\n</ul>\n<h3 id=\"to-install-pv-follow-the-guides-below-depends-on-your-os\"><a href=\"#to-install-pv-follow-the-guides-below-depends-on-your-os\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>To Install PV, follow the guides below depends on your OS:</h3>\n<ul>\n<li><strong>CentOS / RHEL:</strong>\tSet up my YUM repository or use RepoForge, then do <code class=\"language-text\">yum install pv</code>.</li>\n<li><strong>Fedora:</strong>\tRun <code class=\"language-text\">yum install pv</code>; the \"extras\" repository may be required.</li>\n<li><strong>Debian / Ubuntu:</strong>\tRun <code class=\"language-text\">apt-get install pv</code> to get the latest packaged version from <code class=\"language-text\">unstable</code> / <code class=\"language-text\">testing</code>.</li>\n<li><strong>Slackware:</strong>\tUse this SlackBuild script.</li>\n<li><strong>Cygwin:</strong>\tAvailable as a package.</li>\n<li><strong>FreeBSD:</strong> Listed on FreshPorts.</li>\n<li><strong>OpenBSD:</strong> Listed under ports.</li>\n<li><strong>Solaris:</strong> Download binary packages from OpenCSW.</li>\n<li><strong>OpenSolaris:</strong>\tIncludes pv version 1.1.4 in the <code class=\"language-text\">/dev</code> repository (as of build 119). Install with <code class=\"language-text\">pkg install SUNWpipe-viewer</code>.</li>\n<li><strong>AIX:</strong> An RPM from <em>Pawel Piatek</em> is in the downloads section.</li>\n<li><strong>MacPorts:</strong>\tRun <code class=\"language-text\">port install pv</code> to get the latest version. </li>\n<li><strong>Mac HomeBrew:</strong>\tRun <code class=\"language-text\">brew update &amp; brew install pv</code> to get the latest version. </li>\n<li><strong>Exherbo:</strong>\tRun <code class=\"language-text\">cave resolve -x app-misc/pv</code> to get the latest version. </li>\n<li><strong>Gentoo:</strong>\tRun <code class=\"language-text\">emerge sys-apps/pv</code> to get the latest version. </li>\n<li><strong>IRIX Nekoware:</strong>\tAvailable in the <em>Nekoware</em> \"beta\" repository.</li>\n</ul>\n<p>As an example, I would like to start with using PV while importing a dump of <strong>MySQL</strong> database. </p>\n<p>You are able to import your <code class=\"language-text\">.sql</code> file into the database as easy as the command below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql --user=username --password=password database_name &lt; dump.sql</code></pre></div>\n<p>which in short is equivalent to </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql -u username -p password database_name &lt; dump.sql</code></pre></div>\n<p>Although it seems quite OK, It is not as helpful as it looks when you have a big file.\nWe might have considered better solution as we need to know the status of progress for our\nrecord. Therefore, here is the usage of PV while importing our dump. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv your_dump.sql | mysql -u root database_name</code></pre></div>\n<p>In this case, you are able to see the progress bar just as below:</p>\n<p><img src=\"/assets/images/dec2016/pv-sample.jpg\" alt=\"PV Status Bar\" title=\"Pipe Viewer example\"></p>\n<h3 id=\"more-examples-to-monitor-of-pv-data-progress-sent-via-a-pipe\"><a href=\"#more-examples-to-monitor-of-pv-data-progress-sent-via-a-pipe\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>More examples to Monitor of PV data progress, sent via a Pipe:</h3>\n<p>1- To copy a file called your_access.log to /tmp/something-access.log and show progress:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv your_access.log &gt; /tmp/something-access.log</code></pre></div>\n<p>2- To compress a lot of files within a folder and seeing progress bar</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">tar cf - /folder-with-big-files -P | pv -s $(du -sb /folder-with-big-files | awk &#39;{print $1}&#39;) | gzip &gt; big-files.tar.gz</code></pre></div>\n<p>3- To watch how quickly a file is transferred using nc(1):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv file | nc -w 1 somewhere.com 3000</code></pre></div>\n<p>4- To transfer a file from another process and passing the expected size to pv:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cat file | pv -s 12345 | nc -w 1 majidhajian.com 3000</code></pre></div>\n<p>5- To decompress a huge tar.gz file</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv file.tgz | tar xzf - -C target_directory</code></pre></div>\n<p>All in all, Result of all of them like I added a picture to show, is similar as follow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">12.16MB 0:00:20 [6.06MB/s] [==================&gt;               ] 55%  ETA 0:00:37</code></pre></div>\n<p>I encourage you to read more about this amazing tool and be familiar with that. I have plan to\npublish another article about <code class=\"language-text\">screen</code> which is another great tool and combination of both, will make your\nlife as a developer more relaxed. </p>",
            "id": "8d44fc67-497f-5a98-9566-a316ab6286db",
            "fields": {
              "slug": "progress-status-using-pipe-viewer-while-importing-my-sql-databases"
            },
            "frontmatter": {
              "date": "2016-12-07",
              "title": "Progress status using PipeViewer while importing MySQL databases",
              "category": "DevOps",
              "tags": [
                "linux",
                "mysql"
              ],
              "banner": ""
            },
            "timeToRead": 3
          }
        ],
        "categoryName": "DevOps"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Category.tsx",
      "id": "SitePage /categories/dev-ops",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "010f30a1cfba7d0f56dbaa5742287211",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /categories/frontend": {
      "jsonName": "categories-frontend-383",
      "internalComponentName": "ComponentCategoriesFrontend",
      "path": "/categories/frontend",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Category.tsx",
      "componentChunkName": "component---src-templates-category-tsx",
      "context": {
        "posts": [
          {
            "excerpt": "It is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using \nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:   Live Demo…",
            "html": "<p>It is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using\nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:  <a href=\"https://www.majidhajian.com/vue2-shop/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Live Demo - Vue.js Shop</a></p>\n<p>In the battle of front-end frameworks, these days, I feel I am confused that how to answer my question about \"which frameworks should I choose?\".\nAs a passionate Javascript developer, it is super tough to choose between the following frameworks or libraries to start a new project. All of them come with pros and cons as well as perfect features that makes you impressed and as confused as you are not able to stick on one. </p>\n<p>I tend to wrap up my research and experiences as a single table which can be reviewed below:</p>\n<div style=\"overflow-x:auto;\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Ember.js</th>\n<th>Angular 2</th>\n<th>Vue.js 2</th>\n<th>React.js</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Github Star</td>\n<td>17,620</td>\n<td>55,021 + 21,572</td>\n<td>46,272</td>\n<td>61,653</td>\n</tr>\n<tr>\n<td>Contributors</td>\n<td>651</td>\n<td>1571 + 408</td>\n<td>84</td>\n<td>954</td>\n</tr>\n<tr>\n<td>Stackoverflow</td>\n<td>20,822</td>\n<td>40,374</td>\n<td>4,789</td>\n<td>35,846</td>\n</tr>\n<tr>\n<td>Reactive Programming</td>\n<td>Not in the core - Addon : RxEmber - not up to date</td>\n<td>RxJs 5, In the core</td>\n<td>Partially in the core, Fully with addon</td>\n<td>Not in the core, very good plugin</td>\n</tr>\n<tr>\n<td>State Management</td>\n<td>Ember Data - core  Ember-Redux addon</td>\n<td>Observable Stream in core, Two perfect plugin for Redux One is a wrapper Redux =-angular and one is based on Redux but it has its own API, Ng-redux/store</td>\n<td>Vuex which considers as Core addon</td>\n<td>React-Redux supports with community</td>\n</tr>\n<tr>\n<td>Functional Programing</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Isomorphic</td>\n<td>Fast-boot Still beta</td>\n<td>Universal, part of the core</td>\n<td>different plugin, Nuxt, vue-server-renderer</td>\n<td>different approach, mostly good</td>\n</tr>\n<tr>\n<td>Native App Or Hybrid App</td>\n<td>different addons such as ember-cli-cordova</td>\n<td>NativeScript port</td>\n<td>weex, still under development from Alibaba</td>\n<td>React Native</td>\n</tr>\n<tr>\n<td>Browser Support</td>\n<td>IE9+</td>\n<td>IE10+ , Polyfill for IE9</td>\n<td>IE9+</td>\n<td>IE9+</td>\n</tr>\n<tr>\n<td>Animation Support</td>\n<td>with addon</td>\n<td>In core, @angular/animation</td>\n<td>in core Transition</td>\n<td>Addon</td>\n</tr>\n<tr>\n<td>Bundler</td>\n<td>Broccoli, however can be port to webpack and rollupjs</td>\n<td>Webpack, completely ready to be use with System.js or Rollup.js</td>\n<td>webpack, can be port to different bundler</td>\n<td>webpack can be port to different bundler</td>\n</tr>\n<tr>\n<td>App Structure</td>\n<td>Strictly Opinionated</td>\n<td>Partially Opinionated</td>\n<td>unopinionated</td>\n<td>unopinionated</td>\n</tr>\n<tr>\n<td>Sponsor</td>\n<td>Tilde INC</td>\n<td>Google</td>\n<td>Evan You! but to be adapted by Alibaba</td>\n<td>Facebook</td>\n</tr>\n<tr>\n<td>Typescript Support</td>\n<td>Through Addon with Pain, However, ES6 is more than enough for Ember</td>\n<td>Core</td>\n<td>can be port to typescript however can be painful while using addon due to lack of proper typing</td>\n<td>possible, however JSX is powerful enough</td>\n</tr>\n<tr>\n<td>Lazy Loading</td>\n<td>with Addon, natively needs more develop, however, result is aswesome</td>\n<td>in Core with ng router and webpack</td>\n<td>in core with vue-router and webpack</td>\n<td>addon with react-router and webpack</td>\n</tr>\n<tr>\n<td>Framework Architecture</td>\n<td>MVVM</td>\n<td>MVVM + Modular system through Component Architecture</td>\n<td>VM and component architecture</td>\n<td>VM and component architecture</td>\n</tr>\n<tr>\n<td>Tree Shaking</td>\n<td>Addon for broccoli</td>\n<td>webpack2 supports</td>\n<td>webpack2 supports</td>\n<td>webpack2 supports</td>\n</tr>\n<tr>\n<td>Deployment</td>\n<td>wide range of platforms with Ember-cli-deploy as easy as one command !!</td>\n<td>through addons with great support and less configuration,However, good pipeline for deployment</td>\n<td>Not really have  good pipeline and can be painful to design, however, many good examples are found</td>\n<td>wide rang of possibilities with Zero configuration</td>\n</tr>\n<tr>\n<td>Unit Test</td>\n<td>Qunit but not limited to</td>\n<td>Jasmine but not limited to</td>\n<td>Mocha but not limited to</td>\n<td>Jest but not limited to</td>\n</tr>\n<tr>\n<td>Test Runner</td>\n<td>Karma</td>\n<td>Karma</td>\n<td>Karma</td>\n<td>Karma</td>\n</tr>\n<tr>\n<td>End-to-End (integration) Test</td>\n<td>ember-testing,and can be integrated with different approach however, it may be painful</td>\n<td>protractor and can be integrated with different approach however, it may be painful</td>\n<td>Nightwatch or Testcafe</td>\n<td>Selenium WebDriver and many more</td>\n</tr>\n<tr>\n<td>Learning Curve</td>\n<td>Advanced</td>\n<td>Advanced</td>\n<td>Simple</td>\n<td>Simple</td>\n</tr>\n<tr>\n<td>Enterprise Adaptability</td>\n<td>YES, specially with Ember Engine</td>\n<td>Recommend for this section</td>\n<td>apparently it is however, not much real example</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Code Complexity</td>\n<td>Mature SDK like Rails</td>\n<td>Well-rich   framework like Java based frameworks</td>\n<td>Library</td>\n<td>Library</td>\n</tr>\n<tr>\n<td>Chrome Debugger</td>\n<td>YES</td>\n<td>YES</td>\n<td>YES</td>\n<td>YES</td>\n</tr>\n<tr>\n<td>Progressive web app</td>\n<td>Addon</td>\n<td>Addon and webpack plugin</td>\n<td>Addon,and webpack plugin</td>\n<td>Addon,and webpack plugin</td>\n</tr>\n<tr>\n<td>Job Opportunity</td>\n<td>not that much</td>\n<td>A lot</td>\n<td>rarely</td>\n<td>A lot</td>\n</tr>\n<tr>\n<td>Directive</td>\n<td>yes but different approach</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Data binding</td>\n<td>Two way, very efficient</td>\n<td>Two way, super efficient</td>\n<td>Two way, super efficient</td>\n<td>Two way, super efficient</td>\n</tr>\n<tr>\n<td>Filter, Pipe, mixin, helper</td>\n<td>All supported</td>\n<td>All supported</td>\n<td>All supported</td>\n<td>All supported</td>\n</tr>\n<tr>\n<td>Event Binding</td>\n<td>yes such as on-submit, also using actions</td>\n<td>yes such as ng-click and also using Emitter</td>\n<td>Yes such as v-on and also using Methods</td>\n<td>yes such as onclick and also using methods</td>\n</tr>\n</tbody>\n</table>\n</div>\n## Performance\n \n All have been developed with performance in mind,however, they are fairly similar with a minor differences which in my \n opinion, it ready does not matter in the end. The chart below shows that the final results is pretty much similar with little milliseconds discrepancies.\n \n![Quick Performance comparison](/assets/images/march2017/performance.jpg \"quick performance comparison\"){:class=\"img-responsive\"}\n<p>Benchmarked by: <a href=\"https://github.com/krausest/js-framework-benchmark\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">js-framework-benchmark</a>\nCredited to: <a href=\"http://www.stefankrause.net/wp/?p=392\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">stefan krause</a> </p>\n<h2 id=\"which-one-to-choose\"><a href=\"#which-one-to-choose\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Which one to choose?</h2>\n<p>As you see, There are many similarities between them, although they tend to follow their mindset. All of them are awesome\nand all of their works is highly appreciated. However, at the end of the day, we need to choose one in our team, therefore,\nhere is my opinion. </p>\n<h3 id=\"emberjs\"><a href=\"#emberjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ember.js</h3>\n<p>An awesome framework and as its builders say, it is going to be a SDK for web. Although learning ember doest not seem easy, it is\na fact that if you get used to it, you are not able to abandon it! I personally believe (as a one year Ember developer), it's by far\none of the best in Front-end technology and should be used for Semi-enterprise to enterprise application where all developers\nare mostly senior. Moreover, finding senior and ember developer should not be that much difficult for the company in order to expand the team in the future. </p>\n<h3 id=\"angular-2\"><a href=\"#angular-2\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Angular 2</h3>\n<p>Well, it has been designed to mitigate performance, productivity and unique codebase between different platforms. Hence, indeed, they did a great job can could achieve their goals.\nAngular's roadmap is very distinctive. One of the main strengths of Angular team is to be backed by Google. However, it's should be considered only for enterprise application.</p>\n<h3 id=\"vuejs\"><a href=\"#vuejs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue.js</h3>\n<p>Nothing can be easier than Vue.js. Super slim and easy to learn. Vue's goal tends to stick on pure javascript object and functionality rather than make that complex.\nHence, Vue's performance has slightly better than other rivals and make that easy to learn and very handy to have a quick project. However, due to less community members and obscured\nroadmap as well as lack of large well-tested application in production, I am still doubtful to say it can be use in enterprise while it is the best to start\nfor small and medium applications. </p>\n<h3 id=\"reactjs\"><a href=\"#reactjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.js</h3>\n<p>Well, nothing to say. It's perfect at every single aspect. Although I personally do not like to write JSX code, I would say it is the\nmost powerful approach that I have seen so far. React is a tiny library to manipulate the DOM which fits small project need, whereas it can be powerful enough when it combines with other addons to build a enterprise app. In one word, </p>\n<h2 id=\"so-what-do-i-prefer-finally\"><a href=\"#so-what-do-i-prefer-finally\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>So what do I prefer finally?</h2>\n<p>In my perspective, choosing of the above frameworks is completely depends on your projects, the future of that and more importantly\nthe company and the team that you are working with. For some, it's is important to see huge backers and obvious roadmap then you should consider React and Angular2 while others think simplicity is the most important one then\nyou definitely should consider Vue.js. </p>\n<p>Like I said, I am a passionate Javascript developer and I love all of them. However, last but not least, my personal choices would be: 1- Angular, 2- Ember, 3- React and 4- Vue. </p>\n<p>My advice is \"do not spend to much time to choose between one of the frameworks named above, in fact, find the one that is the most desirable and adaptable among team's developers or you feel comfortable the most.\"</p>",
            "id": "97733994-8c9e-5380-b6b0-3eef063adda1",
            "fields": {
              "slug": "which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js"
            },
            "frontmatter": {
              "date": "2017-03-12",
              "title": "Which one should I choose? Angular 2, Vue.js, React.js and Ember.js?",
              "category": "Frontend",
              "tags": [
                "Angular",
                "React",
                "Vue.js",
                "Ember.js"
              ],
              "banner": ""
            },
            "timeToRead": 7
          }
        ],
        "categoryName": "Frontend"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Category.tsx",
      "id": "SitePage /categories/frontend",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "79d5bb443c1b91bacddc414643fe240f",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags": {
      "jsonName": "tags-d57",
      "internalComponentName": "ComponentTags",
      "path": "/tags",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/AllTag.tsx",
      "componentChunkName": "component---src-templates-all-tag-tsx",
      "context": {
        "tags": [
          "Angular",
          "Ember.js",
          "React",
          "Vue.js",
          "databases",
          "linux",
          "mysql",
          "postgresql"
        ]
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/AllTag.tsx",
      "id": "SitePage /tags",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "edc0443215e8c8e035ab8901d43a30aa",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/angular": {
      "jsonName": "tags-angular-093",
      "internalComponentName": "ComponentTagsAngular",
      "path": "/tags/angular",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "componentChunkName": "component---src-templates-tag-tsx",
      "context": {
        "posts": [
          {
            "excerpt": "It is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using \nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:   Live Demo…",
            "html": "<p>It is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using\nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:  <a href=\"https://www.majidhajian.com/vue2-shop/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Live Demo - Vue.js Shop</a></p>\n<p>In the battle of front-end frameworks, these days, I feel I am confused that how to answer my question about \"which frameworks should I choose?\".\nAs a passionate Javascript developer, it is super tough to choose between the following frameworks or libraries to start a new project. All of them come with pros and cons as well as perfect features that makes you impressed and as confused as you are not able to stick on one. </p>\n<p>I tend to wrap up my research and experiences as a single table which can be reviewed below:</p>\n<div style=\"overflow-x:auto;\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Ember.js</th>\n<th>Angular 2</th>\n<th>Vue.js 2</th>\n<th>React.js</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Github Star</td>\n<td>17,620</td>\n<td>55,021 + 21,572</td>\n<td>46,272</td>\n<td>61,653</td>\n</tr>\n<tr>\n<td>Contributors</td>\n<td>651</td>\n<td>1571 + 408</td>\n<td>84</td>\n<td>954</td>\n</tr>\n<tr>\n<td>Stackoverflow</td>\n<td>20,822</td>\n<td>40,374</td>\n<td>4,789</td>\n<td>35,846</td>\n</tr>\n<tr>\n<td>Reactive Programming</td>\n<td>Not in the core - Addon : RxEmber - not up to date</td>\n<td>RxJs 5, In the core</td>\n<td>Partially in the core, Fully with addon</td>\n<td>Not in the core, very good plugin</td>\n</tr>\n<tr>\n<td>State Management</td>\n<td>Ember Data - core  Ember-Redux addon</td>\n<td>Observable Stream in core, Two perfect plugin for Redux One is a wrapper Redux =-angular and one is based on Redux but it has its own API, Ng-redux/store</td>\n<td>Vuex which considers as Core addon</td>\n<td>React-Redux supports with community</td>\n</tr>\n<tr>\n<td>Functional Programing</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Isomorphic</td>\n<td>Fast-boot Still beta</td>\n<td>Universal, part of the core</td>\n<td>different plugin, Nuxt, vue-server-renderer</td>\n<td>different approach, mostly good</td>\n</tr>\n<tr>\n<td>Native App Or Hybrid App</td>\n<td>different addons such as ember-cli-cordova</td>\n<td>NativeScript port</td>\n<td>weex, still under development from Alibaba</td>\n<td>React Native</td>\n</tr>\n<tr>\n<td>Browser Support</td>\n<td>IE9+</td>\n<td>IE10+ , Polyfill for IE9</td>\n<td>IE9+</td>\n<td>IE9+</td>\n</tr>\n<tr>\n<td>Animation Support</td>\n<td>with addon</td>\n<td>In core, @angular/animation</td>\n<td>in core Transition</td>\n<td>Addon</td>\n</tr>\n<tr>\n<td>Bundler</td>\n<td>Broccoli, however can be port to webpack and rollupjs</td>\n<td>Webpack, completely ready to be use with System.js or Rollup.js</td>\n<td>webpack, can be port to different bundler</td>\n<td>webpack can be port to different bundler</td>\n</tr>\n<tr>\n<td>App Structure</td>\n<td>Strictly Opinionated</td>\n<td>Partially Opinionated</td>\n<td>unopinionated</td>\n<td>unopinionated</td>\n</tr>\n<tr>\n<td>Sponsor</td>\n<td>Tilde INC</td>\n<td>Google</td>\n<td>Evan You! but to be adapted by Alibaba</td>\n<td>Facebook</td>\n</tr>\n<tr>\n<td>Typescript Support</td>\n<td>Through Addon with Pain, However, ES6 is more than enough for Ember</td>\n<td>Core</td>\n<td>can be port to typescript however can be painful while using addon due to lack of proper typing</td>\n<td>possible, however JSX is powerful enough</td>\n</tr>\n<tr>\n<td>Lazy Loading</td>\n<td>with Addon, natively needs more develop, however, result is aswesome</td>\n<td>in Core with ng router and webpack</td>\n<td>in core with vue-router and webpack</td>\n<td>addon with react-router and webpack</td>\n</tr>\n<tr>\n<td>Framework Architecture</td>\n<td>MVVM</td>\n<td>MVVM + Modular system through Component Architecture</td>\n<td>VM and component architecture</td>\n<td>VM and component architecture</td>\n</tr>\n<tr>\n<td>Tree Shaking</td>\n<td>Addon for broccoli</td>\n<td>webpack2 supports</td>\n<td>webpack2 supports</td>\n<td>webpack2 supports</td>\n</tr>\n<tr>\n<td>Deployment</td>\n<td>wide range of platforms with Ember-cli-deploy as easy as one command !!</td>\n<td>through addons with great support and less configuration,However, good pipeline for deployment</td>\n<td>Not really have  good pipeline and can be painful to design, however, many good examples are found</td>\n<td>wide rang of possibilities with Zero configuration</td>\n</tr>\n<tr>\n<td>Unit Test</td>\n<td>Qunit but not limited to</td>\n<td>Jasmine but not limited to</td>\n<td>Mocha but not limited to</td>\n<td>Jest but not limited to</td>\n</tr>\n<tr>\n<td>Test Runner</td>\n<td>Karma</td>\n<td>Karma</td>\n<td>Karma</td>\n<td>Karma</td>\n</tr>\n<tr>\n<td>End-to-End (integration) Test</td>\n<td>ember-testing,and can be integrated with different approach however, it may be painful</td>\n<td>protractor and can be integrated with different approach however, it may be painful</td>\n<td>Nightwatch or Testcafe</td>\n<td>Selenium WebDriver and many more</td>\n</tr>\n<tr>\n<td>Learning Curve</td>\n<td>Advanced</td>\n<td>Advanced</td>\n<td>Simple</td>\n<td>Simple</td>\n</tr>\n<tr>\n<td>Enterprise Adaptability</td>\n<td>YES, specially with Ember Engine</td>\n<td>Recommend for this section</td>\n<td>apparently it is however, not much real example</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Code Complexity</td>\n<td>Mature SDK like Rails</td>\n<td>Well-rich   framework like Java based frameworks</td>\n<td>Library</td>\n<td>Library</td>\n</tr>\n<tr>\n<td>Chrome Debugger</td>\n<td>YES</td>\n<td>YES</td>\n<td>YES</td>\n<td>YES</td>\n</tr>\n<tr>\n<td>Progressive web app</td>\n<td>Addon</td>\n<td>Addon and webpack plugin</td>\n<td>Addon,and webpack plugin</td>\n<td>Addon,and webpack plugin</td>\n</tr>\n<tr>\n<td>Job Opportunity</td>\n<td>not that much</td>\n<td>A lot</td>\n<td>rarely</td>\n<td>A lot</td>\n</tr>\n<tr>\n<td>Directive</td>\n<td>yes but different approach</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Data binding</td>\n<td>Two way, very efficient</td>\n<td>Two way, super efficient</td>\n<td>Two way, super efficient</td>\n<td>Two way, super efficient</td>\n</tr>\n<tr>\n<td>Filter, Pipe, mixin, helper</td>\n<td>All supported</td>\n<td>All supported</td>\n<td>All supported</td>\n<td>All supported</td>\n</tr>\n<tr>\n<td>Event Binding</td>\n<td>yes such as on-submit, also using actions</td>\n<td>yes such as ng-click and also using Emitter</td>\n<td>Yes such as v-on and also using Methods</td>\n<td>yes such as onclick and also using methods</td>\n</tr>\n</tbody>\n</table>\n</div>\n## Performance\n \n All have been developed with performance in mind,however, they are fairly similar with a minor differences which in my \n opinion, it ready does not matter in the end. The chart below shows that the final results is pretty much similar with little milliseconds discrepancies.\n \n![Quick Performance comparison](/assets/images/march2017/performance.jpg \"quick performance comparison\"){:class=\"img-responsive\"}\n<p>Benchmarked by: <a href=\"https://github.com/krausest/js-framework-benchmark\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">js-framework-benchmark</a>\nCredited to: <a href=\"http://www.stefankrause.net/wp/?p=392\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">stefan krause</a> </p>\n<h2 id=\"which-one-to-choose\"><a href=\"#which-one-to-choose\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Which one to choose?</h2>\n<p>As you see, There are many similarities between them, although they tend to follow their mindset. All of them are awesome\nand all of their works is highly appreciated. However, at the end of the day, we need to choose one in our team, therefore,\nhere is my opinion. </p>\n<h3 id=\"emberjs\"><a href=\"#emberjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ember.js</h3>\n<p>An awesome framework and as its builders say, it is going to be a SDK for web. Although learning ember doest not seem easy, it is\na fact that if you get used to it, you are not able to abandon it! I personally believe (as a one year Ember developer), it's by far\none of the best in Front-end technology and should be used for Semi-enterprise to enterprise application where all developers\nare mostly senior. Moreover, finding senior and ember developer should not be that much difficult for the company in order to expand the team in the future. </p>\n<h3 id=\"angular-2\"><a href=\"#angular-2\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Angular 2</h3>\n<p>Well, it has been designed to mitigate performance, productivity and unique codebase between different platforms. Hence, indeed, they did a great job can could achieve their goals.\nAngular's roadmap is very distinctive. One of the main strengths of Angular team is to be backed by Google. However, it's should be considered only for enterprise application.</p>\n<h3 id=\"vuejs\"><a href=\"#vuejs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue.js</h3>\n<p>Nothing can be easier than Vue.js. Super slim and easy to learn. Vue's goal tends to stick on pure javascript object and functionality rather than make that complex.\nHence, Vue's performance has slightly better than other rivals and make that easy to learn and very handy to have a quick project. However, due to less community members and obscured\nroadmap as well as lack of large well-tested application in production, I am still doubtful to say it can be use in enterprise while it is the best to start\nfor small and medium applications. </p>\n<h3 id=\"reactjs\"><a href=\"#reactjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.js</h3>\n<p>Well, nothing to say. It's perfect at every single aspect. Although I personally do not like to write JSX code, I would say it is the\nmost powerful approach that I have seen so far. React is a tiny library to manipulate the DOM which fits small project need, whereas it can be powerful enough when it combines with other addons to build a enterprise app. In one word, </p>\n<h2 id=\"so-what-do-i-prefer-finally\"><a href=\"#so-what-do-i-prefer-finally\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>So what do I prefer finally?</h2>\n<p>In my perspective, choosing of the above frameworks is completely depends on your projects, the future of that and more importantly\nthe company and the team that you are working with. For some, it's is important to see huge backers and obvious roadmap then you should consider React and Angular2 while others think simplicity is the most important one then\nyou definitely should consider Vue.js. </p>\n<p>Like I said, I am a passionate Javascript developer and I love all of them. However, last but not least, my personal choices would be: 1- Angular, 2- Ember, 3- React and 4- Vue. </p>\n<p>My advice is \"do not spend to much time to choose between one of the frameworks named above, in fact, find the one that is the most desirable and adaptable among team's developers or you feel comfortable the most.\"</p>",
            "id": "97733994-8c9e-5380-b6b0-3eef063adda1",
            "fields": {
              "slug": "which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js"
            },
            "frontmatter": {
              "date": "2017-03-12",
              "title": "Which one should I choose? Angular 2, Vue.js, React.js and Ember.js?",
              "category": "Frontend",
              "tags": [
                "Angular",
                "React",
                "Vue.js",
                "Ember.js"
              ],
              "banner": ""
            },
            "timeToRead": 7
          }
        ],
        "tagName": "Angular"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "id": "SitePage /tags/angular",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "086abe48a671b3a811dddc25fe928521",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/ember-js": {
      "jsonName": "tags-ember-js-7d8",
      "internalComponentName": "ComponentTagsEmberJs",
      "path": "/tags/ember-js",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "componentChunkName": "component---src-templates-tag-tsx",
      "context": {
        "posts": [
          {
            "excerpt": "It is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using \nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:   Live Demo…",
            "html": "<p>It is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using\nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:  <a href=\"https://www.majidhajian.com/vue2-shop/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Live Demo - Vue.js Shop</a></p>\n<p>In the battle of front-end frameworks, these days, I feel I am confused that how to answer my question about \"which frameworks should I choose?\".\nAs a passionate Javascript developer, it is super tough to choose between the following frameworks or libraries to start a new project. All of them come with pros and cons as well as perfect features that makes you impressed and as confused as you are not able to stick on one. </p>\n<p>I tend to wrap up my research and experiences as a single table which can be reviewed below:</p>\n<div style=\"overflow-x:auto;\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Ember.js</th>\n<th>Angular 2</th>\n<th>Vue.js 2</th>\n<th>React.js</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Github Star</td>\n<td>17,620</td>\n<td>55,021 + 21,572</td>\n<td>46,272</td>\n<td>61,653</td>\n</tr>\n<tr>\n<td>Contributors</td>\n<td>651</td>\n<td>1571 + 408</td>\n<td>84</td>\n<td>954</td>\n</tr>\n<tr>\n<td>Stackoverflow</td>\n<td>20,822</td>\n<td>40,374</td>\n<td>4,789</td>\n<td>35,846</td>\n</tr>\n<tr>\n<td>Reactive Programming</td>\n<td>Not in the core - Addon : RxEmber - not up to date</td>\n<td>RxJs 5, In the core</td>\n<td>Partially in the core, Fully with addon</td>\n<td>Not in the core, very good plugin</td>\n</tr>\n<tr>\n<td>State Management</td>\n<td>Ember Data - core  Ember-Redux addon</td>\n<td>Observable Stream in core, Two perfect plugin for Redux One is a wrapper Redux =-angular and one is based on Redux but it has its own API, Ng-redux/store</td>\n<td>Vuex which considers as Core addon</td>\n<td>React-Redux supports with community</td>\n</tr>\n<tr>\n<td>Functional Programing</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Isomorphic</td>\n<td>Fast-boot Still beta</td>\n<td>Universal, part of the core</td>\n<td>different plugin, Nuxt, vue-server-renderer</td>\n<td>different approach, mostly good</td>\n</tr>\n<tr>\n<td>Native App Or Hybrid App</td>\n<td>different addons such as ember-cli-cordova</td>\n<td>NativeScript port</td>\n<td>weex, still under development from Alibaba</td>\n<td>React Native</td>\n</tr>\n<tr>\n<td>Browser Support</td>\n<td>IE9+</td>\n<td>IE10+ , Polyfill for IE9</td>\n<td>IE9+</td>\n<td>IE9+</td>\n</tr>\n<tr>\n<td>Animation Support</td>\n<td>with addon</td>\n<td>In core, @angular/animation</td>\n<td>in core Transition</td>\n<td>Addon</td>\n</tr>\n<tr>\n<td>Bundler</td>\n<td>Broccoli, however can be port to webpack and rollupjs</td>\n<td>Webpack, completely ready to be use with System.js or Rollup.js</td>\n<td>webpack, can be port to different bundler</td>\n<td>webpack can be port to different bundler</td>\n</tr>\n<tr>\n<td>App Structure</td>\n<td>Strictly Opinionated</td>\n<td>Partially Opinionated</td>\n<td>unopinionated</td>\n<td>unopinionated</td>\n</tr>\n<tr>\n<td>Sponsor</td>\n<td>Tilde INC</td>\n<td>Google</td>\n<td>Evan You! but to be adapted by Alibaba</td>\n<td>Facebook</td>\n</tr>\n<tr>\n<td>Typescript Support</td>\n<td>Through Addon with Pain, However, ES6 is more than enough for Ember</td>\n<td>Core</td>\n<td>can be port to typescript however can be painful while using addon due to lack of proper typing</td>\n<td>possible, however JSX is powerful enough</td>\n</tr>\n<tr>\n<td>Lazy Loading</td>\n<td>with Addon, natively needs more develop, however, result is aswesome</td>\n<td>in Core with ng router and webpack</td>\n<td>in core with vue-router and webpack</td>\n<td>addon with react-router and webpack</td>\n</tr>\n<tr>\n<td>Framework Architecture</td>\n<td>MVVM</td>\n<td>MVVM + Modular system through Component Architecture</td>\n<td>VM and component architecture</td>\n<td>VM and component architecture</td>\n</tr>\n<tr>\n<td>Tree Shaking</td>\n<td>Addon for broccoli</td>\n<td>webpack2 supports</td>\n<td>webpack2 supports</td>\n<td>webpack2 supports</td>\n</tr>\n<tr>\n<td>Deployment</td>\n<td>wide range of platforms with Ember-cli-deploy as easy as one command !!</td>\n<td>through addons with great support and less configuration,However, good pipeline for deployment</td>\n<td>Not really have  good pipeline and can be painful to design, however, many good examples are found</td>\n<td>wide rang of possibilities with Zero configuration</td>\n</tr>\n<tr>\n<td>Unit Test</td>\n<td>Qunit but not limited to</td>\n<td>Jasmine but not limited to</td>\n<td>Mocha but not limited to</td>\n<td>Jest but not limited to</td>\n</tr>\n<tr>\n<td>Test Runner</td>\n<td>Karma</td>\n<td>Karma</td>\n<td>Karma</td>\n<td>Karma</td>\n</tr>\n<tr>\n<td>End-to-End (integration) Test</td>\n<td>ember-testing,and can be integrated with different approach however, it may be painful</td>\n<td>protractor and can be integrated with different approach however, it may be painful</td>\n<td>Nightwatch or Testcafe</td>\n<td>Selenium WebDriver and many more</td>\n</tr>\n<tr>\n<td>Learning Curve</td>\n<td>Advanced</td>\n<td>Advanced</td>\n<td>Simple</td>\n<td>Simple</td>\n</tr>\n<tr>\n<td>Enterprise Adaptability</td>\n<td>YES, specially with Ember Engine</td>\n<td>Recommend for this section</td>\n<td>apparently it is however, not much real example</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Code Complexity</td>\n<td>Mature SDK like Rails</td>\n<td>Well-rich   framework like Java based frameworks</td>\n<td>Library</td>\n<td>Library</td>\n</tr>\n<tr>\n<td>Chrome Debugger</td>\n<td>YES</td>\n<td>YES</td>\n<td>YES</td>\n<td>YES</td>\n</tr>\n<tr>\n<td>Progressive web app</td>\n<td>Addon</td>\n<td>Addon and webpack plugin</td>\n<td>Addon,and webpack plugin</td>\n<td>Addon,and webpack plugin</td>\n</tr>\n<tr>\n<td>Job Opportunity</td>\n<td>not that much</td>\n<td>A lot</td>\n<td>rarely</td>\n<td>A lot</td>\n</tr>\n<tr>\n<td>Directive</td>\n<td>yes but different approach</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Data binding</td>\n<td>Two way, very efficient</td>\n<td>Two way, super efficient</td>\n<td>Two way, super efficient</td>\n<td>Two way, super efficient</td>\n</tr>\n<tr>\n<td>Filter, Pipe, mixin, helper</td>\n<td>All supported</td>\n<td>All supported</td>\n<td>All supported</td>\n<td>All supported</td>\n</tr>\n<tr>\n<td>Event Binding</td>\n<td>yes such as on-submit, also using actions</td>\n<td>yes such as ng-click and also using Emitter</td>\n<td>Yes such as v-on and also using Methods</td>\n<td>yes such as onclick and also using methods</td>\n</tr>\n</tbody>\n</table>\n</div>\n## Performance\n \n All have been developed with performance in mind,however, they are fairly similar with a minor differences which in my \n opinion, it ready does not matter in the end. The chart below shows that the final results is pretty much similar with little milliseconds discrepancies.\n \n![Quick Performance comparison](/assets/images/march2017/performance.jpg \"quick performance comparison\"){:class=\"img-responsive\"}\n<p>Benchmarked by: <a href=\"https://github.com/krausest/js-framework-benchmark\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">js-framework-benchmark</a>\nCredited to: <a href=\"http://www.stefankrause.net/wp/?p=392\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">stefan krause</a> </p>\n<h2 id=\"which-one-to-choose\"><a href=\"#which-one-to-choose\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Which one to choose?</h2>\n<p>As you see, There are many similarities between them, although they tend to follow their mindset. All of them are awesome\nand all of their works is highly appreciated. However, at the end of the day, we need to choose one in our team, therefore,\nhere is my opinion. </p>\n<h3 id=\"emberjs\"><a href=\"#emberjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ember.js</h3>\n<p>An awesome framework and as its builders say, it is going to be a SDK for web. Although learning ember doest not seem easy, it is\na fact that if you get used to it, you are not able to abandon it! I personally believe (as a one year Ember developer), it's by far\none of the best in Front-end technology and should be used for Semi-enterprise to enterprise application where all developers\nare mostly senior. Moreover, finding senior and ember developer should not be that much difficult for the company in order to expand the team in the future. </p>\n<h3 id=\"angular-2\"><a href=\"#angular-2\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Angular 2</h3>\n<p>Well, it has been designed to mitigate performance, productivity and unique codebase between different platforms. Hence, indeed, they did a great job can could achieve their goals.\nAngular's roadmap is very distinctive. One of the main strengths of Angular team is to be backed by Google. However, it's should be considered only for enterprise application.</p>\n<h3 id=\"vuejs\"><a href=\"#vuejs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue.js</h3>\n<p>Nothing can be easier than Vue.js. Super slim and easy to learn. Vue's goal tends to stick on pure javascript object and functionality rather than make that complex.\nHence, Vue's performance has slightly better than other rivals and make that easy to learn and very handy to have a quick project. However, due to less community members and obscured\nroadmap as well as lack of large well-tested application in production, I am still doubtful to say it can be use in enterprise while it is the best to start\nfor small and medium applications. </p>\n<h3 id=\"reactjs\"><a href=\"#reactjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.js</h3>\n<p>Well, nothing to say. It's perfect at every single aspect. Although I personally do not like to write JSX code, I would say it is the\nmost powerful approach that I have seen so far. React is a tiny library to manipulate the DOM which fits small project need, whereas it can be powerful enough when it combines with other addons to build a enterprise app. In one word, </p>\n<h2 id=\"so-what-do-i-prefer-finally\"><a href=\"#so-what-do-i-prefer-finally\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>So what do I prefer finally?</h2>\n<p>In my perspective, choosing of the above frameworks is completely depends on your projects, the future of that and more importantly\nthe company and the team that you are working with. For some, it's is important to see huge backers and obvious roadmap then you should consider React and Angular2 while others think simplicity is the most important one then\nyou definitely should consider Vue.js. </p>\n<p>Like I said, I am a passionate Javascript developer and I love all of them. However, last but not least, my personal choices would be: 1- Angular, 2- Ember, 3- React and 4- Vue. </p>\n<p>My advice is \"do not spend to much time to choose between one of the frameworks named above, in fact, find the one that is the most desirable and adaptable among team's developers or you feel comfortable the most.\"</p>",
            "id": "97733994-8c9e-5380-b6b0-3eef063adda1",
            "fields": {
              "slug": "which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js"
            },
            "frontmatter": {
              "date": "2017-03-12",
              "title": "Which one should I choose? Angular 2, Vue.js, React.js and Ember.js?",
              "category": "Frontend",
              "tags": [
                "Angular",
                "React",
                "Vue.js",
                "Ember.js"
              ],
              "banner": ""
            },
            "timeToRead": 7
          }
        ],
        "tagName": "Ember.js"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "id": "SitePage /tags/ember-js",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "2b7dc4a045ceed64415f4b941841dded",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/react": {
      "jsonName": "tags-react-df8",
      "internalComponentName": "ComponentTagsReact",
      "path": "/tags/react",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "componentChunkName": "component---src-templates-tag-tsx",
      "context": {
        "posts": [
          {
            "excerpt": "It is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using \nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:   Live Demo…",
            "html": "<p>It is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using\nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:  <a href=\"https://www.majidhajian.com/vue2-shop/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Live Demo - Vue.js Shop</a></p>\n<p>In the battle of front-end frameworks, these days, I feel I am confused that how to answer my question about \"which frameworks should I choose?\".\nAs a passionate Javascript developer, it is super tough to choose between the following frameworks or libraries to start a new project. All of them come with pros and cons as well as perfect features that makes you impressed and as confused as you are not able to stick on one. </p>\n<p>I tend to wrap up my research and experiences as a single table which can be reviewed below:</p>\n<div style=\"overflow-x:auto;\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Ember.js</th>\n<th>Angular 2</th>\n<th>Vue.js 2</th>\n<th>React.js</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Github Star</td>\n<td>17,620</td>\n<td>55,021 + 21,572</td>\n<td>46,272</td>\n<td>61,653</td>\n</tr>\n<tr>\n<td>Contributors</td>\n<td>651</td>\n<td>1571 + 408</td>\n<td>84</td>\n<td>954</td>\n</tr>\n<tr>\n<td>Stackoverflow</td>\n<td>20,822</td>\n<td>40,374</td>\n<td>4,789</td>\n<td>35,846</td>\n</tr>\n<tr>\n<td>Reactive Programming</td>\n<td>Not in the core - Addon : RxEmber - not up to date</td>\n<td>RxJs 5, In the core</td>\n<td>Partially in the core, Fully with addon</td>\n<td>Not in the core, very good plugin</td>\n</tr>\n<tr>\n<td>State Management</td>\n<td>Ember Data - core  Ember-Redux addon</td>\n<td>Observable Stream in core, Two perfect plugin for Redux One is a wrapper Redux =-angular and one is based on Redux but it has its own API, Ng-redux/store</td>\n<td>Vuex which considers as Core addon</td>\n<td>React-Redux supports with community</td>\n</tr>\n<tr>\n<td>Functional Programing</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Isomorphic</td>\n<td>Fast-boot Still beta</td>\n<td>Universal, part of the core</td>\n<td>different plugin, Nuxt, vue-server-renderer</td>\n<td>different approach, mostly good</td>\n</tr>\n<tr>\n<td>Native App Or Hybrid App</td>\n<td>different addons such as ember-cli-cordova</td>\n<td>NativeScript port</td>\n<td>weex, still under development from Alibaba</td>\n<td>React Native</td>\n</tr>\n<tr>\n<td>Browser Support</td>\n<td>IE9+</td>\n<td>IE10+ , Polyfill for IE9</td>\n<td>IE9+</td>\n<td>IE9+</td>\n</tr>\n<tr>\n<td>Animation Support</td>\n<td>with addon</td>\n<td>In core, @angular/animation</td>\n<td>in core Transition</td>\n<td>Addon</td>\n</tr>\n<tr>\n<td>Bundler</td>\n<td>Broccoli, however can be port to webpack and rollupjs</td>\n<td>Webpack, completely ready to be use with System.js or Rollup.js</td>\n<td>webpack, can be port to different bundler</td>\n<td>webpack can be port to different bundler</td>\n</tr>\n<tr>\n<td>App Structure</td>\n<td>Strictly Opinionated</td>\n<td>Partially Opinionated</td>\n<td>unopinionated</td>\n<td>unopinionated</td>\n</tr>\n<tr>\n<td>Sponsor</td>\n<td>Tilde INC</td>\n<td>Google</td>\n<td>Evan You! but to be adapted by Alibaba</td>\n<td>Facebook</td>\n</tr>\n<tr>\n<td>Typescript Support</td>\n<td>Through Addon with Pain, However, ES6 is more than enough for Ember</td>\n<td>Core</td>\n<td>can be port to typescript however can be painful while using addon due to lack of proper typing</td>\n<td>possible, however JSX is powerful enough</td>\n</tr>\n<tr>\n<td>Lazy Loading</td>\n<td>with Addon, natively needs more develop, however, result is aswesome</td>\n<td>in Core with ng router and webpack</td>\n<td>in core with vue-router and webpack</td>\n<td>addon with react-router and webpack</td>\n</tr>\n<tr>\n<td>Framework Architecture</td>\n<td>MVVM</td>\n<td>MVVM + Modular system through Component Architecture</td>\n<td>VM and component architecture</td>\n<td>VM and component architecture</td>\n</tr>\n<tr>\n<td>Tree Shaking</td>\n<td>Addon for broccoli</td>\n<td>webpack2 supports</td>\n<td>webpack2 supports</td>\n<td>webpack2 supports</td>\n</tr>\n<tr>\n<td>Deployment</td>\n<td>wide range of platforms with Ember-cli-deploy as easy as one command !!</td>\n<td>through addons with great support and less configuration,However, good pipeline for deployment</td>\n<td>Not really have  good pipeline and can be painful to design, however, many good examples are found</td>\n<td>wide rang of possibilities with Zero configuration</td>\n</tr>\n<tr>\n<td>Unit Test</td>\n<td>Qunit but not limited to</td>\n<td>Jasmine but not limited to</td>\n<td>Mocha but not limited to</td>\n<td>Jest but not limited to</td>\n</tr>\n<tr>\n<td>Test Runner</td>\n<td>Karma</td>\n<td>Karma</td>\n<td>Karma</td>\n<td>Karma</td>\n</tr>\n<tr>\n<td>End-to-End (integration) Test</td>\n<td>ember-testing,and can be integrated with different approach however, it may be painful</td>\n<td>protractor and can be integrated with different approach however, it may be painful</td>\n<td>Nightwatch or Testcafe</td>\n<td>Selenium WebDriver and many more</td>\n</tr>\n<tr>\n<td>Learning Curve</td>\n<td>Advanced</td>\n<td>Advanced</td>\n<td>Simple</td>\n<td>Simple</td>\n</tr>\n<tr>\n<td>Enterprise Adaptability</td>\n<td>YES, specially with Ember Engine</td>\n<td>Recommend for this section</td>\n<td>apparently it is however, not much real example</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Code Complexity</td>\n<td>Mature SDK like Rails</td>\n<td>Well-rich   framework like Java based frameworks</td>\n<td>Library</td>\n<td>Library</td>\n</tr>\n<tr>\n<td>Chrome Debugger</td>\n<td>YES</td>\n<td>YES</td>\n<td>YES</td>\n<td>YES</td>\n</tr>\n<tr>\n<td>Progressive web app</td>\n<td>Addon</td>\n<td>Addon and webpack plugin</td>\n<td>Addon,and webpack plugin</td>\n<td>Addon,and webpack plugin</td>\n</tr>\n<tr>\n<td>Job Opportunity</td>\n<td>not that much</td>\n<td>A lot</td>\n<td>rarely</td>\n<td>A lot</td>\n</tr>\n<tr>\n<td>Directive</td>\n<td>yes but different approach</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Data binding</td>\n<td>Two way, very efficient</td>\n<td>Two way, super efficient</td>\n<td>Two way, super efficient</td>\n<td>Two way, super efficient</td>\n</tr>\n<tr>\n<td>Filter, Pipe, mixin, helper</td>\n<td>All supported</td>\n<td>All supported</td>\n<td>All supported</td>\n<td>All supported</td>\n</tr>\n<tr>\n<td>Event Binding</td>\n<td>yes such as on-submit, also using actions</td>\n<td>yes such as ng-click and also using Emitter</td>\n<td>Yes such as v-on and also using Methods</td>\n<td>yes such as onclick and also using methods</td>\n</tr>\n</tbody>\n</table>\n</div>\n## Performance\n \n All have been developed with performance in mind,however, they are fairly similar with a minor differences which in my \n opinion, it ready does not matter in the end. The chart below shows that the final results is pretty much similar with little milliseconds discrepancies.\n \n![Quick Performance comparison](/assets/images/march2017/performance.jpg \"quick performance comparison\"){:class=\"img-responsive\"}\n<p>Benchmarked by: <a href=\"https://github.com/krausest/js-framework-benchmark\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">js-framework-benchmark</a>\nCredited to: <a href=\"http://www.stefankrause.net/wp/?p=392\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">stefan krause</a> </p>\n<h2 id=\"which-one-to-choose\"><a href=\"#which-one-to-choose\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Which one to choose?</h2>\n<p>As you see, There are many similarities between them, although they tend to follow their mindset. All of them are awesome\nand all of their works is highly appreciated. However, at the end of the day, we need to choose one in our team, therefore,\nhere is my opinion. </p>\n<h3 id=\"emberjs\"><a href=\"#emberjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ember.js</h3>\n<p>An awesome framework and as its builders say, it is going to be a SDK for web. Although learning ember doest not seem easy, it is\na fact that if you get used to it, you are not able to abandon it! I personally believe (as a one year Ember developer), it's by far\none of the best in Front-end technology and should be used for Semi-enterprise to enterprise application where all developers\nare mostly senior. Moreover, finding senior and ember developer should not be that much difficult for the company in order to expand the team in the future. </p>\n<h3 id=\"angular-2\"><a href=\"#angular-2\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Angular 2</h3>\n<p>Well, it has been designed to mitigate performance, productivity and unique codebase between different platforms. Hence, indeed, they did a great job can could achieve their goals.\nAngular's roadmap is very distinctive. One of the main strengths of Angular team is to be backed by Google. However, it's should be considered only for enterprise application.</p>\n<h3 id=\"vuejs\"><a href=\"#vuejs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue.js</h3>\n<p>Nothing can be easier than Vue.js. Super slim and easy to learn. Vue's goal tends to stick on pure javascript object and functionality rather than make that complex.\nHence, Vue's performance has slightly better than other rivals and make that easy to learn and very handy to have a quick project. However, due to less community members and obscured\nroadmap as well as lack of large well-tested application in production, I am still doubtful to say it can be use in enterprise while it is the best to start\nfor small and medium applications. </p>\n<h3 id=\"reactjs\"><a href=\"#reactjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.js</h3>\n<p>Well, nothing to say. It's perfect at every single aspect. Although I personally do not like to write JSX code, I would say it is the\nmost powerful approach that I have seen so far. React is a tiny library to manipulate the DOM which fits small project need, whereas it can be powerful enough when it combines with other addons to build a enterprise app. In one word, </p>\n<h2 id=\"so-what-do-i-prefer-finally\"><a href=\"#so-what-do-i-prefer-finally\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>So what do I prefer finally?</h2>\n<p>In my perspective, choosing of the above frameworks is completely depends on your projects, the future of that and more importantly\nthe company and the team that you are working with. For some, it's is important to see huge backers and obvious roadmap then you should consider React and Angular2 while others think simplicity is the most important one then\nyou definitely should consider Vue.js. </p>\n<p>Like I said, I am a passionate Javascript developer and I love all of them. However, last but not least, my personal choices would be: 1- Angular, 2- Ember, 3- React and 4- Vue. </p>\n<p>My advice is \"do not spend to much time to choose between one of the frameworks named above, in fact, find the one that is the most desirable and adaptable among team's developers or you feel comfortable the most.\"</p>",
            "id": "97733994-8c9e-5380-b6b0-3eef063adda1",
            "fields": {
              "slug": "which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js"
            },
            "frontmatter": {
              "date": "2017-03-12",
              "title": "Which one should I choose? Angular 2, Vue.js, React.js and Ember.js?",
              "category": "Frontend",
              "tags": [
                "Angular",
                "React",
                "Vue.js",
                "Ember.js"
              ],
              "banner": ""
            },
            "timeToRead": 7
          }
        ],
        "tagName": "React"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "id": "SitePage /tags/react",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "04af990add51593db05bc6bce7f4c29c",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/vue-js": {
      "jsonName": "tags-vue-js-436",
      "internalComponentName": "ComponentTagsVueJs",
      "path": "/tags/vue-js",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "componentChunkName": "component---src-templates-tag-tsx",
      "context": {
        "posts": [
          {
            "excerpt": "It is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using \nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:   Live Demo…",
            "html": "<p>It is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using\nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:  <a href=\"https://www.majidhajian.com/vue2-shop/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Live Demo - Vue.js Shop</a></p>\n<p>In the battle of front-end frameworks, these days, I feel I am confused that how to answer my question about \"which frameworks should I choose?\".\nAs a passionate Javascript developer, it is super tough to choose between the following frameworks or libraries to start a new project. All of them come with pros and cons as well as perfect features that makes you impressed and as confused as you are not able to stick on one. </p>\n<p>I tend to wrap up my research and experiences as a single table which can be reviewed below:</p>\n<div style=\"overflow-x:auto;\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Ember.js</th>\n<th>Angular 2</th>\n<th>Vue.js 2</th>\n<th>React.js</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Github Star</td>\n<td>17,620</td>\n<td>55,021 + 21,572</td>\n<td>46,272</td>\n<td>61,653</td>\n</tr>\n<tr>\n<td>Contributors</td>\n<td>651</td>\n<td>1571 + 408</td>\n<td>84</td>\n<td>954</td>\n</tr>\n<tr>\n<td>Stackoverflow</td>\n<td>20,822</td>\n<td>40,374</td>\n<td>4,789</td>\n<td>35,846</td>\n</tr>\n<tr>\n<td>Reactive Programming</td>\n<td>Not in the core - Addon : RxEmber - not up to date</td>\n<td>RxJs 5, In the core</td>\n<td>Partially in the core, Fully with addon</td>\n<td>Not in the core, very good plugin</td>\n</tr>\n<tr>\n<td>State Management</td>\n<td>Ember Data - core  Ember-Redux addon</td>\n<td>Observable Stream in core, Two perfect plugin for Redux One is a wrapper Redux =-angular and one is based on Redux but it has its own API, Ng-redux/store</td>\n<td>Vuex which considers as Core addon</td>\n<td>React-Redux supports with community</td>\n</tr>\n<tr>\n<td>Functional Programing</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Isomorphic</td>\n<td>Fast-boot Still beta</td>\n<td>Universal, part of the core</td>\n<td>different plugin, Nuxt, vue-server-renderer</td>\n<td>different approach, mostly good</td>\n</tr>\n<tr>\n<td>Native App Or Hybrid App</td>\n<td>different addons such as ember-cli-cordova</td>\n<td>NativeScript port</td>\n<td>weex, still under development from Alibaba</td>\n<td>React Native</td>\n</tr>\n<tr>\n<td>Browser Support</td>\n<td>IE9+</td>\n<td>IE10+ , Polyfill for IE9</td>\n<td>IE9+</td>\n<td>IE9+</td>\n</tr>\n<tr>\n<td>Animation Support</td>\n<td>with addon</td>\n<td>In core, @angular/animation</td>\n<td>in core Transition</td>\n<td>Addon</td>\n</tr>\n<tr>\n<td>Bundler</td>\n<td>Broccoli, however can be port to webpack and rollupjs</td>\n<td>Webpack, completely ready to be use with System.js or Rollup.js</td>\n<td>webpack, can be port to different bundler</td>\n<td>webpack can be port to different bundler</td>\n</tr>\n<tr>\n<td>App Structure</td>\n<td>Strictly Opinionated</td>\n<td>Partially Opinionated</td>\n<td>unopinionated</td>\n<td>unopinionated</td>\n</tr>\n<tr>\n<td>Sponsor</td>\n<td>Tilde INC</td>\n<td>Google</td>\n<td>Evan You! but to be adapted by Alibaba</td>\n<td>Facebook</td>\n</tr>\n<tr>\n<td>Typescript Support</td>\n<td>Through Addon with Pain, However, ES6 is more than enough for Ember</td>\n<td>Core</td>\n<td>can be port to typescript however can be painful while using addon due to lack of proper typing</td>\n<td>possible, however JSX is powerful enough</td>\n</tr>\n<tr>\n<td>Lazy Loading</td>\n<td>with Addon, natively needs more develop, however, result is aswesome</td>\n<td>in Core with ng router and webpack</td>\n<td>in core with vue-router and webpack</td>\n<td>addon with react-router and webpack</td>\n</tr>\n<tr>\n<td>Framework Architecture</td>\n<td>MVVM</td>\n<td>MVVM + Modular system through Component Architecture</td>\n<td>VM and component architecture</td>\n<td>VM and component architecture</td>\n</tr>\n<tr>\n<td>Tree Shaking</td>\n<td>Addon for broccoli</td>\n<td>webpack2 supports</td>\n<td>webpack2 supports</td>\n<td>webpack2 supports</td>\n</tr>\n<tr>\n<td>Deployment</td>\n<td>wide range of platforms with Ember-cli-deploy as easy as one command !!</td>\n<td>through addons with great support and less configuration,However, good pipeline for deployment</td>\n<td>Not really have  good pipeline and can be painful to design, however, many good examples are found</td>\n<td>wide rang of possibilities with Zero configuration</td>\n</tr>\n<tr>\n<td>Unit Test</td>\n<td>Qunit but not limited to</td>\n<td>Jasmine but not limited to</td>\n<td>Mocha but not limited to</td>\n<td>Jest but not limited to</td>\n</tr>\n<tr>\n<td>Test Runner</td>\n<td>Karma</td>\n<td>Karma</td>\n<td>Karma</td>\n<td>Karma</td>\n</tr>\n<tr>\n<td>End-to-End (integration) Test</td>\n<td>ember-testing,and can be integrated with different approach however, it may be painful</td>\n<td>protractor and can be integrated with different approach however, it may be painful</td>\n<td>Nightwatch or Testcafe</td>\n<td>Selenium WebDriver and many more</td>\n</tr>\n<tr>\n<td>Learning Curve</td>\n<td>Advanced</td>\n<td>Advanced</td>\n<td>Simple</td>\n<td>Simple</td>\n</tr>\n<tr>\n<td>Enterprise Adaptability</td>\n<td>YES, specially with Ember Engine</td>\n<td>Recommend for this section</td>\n<td>apparently it is however, not much real example</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Code Complexity</td>\n<td>Mature SDK like Rails</td>\n<td>Well-rich   framework like Java based frameworks</td>\n<td>Library</td>\n<td>Library</td>\n</tr>\n<tr>\n<td>Chrome Debugger</td>\n<td>YES</td>\n<td>YES</td>\n<td>YES</td>\n<td>YES</td>\n</tr>\n<tr>\n<td>Progressive web app</td>\n<td>Addon</td>\n<td>Addon and webpack plugin</td>\n<td>Addon,and webpack plugin</td>\n<td>Addon,and webpack plugin</td>\n</tr>\n<tr>\n<td>Job Opportunity</td>\n<td>not that much</td>\n<td>A lot</td>\n<td>rarely</td>\n<td>A lot</td>\n</tr>\n<tr>\n<td>Directive</td>\n<td>yes but different approach</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Data binding</td>\n<td>Two way, very efficient</td>\n<td>Two way, super efficient</td>\n<td>Two way, super efficient</td>\n<td>Two way, super efficient</td>\n</tr>\n<tr>\n<td>Filter, Pipe, mixin, helper</td>\n<td>All supported</td>\n<td>All supported</td>\n<td>All supported</td>\n<td>All supported</td>\n</tr>\n<tr>\n<td>Event Binding</td>\n<td>yes such as on-submit, also using actions</td>\n<td>yes such as ng-click and also using Emitter</td>\n<td>Yes such as v-on and also using Methods</td>\n<td>yes such as onclick and also using methods</td>\n</tr>\n</tbody>\n</table>\n</div>\n## Performance\n \n All have been developed with performance in mind,however, they are fairly similar with a minor differences which in my \n opinion, it ready does not matter in the end. The chart below shows that the final results is pretty much similar with little milliseconds discrepancies.\n \n![Quick Performance comparison](/assets/images/march2017/performance.jpg \"quick performance comparison\"){:class=\"img-responsive\"}\n<p>Benchmarked by: <a href=\"https://github.com/krausest/js-framework-benchmark\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">js-framework-benchmark</a>\nCredited to: <a href=\"http://www.stefankrause.net/wp/?p=392\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">stefan krause</a> </p>\n<h2 id=\"which-one-to-choose\"><a href=\"#which-one-to-choose\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Which one to choose?</h2>\n<p>As you see, There are many similarities between them, although they tend to follow their mindset. All of them are awesome\nand all of their works is highly appreciated. However, at the end of the day, we need to choose one in our team, therefore,\nhere is my opinion. </p>\n<h3 id=\"emberjs\"><a href=\"#emberjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ember.js</h3>\n<p>An awesome framework and as its builders say, it is going to be a SDK for web. Although learning ember doest not seem easy, it is\na fact that if you get used to it, you are not able to abandon it! I personally believe (as a one year Ember developer), it's by far\none of the best in Front-end technology and should be used for Semi-enterprise to enterprise application where all developers\nare mostly senior. Moreover, finding senior and ember developer should not be that much difficult for the company in order to expand the team in the future. </p>\n<h3 id=\"angular-2\"><a href=\"#angular-2\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Angular 2</h3>\n<p>Well, it has been designed to mitigate performance, productivity and unique codebase between different platforms. Hence, indeed, they did a great job can could achieve their goals.\nAngular's roadmap is very distinctive. One of the main strengths of Angular team is to be backed by Google. However, it's should be considered only for enterprise application.</p>\n<h3 id=\"vuejs\"><a href=\"#vuejs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue.js</h3>\n<p>Nothing can be easier than Vue.js. Super slim and easy to learn. Vue's goal tends to stick on pure javascript object and functionality rather than make that complex.\nHence, Vue's performance has slightly better than other rivals and make that easy to learn and very handy to have a quick project. However, due to less community members and obscured\nroadmap as well as lack of large well-tested application in production, I am still doubtful to say it can be use in enterprise while it is the best to start\nfor small and medium applications. </p>\n<h3 id=\"reactjs\"><a href=\"#reactjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.js</h3>\n<p>Well, nothing to say. It's perfect at every single aspect. Although I personally do not like to write JSX code, I would say it is the\nmost powerful approach that I have seen so far. React is a tiny library to manipulate the DOM which fits small project need, whereas it can be powerful enough when it combines with other addons to build a enterprise app. In one word, </p>\n<h2 id=\"so-what-do-i-prefer-finally\"><a href=\"#so-what-do-i-prefer-finally\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>So what do I prefer finally?</h2>\n<p>In my perspective, choosing of the above frameworks is completely depends on your projects, the future of that and more importantly\nthe company and the team that you are working with. For some, it's is important to see huge backers and obvious roadmap then you should consider React and Angular2 while others think simplicity is the most important one then\nyou definitely should consider Vue.js. </p>\n<p>Like I said, I am a passionate Javascript developer and I love all of them. However, last but not least, my personal choices would be: 1- Angular, 2- Ember, 3- React and 4- Vue. </p>\n<p>My advice is \"do not spend to much time to choose between one of the frameworks named above, in fact, find the one that is the most desirable and adaptable among team's developers or you feel comfortable the most.\"</p>",
            "id": "97733994-8c9e-5380-b6b0-3eef063adda1",
            "fields": {
              "slug": "which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js"
            },
            "frontmatter": {
              "date": "2017-03-12",
              "title": "Which one should I choose? Angular 2, Vue.js, React.js and Ember.js?",
              "category": "Frontend",
              "tags": [
                "Angular",
                "React",
                "Vue.js",
                "Ember.js"
              ],
              "banner": ""
            },
            "timeToRead": 7
          }
        ],
        "tagName": "Vue.js"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "id": "SitePage /tags/vue-js",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4e12b5a42cc2818cab09accf3e9de41a",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/databases": {
      "jsonName": "tags-databases-0ec",
      "internalComponentName": "ComponentTagsDatabases",
      "path": "/tags/databases",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "componentChunkName": "component---src-templates-tag-tsx",
      "context": {
        "posts": [
          {
            "excerpt": "Decision made While we were developing our  affiliate manager software  in my company, we (development team) decided to migrate raw data from \na 3rd party  MySQL (MariaDB) database which company was using to our  Rails  default db engine which was…",
            "html": "<h2 id=\"decision-made\"><a href=\"#decision-made\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Decision made</h2>\n<p>While we were developing our <em>affiliate manager software</em> in my company, we (development team) decided to migrate raw data from\na 3rd party <strong>MySQL</strong>(MariaDB) database which company was using to our <strong>Rails</strong> default db engine which was <strong>PostgresSQL</strong>.\nThus, I was assigned to do this task. </p>\n<p>I went through many available tools and tested as much as possible. I could not make sure they all are capable\nof handling such a massive sql file. I was about to decide witting a migration script with <strong>NodeJS</strong> that\nI finally found <a href=\"http://pgloader.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pgloader</a> by <a href=\"https://twitter.com/tapoueh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dimitri Fontaine</a>. </p>\n<p>First, It looked to me very promising and I said to myself: \"Yes, this is it.\". Before counting, let me say what is Pgloader. </p>\n<blockquote>pgloader is a data loading tool for PostgreSQL, using the COPY command.\nIts main advantage over just using COPY or \\copy, and over using a Foreign Data Wrapper, is its transaction behaviour, where pgloader will keep a separate file of rejected data, but continue trying to copy good data in your database.\nThe default PostgreSQL behaviour is transactional, which means that any erroneous line in the input data (file or remote database) will stop the entire bulk load for the table.\npgloader also implements data reformatting, a typical example of that being the transformation of MySQL datestamps 0000-00-00 and 0000-00-00 00:00:00 to PostgreSQL NULL value (because our calendar never had a year zero).\n</blockquote>\n<p>I started testing that with different circumstances and all test was pretty good. Therefore, I gave it a try and\nrun the final command to migrate that the result was pretty awesome in my Mac and I was excited though:</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Successfully migrated from <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> 5 to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> 9.5, roughly 16GB data, thanks to <a href=\"https://twitter.com/tapoueh\">@tapoueh</a> for a fantastic <a href=\"https://twitter.com/hashtag/pgloader?src=hash\">#pgloader</a> tool <a href=\"https://t.co/8lDziCnJqV\">pic.twitter.com/8lDziCnJqV</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/806763214092414976\">December 8, 2016</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p>Although, everything was pretty good on my local machine while I wanted to do that in our <strong>EC2</strong>, I faced with many difficulties as\nour server was not as perfect as my local machine with a low memory as small as 512MB until I made <a href=\"http://ccl.clozure.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ClozureCL</a> on the Ubuntu as a default\ncompiler for <a href=\"https://www.common-lisp.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lisp</a> which is written's lagrange of Pgloader and performance was incredibly unbelievable. </p>\n <blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/ClozureCL?src=hash\">#ClozureCL</a> instead of <a href=\"https://twitter.com/hashtag/SBCL?src=hash\">#SBCL</a> while migrating <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> with 16GB data on <a href=\"https://twitter.com/hashtag/AWS?src=hash\">#AWS</a> <a href=\"https://twitter.com/hashtag/EC2?src=hash\">#EC2</a> 512MB RAM!! That&#39;s awesome, thanks <a href=\"https://twitter.com/tapoueh\">@tapoueh</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/807632035300769792\">December 10, 2016</a></blockquote>\n <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n \nI encourage you to watch this video : [http://pgloader.io/](Why did pgloader get so much faster?). \n<p>Even though, many different ways of conversions are provided by Pgloader, I pick only migration from Mysql part and write my experience with that.\nHowever, feel free to check Pgloader website's documentation and do more with less!</p>\n<h2 id=\"pgloader-installation\"><a href=\"#pgloader-installation\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pgloader installation</h2>\n<p>Hopefully, Pgloader developed with increasing productivity and performance in mind. So, it is predictable that installing\nthis tools would be as easy as a command. To start with that you can read <a href=\"http://pgloader.io/howto/quickstart.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Quick Start</a> on pgloader.io. </p>\n<p>Binary build are available on distributions where pgloader is packaged, which currently includes only <strong>debian</strong> and <strong>apt.postgresql.org</strong> which covers both <strong>debian</strong> and <strong>ubuntu</strong> Operating Systems.</p>\n<p>Note that pgloader is easy enough to build from sources, see pgloader INSTALL.md file. For RPM based systems, see also the bootstrap-centos7.sh script that prepares your build environment so that building is then just a git clone then make away.</p>\n<p>Building for the <strong>Windows™ Operating System</strong> is easy enough and the platform is fully supported.</p>\n<ul>\n<li><strong>Mac</strong> <code class=\"language-text\">brew install pgloader</code></li>\n<li><strong>Ubuntu</strong> <code class=\"language-text\">apt-get install pgloader</code></li>\n<li><strong>Docker</strong>: You can also use a docker image for pgloader at <a href=\"https://hub.docker.com/r/dimitri/pgloader/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hub.docker.com/r/dimitri/pgloader/</a> </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker pull dimitri/pgloader\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --version\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --help</code></pre></div>\n<ul>\n<li><strong>Build From Source</strong> Pgloader is now a Common Lisp program, tested using the SBCL (>= 1.1.14) and Clozure CL implementations with Quicklisp.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apt-get install sbcl unzip libsqlite3-dev make curl gawk freetds-dev libzip-dev\ncd /path/to/pgloader\nmake pgloader\n./build/bin/pgloader --help</code></pre></div>\n<ul>\n<li><strong>Repository</strong>: <a href=\"https://github.com/dimitri/pgloader\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">To learn more information</a></li>\n</ul>\n<p>Please feel free to drop me an email if you need more help.</p>\n<h2 id=\"better-performance-with-clozurecl\"><a href=\"#better-performance-with-clozurecl\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Better Performance with ClozureCL</h2>\n<p>One of the important problem that I faced, was low memory and killing process by pgloader on our EC2 which has 512MB ram. So,\nDimitri in one of the issue on Github Suggest to use CCL instead of SBCL so I also recommend to do it as the performance is significantly\nbetter and no issue in dropping process because lack of memory. </p>\n<p>The preferred way to get Clozure CL is via Subversion. For example, to get Clozure CL 1.11 for Darwin/x86, you'd type (where the $ is the shell prompt):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">svn co http://svn.clozure.com/publicsvn/openmcl/release/1.11/darwinx86/ccl</code></pre></div>\n<p>Please follow all the steps (here)(<a href=\"http://ccl.clozure.com/download.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://ccl.clozure.com/download.html</a>) and after making that done remember to make Pgloader with CCL as follow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">make CL=ccl pgloader</code></pre></div>\n<p>Now, We are all good to begin.</p>\n<h2 id=\"migrating-from-mysql\"><a href=\"#migrating-from-mysql\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Migrating from MySQL</h2>\n<p>Just create a database where to host the MySQL data and definitions and have pgloader do the migration for you in a single command line:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">createdb pgdb</code></pre></div>\n<p>a single simple command to start, is just as easy as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pgloader mysql://user@localhost/mydb postgresql:///pgdb </code></pre></div>\n<p>where you can expand your Postgresql link as such:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgres://username:password@server:port/databasename</code></pre></div>\n<p>but it my not be enough. For instance, if you are connection to a remote database such a database on <strong>Heroku</strong> where\nit consumes SSL as default, you need to add your params to the url to enable ssl, so command would be as below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgres://username:password@server:port/databasename?sslmode=require</code></pre></div>\n<p>So, if you want to load your pg dump to Heroku you can run as simple as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">heroku pg:psql HEROKU_POSTGRESQL_GREEN_URL --app YOUR_APP_NAME_HERE &lt; pgdump</code></pre></div>\n<h2 id=\"common-issues\"><a href=\"#common-issues\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Common issues</h2>\n<p>You may see the following error for first time: <code class=\"language-text\">this is incompatible with sql_mode=only_full_group_by</code>\nbut no worries you can easily bypass that.\nYou can try to disable the only<em>full</em>group_by setting by executing the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql&gt; set global sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></pre></div>\n<p>or </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql&gt; set session sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></pre></div>\n<p>I hope you find this post helpful and feel free to drop an email your feedback which is already appreciated.</p>",
            "id": "dfa733e0-c45d-5ce6-9566-d6babb618589",
            "fields": {
              "slug": "pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql"
            },
            "frontmatter": {
              "date": "2016-12-08",
              "title": "Pgloader makes that easy to migrate From Mysql to Postgresql",
              "category": "DevOps",
              "tags": [
                "databases",
                "mysql",
                "postgresql"
              ],
              "banner": ""
            },
            "timeToRead": 6
          }
        ],
        "tagName": "databases"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "id": "SitePage /tags/databases",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "6ac903f412ae76a934668048edfe862a",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/linux": {
      "jsonName": "tags-linux-15e",
      "internalComponentName": "ComponentTagsLinux",
      "path": "/tags/linux",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "componentChunkName": "component---src-templates-tag-tsx",
      "context": {
        "posts": [
          {
            "excerpt": "One of the common command on Linux is to compress or decompress files and folders. While it's easy to do, there is no progress bar\nfor usual command such as Tar, Zip, Importing to Database or Exporting logs. It may be interesting that there are lots…",
            "html": "<p>One of the common command on Linux is to compress or decompress files and folders. While it's easy to do, there is no progress bar\nfor usual command such as Tar, Zip, Importing to Database or Exporting logs. It may be interesting that there are lots of tools to use. However, I found\n<a href=\"http://www.ivarch.com/programs/pv.shtml\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pipe Viewer</a> very handy and useful. </p>\n<p><strong>PV</strong> <em>[Pipe Viewer]</em> is a terminal-based tool for monitoring\nthe progress of data through a pipeline. It can be inserted into any normal pipeline between two processes to give a visual indication of\nhow quickly data is passing through, how long it has taken, how near to completion it is, and an estimate of how long it will be until completion.</p>\n<h3 id=\"some-of-the-benefits-of-using-pv-are\"><a href=\"#some-of-the-benefits-of-using-pv-are\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Some of the benefits of using PV are:</h3>\n<ul>\n<li>Total data transferred</li>\n<li>Time elapsed</li>\n<li>Current throughput rate</li>\n<li>Percentage completed</li>\n<li>ETA</li>\n</ul>\n<h3 id=\"to-install-pv-follow-the-guides-below-depends-on-your-os\"><a href=\"#to-install-pv-follow-the-guides-below-depends-on-your-os\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>To Install PV, follow the guides below depends on your OS:</h3>\n<ul>\n<li><strong>CentOS / RHEL:</strong>\tSet up my YUM repository or use RepoForge, then do <code class=\"language-text\">yum install pv</code>.</li>\n<li><strong>Fedora:</strong>\tRun <code class=\"language-text\">yum install pv</code>; the \"extras\" repository may be required.</li>\n<li><strong>Debian / Ubuntu:</strong>\tRun <code class=\"language-text\">apt-get install pv</code> to get the latest packaged version from <code class=\"language-text\">unstable</code> / <code class=\"language-text\">testing</code>.</li>\n<li><strong>Slackware:</strong>\tUse this SlackBuild script.</li>\n<li><strong>Cygwin:</strong>\tAvailable as a package.</li>\n<li><strong>FreeBSD:</strong> Listed on FreshPorts.</li>\n<li><strong>OpenBSD:</strong> Listed under ports.</li>\n<li><strong>Solaris:</strong> Download binary packages from OpenCSW.</li>\n<li><strong>OpenSolaris:</strong>\tIncludes pv version 1.1.4 in the <code class=\"language-text\">/dev</code> repository (as of build 119). Install with <code class=\"language-text\">pkg install SUNWpipe-viewer</code>.</li>\n<li><strong>AIX:</strong> An RPM from <em>Pawel Piatek</em> is in the downloads section.</li>\n<li><strong>MacPorts:</strong>\tRun <code class=\"language-text\">port install pv</code> to get the latest version. </li>\n<li><strong>Mac HomeBrew:</strong>\tRun <code class=\"language-text\">brew update &amp; brew install pv</code> to get the latest version. </li>\n<li><strong>Exherbo:</strong>\tRun <code class=\"language-text\">cave resolve -x app-misc/pv</code> to get the latest version. </li>\n<li><strong>Gentoo:</strong>\tRun <code class=\"language-text\">emerge sys-apps/pv</code> to get the latest version. </li>\n<li><strong>IRIX Nekoware:</strong>\tAvailable in the <em>Nekoware</em> \"beta\" repository.</li>\n</ul>\n<p>As an example, I would like to start with using PV while importing a dump of <strong>MySQL</strong> database. </p>\n<p>You are able to import your <code class=\"language-text\">.sql</code> file into the database as easy as the command below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql --user=username --password=password database_name &lt; dump.sql</code></pre></div>\n<p>which in short is equivalent to </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql -u username -p password database_name &lt; dump.sql</code></pre></div>\n<p>Although it seems quite OK, It is not as helpful as it looks when you have a big file.\nWe might have considered better solution as we need to know the status of progress for our\nrecord. Therefore, here is the usage of PV while importing our dump. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv your_dump.sql | mysql -u root database_name</code></pre></div>\n<p>In this case, you are able to see the progress bar just as below:</p>\n<p><img src=\"/assets/images/dec2016/pv-sample.jpg\" alt=\"PV Status Bar\" title=\"Pipe Viewer example\"></p>\n<h3 id=\"more-examples-to-monitor-of-pv-data-progress-sent-via-a-pipe\"><a href=\"#more-examples-to-monitor-of-pv-data-progress-sent-via-a-pipe\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>More examples to Monitor of PV data progress, sent via a Pipe:</h3>\n<p>1- To copy a file called your_access.log to /tmp/something-access.log and show progress:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv your_access.log &gt; /tmp/something-access.log</code></pre></div>\n<p>2- To compress a lot of files within a folder and seeing progress bar</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">tar cf - /folder-with-big-files -P | pv -s $(du -sb /folder-with-big-files | awk &#39;{print $1}&#39;) | gzip &gt; big-files.tar.gz</code></pre></div>\n<p>3- To watch how quickly a file is transferred using nc(1):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv file | nc -w 1 somewhere.com 3000</code></pre></div>\n<p>4- To transfer a file from another process and passing the expected size to pv:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cat file | pv -s 12345 | nc -w 1 majidhajian.com 3000</code></pre></div>\n<p>5- To decompress a huge tar.gz file</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv file.tgz | tar xzf - -C target_directory</code></pre></div>\n<p>All in all, Result of all of them like I added a picture to show, is similar as follow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">12.16MB 0:00:20 [6.06MB/s] [==================&gt;               ] 55%  ETA 0:00:37</code></pre></div>\n<p>I encourage you to read more about this amazing tool and be familiar with that. I have plan to\npublish another article about <code class=\"language-text\">screen</code> which is another great tool and combination of both, will make your\nlife as a developer more relaxed. </p>",
            "id": "8d44fc67-497f-5a98-9566-a316ab6286db",
            "fields": {
              "slug": "progress-status-using-pipe-viewer-while-importing-my-sql-databases"
            },
            "frontmatter": {
              "date": "2016-12-07",
              "title": "Progress status using PipeViewer while importing MySQL databases",
              "category": "DevOps",
              "tags": [
                "linux",
                "mysql"
              ],
              "banner": ""
            },
            "timeToRead": 3
          }
        ],
        "tagName": "linux"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "id": "SitePage /tags/linux",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b989339139fae0e08d17bb3c4fab244d",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/mysql": {
      "jsonName": "tags-mysql-331",
      "internalComponentName": "ComponentTagsMysql",
      "path": "/tags/mysql",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "componentChunkName": "component---src-templates-tag-tsx",
      "context": {
        "posts": [
          {
            "excerpt": "Decision made While we were developing our  affiliate manager software  in my company, we (development team) decided to migrate raw data from \na 3rd party  MySQL (MariaDB) database which company was using to our  Rails  default db engine which was…",
            "html": "<h2 id=\"decision-made\"><a href=\"#decision-made\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Decision made</h2>\n<p>While we were developing our <em>affiliate manager software</em> in my company, we (development team) decided to migrate raw data from\na 3rd party <strong>MySQL</strong>(MariaDB) database which company was using to our <strong>Rails</strong> default db engine which was <strong>PostgresSQL</strong>.\nThus, I was assigned to do this task. </p>\n<p>I went through many available tools and tested as much as possible. I could not make sure they all are capable\nof handling such a massive sql file. I was about to decide witting a migration script with <strong>NodeJS</strong> that\nI finally found <a href=\"http://pgloader.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pgloader</a> by <a href=\"https://twitter.com/tapoueh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dimitri Fontaine</a>. </p>\n<p>First, It looked to me very promising and I said to myself: \"Yes, this is it.\". Before counting, let me say what is Pgloader. </p>\n<blockquote>pgloader is a data loading tool for PostgreSQL, using the COPY command.\nIts main advantage over just using COPY or \\copy, and over using a Foreign Data Wrapper, is its transaction behaviour, where pgloader will keep a separate file of rejected data, but continue trying to copy good data in your database.\nThe default PostgreSQL behaviour is transactional, which means that any erroneous line in the input data (file or remote database) will stop the entire bulk load for the table.\npgloader also implements data reformatting, a typical example of that being the transformation of MySQL datestamps 0000-00-00 and 0000-00-00 00:00:00 to PostgreSQL NULL value (because our calendar never had a year zero).\n</blockquote>\n<p>I started testing that with different circumstances and all test was pretty good. Therefore, I gave it a try and\nrun the final command to migrate that the result was pretty awesome in my Mac and I was excited though:</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Successfully migrated from <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> 5 to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> 9.5, roughly 16GB data, thanks to <a href=\"https://twitter.com/tapoueh\">@tapoueh</a> for a fantastic <a href=\"https://twitter.com/hashtag/pgloader?src=hash\">#pgloader</a> tool <a href=\"https://t.co/8lDziCnJqV\">pic.twitter.com/8lDziCnJqV</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/806763214092414976\">December 8, 2016</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p>Although, everything was pretty good on my local machine while I wanted to do that in our <strong>EC2</strong>, I faced with many difficulties as\nour server was not as perfect as my local machine with a low memory as small as 512MB until I made <a href=\"http://ccl.clozure.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ClozureCL</a> on the Ubuntu as a default\ncompiler for <a href=\"https://www.common-lisp.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lisp</a> which is written's lagrange of Pgloader and performance was incredibly unbelievable. </p>\n <blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/ClozureCL?src=hash\">#ClozureCL</a> instead of <a href=\"https://twitter.com/hashtag/SBCL?src=hash\">#SBCL</a> while migrating <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> with 16GB data on <a href=\"https://twitter.com/hashtag/AWS?src=hash\">#AWS</a> <a href=\"https://twitter.com/hashtag/EC2?src=hash\">#EC2</a> 512MB RAM!! That&#39;s awesome, thanks <a href=\"https://twitter.com/tapoueh\">@tapoueh</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/807632035300769792\">December 10, 2016</a></blockquote>\n <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n \nI encourage you to watch this video : [http://pgloader.io/](Why did pgloader get so much faster?). \n<p>Even though, many different ways of conversions are provided by Pgloader, I pick only migration from Mysql part and write my experience with that.\nHowever, feel free to check Pgloader website's documentation and do more with less!</p>\n<h2 id=\"pgloader-installation\"><a href=\"#pgloader-installation\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pgloader installation</h2>\n<p>Hopefully, Pgloader developed with increasing productivity and performance in mind. So, it is predictable that installing\nthis tools would be as easy as a command. To start with that you can read <a href=\"http://pgloader.io/howto/quickstart.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Quick Start</a> on pgloader.io. </p>\n<p>Binary build are available on distributions where pgloader is packaged, which currently includes only <strong>debian</strong> and <strong>apt.postgresql.org</strong> which covers both <strong>debian</strong> and <strong>ubuntu</strong> Operating Systems.</p>\n<p>Note that pgloader is easy enough to build from sources, see pgloader INSTALL.md file. For RPM based systems, see also the bootstrap-centos7.sh script that prepares your build environment so that building is then just a git clone then make away.</p>\n<p>Building for the <strong>Windows™ Operating System</strong> is easy enough and the platform is fully supported.</p>\n<ul>\n<li><strong>Mac</strong> <code class=\"language-text\">brew install pgloader</code></li>\n<li><strong>Ubuntu</strong> <code class=\"language-text\">apt-get install pgloader</code></li>\n<li><strong>Docker</strong>: You can also use a docker image for pgloader at <a href=\"https://hub.docker.com/r/dimitri/pgloader/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hub.docker.com/r/dimitri/pgloader/</a> </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker pull dimitri/pgloader\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --version\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --help</code></pre></div>\n<ul>\n<li><strong>Build From Source</strong> Pgloader is now a Common Lisp program, tested using the SBCL (>= 1.1.14) and Clozure CL implementations with Quicklisp.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apt-get install sbcl unzip libsqlite3-dev make curl gawk freetds-dev libzip-dev\ncd /path/to/pgloader\nmake pgloader\n./build/bin/pgloader --help</code></pre></div>\n<ul>\n<li><strong>Repository</strong>: <a href=\"https://github.com/dimitri/pgloader\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">To learn more information</a></li>\n</ul>\n<p>Please feel free to drop me an email if you need more help.</p>\n<h2 id=\"better-performance-with-clozurecl\"><a href=\"#better-performance-with-clozurecl\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Better Performance with ClozureCL</h2>\n<p>One of the important problem that I faced, was low memory and killing process by pgloader on our EC2 which has 512MB ram. So,\nDimitri in one of the issue on Github Suggest to use CCL instead of SBCL so I also recommend to do it as the performance is significantly\nbetter and no issue in dropping process because lack of memory. </p>\n<p>The preferred way to get Clozure CL is via Subversion. For example, to get Clozure CL 1.11 for Darwin/x86, you'd type (where the $ is the shell prompt):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">svn co http://svn.clozure.com/publicsvn/openmcl/release/1.11/darwinx86/ccl</code></pre></div>\n<p>Please follow all the steps (here)(<a href=\"http://ccl.clozure.com/download.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://ccl.clozure.com/download.html</a>) and after making that done remember to make Pgloader with CCL as follow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">make CL=ccl pgloader</code></pre></div>\n<p>Now, We are all good to begin.</p>\n<h2 id=\"migrating-from-mysql\"><a href=\"#migrating-from-mysql\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Migrating from MySQL</h2>\n<p>Just create a database where to host the MySQL data and definitions and have pgloader do the migration for you in a single command line:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">createdb pgdb</code></pre></div>\n<p>a single simple command to start, is just as easy as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pgloader mysql://user@localhost/mydb postgresql:///pgdb </code></pre></div>\n<p>where you can expand your Postgresql link as such:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgres://username:password@server:port/databasename</code></pre></div>\n<p>but it my not be enough. For instance, if you are connection to a remote database such a database on <strong>Heroku</strong> where\nit consumes SSL as default, you need to add your params to the url to enable ssl, so command would be as below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgres://username:password@server:port/databasename?sslmode=require</code></pre></div>\n<p>So, if you want to load your pg dump to Heroku you can run as simple as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">heroku pg:psql HEROKU_POSTGRESQL_GREEN_URL --app YOUR_APP_NAME_HERE &lt; pgdump</code></pre></div>\n<h2 id=\"common-issues\"><a href=\"#common-issues\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Common issues</h2>\n<p>You may see the following error for first time: <code class=\"language-text\">this is incompatible with sql_mode=only_full_group_by</code>\nbut no worries you can easily bypass that.\nYou can try to disable the only<em>full</em>group_by setting by executing the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql&gt; set global sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></pre></div>\n<p>or </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql&gt; set session sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></pre></div>\n<p>I hope you find this post helpful and feel free to drop an email your feedback which is already appreciated.</p>",
            "id": "dfa733e0-c45d-5ce6-9566-d6babb618589",
            "fields": {
              "slug": "pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql"
            },
            "frontmatter": {
              "date": "2016-12-08",
              "title": "Pgloader makes that easy to migrate From Mysql to Postgresql",
              "category": "DevOps",
              "tags": [
                "databases",
                "mysql",
                "postgresql"
              ],
              "banner": ""
            },
            "timeToRead": 6
          },
          {
            "excerpt": "One of the common command on Linux is to compress or decompress files and folders. While it's easy to do, there is no progress bar\nfor usual command such as Tar, Zip, Importing to Database or Exporting logs. It may be interesting that there are lots…",
            "html": "<p>One of the common command on Linux is to compress or decompress files and folders. While it's easy to do, there is no progress bar\nfor usual command such as Tar, Zip, Importing to Database or Exporting logs. It may be interesting that there are lots of tools to use. However, I found\n<a href=\"http://www.ivarch.com/programs/pv.shtml\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pipe Viewer</a> very handy and useful. </p>\n<p><strong>PV</strong> <em>[Pipe Viewer]</em> is a terminal-based tool for monitoring\nthe progress of data through a pipeline. It can be inserted into any normal pipeline between two processes to give a visual indication of\nhow quickly data is passing through, how long it has taken, how near to completion it is, and an estimate of how long it will be until completion.</p>\n<h3 id=\"some-of-the-benefits-of-using-pv-are\"><a href=\"#some-of-the-benefits-of-using-pv-are\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Some of the benefits of using PV are:</h3>\n<ul>\n<li>Total data transferred</li>\n<li>Time elapsed</li>\n<li>Current throughput rate</li>\n<li>Percentage completed</li>\n<li>ETA</li>\n</ul>\n<h3 id=\"to-install-pv-follow-the-guides-below-depends-on-your-os\"><a href=\"#to-install-pv-follow-the-guides-below-depends-on-your-os\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>To Install PV, follow the guides below depends on your OS:</h3>\n<ul>\n<li><strong>CentOS / RHEL:</strong>\tSet up my YUM repository or use RepoForge, then do <code class=\"language-text\">yum install pv</code>.</li>\n<li><strong>Fedora:</strong>\tRun <code class=\"language-text\">yum install pv</code>; the \"extras\" repository may be required.</li>\n<li><strong>Debian / Ubuntu:</strong>\tRun <code class=\"language-text\">apt-get install pv</code> to get the latest packaged version from <code class=\"language-text\">unstable</code> / <code class=\"language-text\">testing</code>.</li>\n<li><strong>Slackware:</strong>\tUse this SlackBuild script.</li>\n<li><strong>Cygwin:</strong>\tAvailable as a package.</li>\n<li><strong>FreeBSD:</strong> Listed on FreshPorts.</li>\n<li><strong>OpenBSD:</strong> Listed under ports.</li>\n<li><strong>Solaris:</strong> Download binary packages from OpenCSW.</li>\n<li><strong>OpenSolaris:</strong>\tIncludes pv version 1.1.4 in the <code class=\"language-text\">/dev</code> repository (as of build 119). Install with <code class=\"language-text\">pkg install SUNWpipe-viewer</code>.</li>\n<li><strong>AIX:</strong> An RPM from <em>Pawel Piatek</em> is in the downloads section.</li>\n<li><strong>MacPorts:</strong>\tRun <code class=\"language-text\">port install pv</code> to get the latest version. </li>\n<li><strong>Mac HomeBrew:</strong>\tRun <code class=\"language-text\">brew update &amp; brew install pv</code> to get the latest version. </li>\n<li><strong>Exherbo:</strong>\tRun <code class=\"language-text\">cave resolve -x app-misc/pv</code> to get the latest version. </li>\n<li><strong>Gentoo:</strong>\tRun <code class=\"language-text\">emerge sys-apps/pv</code> to get the latest version. </li>\n<li><strong>IRIX Nekoware:</strong>\tAvailable in the <em>Nekoware</em> \"beta\" repository.</li>\n</ul>\n<p>As an example, I would like to start with using PV while importing a dump of <strong>MySQL</strong> database. </p>\n<p>You are able to import your <code class=\"language-text\">.sql</code> file into the database as easy as the command below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql --user=username --password=password database_name &lt; dump.sql</code></pre></div>\n<p>which in short is equivalent to </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql -u username -p password database_name &lt; dump.sql</code></pre></div>\n<p>Although it seems quite OK, It is not as helpful as it looks when you have a big file.\nWe might have considered better solution as we need to know the status of progress for our\nrecord. Therefore, here is the usage of PV while importing our dump. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv your_dump.sql | mysql -u root database_name</code></pre></div>\n<p>In this case, you are able to see the progress bar just as below:</p>\n<p><img src=\"/assets/images/dec2016/pv-sample.jpg\" alt=\"PV Status Bar\" title=\"Pipe Viewer example\"></p>\n<h3 id=\"more-examples-to-monitor-of-pv-data-progress-sent-via-a-pipe\"><a href=\"#more-examples-to-monitor-of-pv-data-progress-sent-via-a-pipe\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>More examples to Monitor of PV data progress, sent via a Pipe:</h3>\n<p>1- To copy a file called your_access.log to /tmp/something-access.log and show progress:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv your_access.log &gt; /tmp/something-access.log</code></pre></div>\n<p>2- To compress a lot of files within a folder and seeing progress bar</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">tar cf - /folder-with-big-files -P | pv -s $(du -sb /folder-with-big-files | awk &#39;{print $1}&#39;) | gzip &gt; big-files.tar.gz</code></pre></div>\n<p>3- To watch how quickly a file is transferred using nc(1):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv file | nc -w 1 somewhere.com 3000</code></pre></div>\n<p>4- To transfer a file from another process and passing the expected size to pv:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cat file | pv -s 12345 | nc -w 1 majidhajian.com 3000</code></pre></div>\n<p>5- To decompress a huge tar.gz file</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv file.tgz | tar xzf - -C target_directory</code></pre></div>\n<p>All in all, Result of all of them like I added a picture to show, is similar as follow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">12.16MB 0:00:20 [6.06MB/s] [==================&gt;               ] 55%  ETA 0:00:37</code></pre></div>\n<p>I encourage you to read more about this amazing tool and be familiar with that. I have plan to\npublish another article about <code class=\"language-text\">screen</code> which is another great tool and combination of both, will make your\nlife as a developer more relaxed. </p>",
            "id": "8d44fc67-497f-5a98-9566-a316ab6286db",
            "fields": {
              "slug": "progress-status-using-pipe-viewer-while-importing-my-sql-databases"
            },
            "frontmatter": {
              "date": "2016-12-07",
              "title": "Progress status using PipeViewer while importing MySQL databases",
              "category": "DevOps",
              "tags": [
                "linux",
                "mysql"
              ],
              "banner": ""
            },
            "timeToRead": 3
          }
        ],
        "tagName": "mysql"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "id": "SitePage /tags/mysql",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4ba2aeb1e835c32d383acfbdb687bebd",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /tags/postgresql": {
      "jsonName": "tags-postgresql-864",
      "internalComponentName": "ComponentTagsPostgresql",
      "path": "/tags/postgresql",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "componentChunkName": "component---src-templates-tag-tsx",
      "context": {
        "posts": [
          {
            "excerpt": "Decision made While we were developing our  affiliate manager software  in my company, we (development team) decided to migrate raw data from \na 3rd party  MySQL (MariaDB) database which company was using to our  Rails  default db engine which was…",
            "html": "<h2 id=\"decision-made\"><a href=\"#decision-made\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Decision made</h2>\n<p>While we were developing our <em>affiliate manager software</em> in my company, we (development team) decided to migrate raw data from\na 3rd party <strong>MySQL</strong>(MariaDB) database which company was using to our <strong>Rails</strong> default db engine which was <strong>PostgresSQL</strong>.\nThus, I was assigned to do this task. </p>\n<p>I went through many available tools and tested as much as possible. I could not make sure they all are capable\nof handling such a massive sql file. I was about to decide witting a migration script with <strong>NodeJS</strong> that\nI finally found <a href=\"http://pgloader.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pgloader</a> by <a href=\"https://twitter.com/tapoueh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dimitri Fontaine</a>. </p>\n<p>First, It looked to me very promising and I said to myself: \"Yes, this is it.\". Before counting, let me say what is Pgloader. </p>\n<blockquote>pgloader is a data loading tool for PostgreSQL, using the COPY command.\nIts main advantage over just using COPY or \\copy, and over using a Foreign Data Wrapper, is its transaction behaviour, where pgloader will keep a separate file of rejected data, but continue trying to copy good data in your database.\nThe default PostgreSQL behaviour is transactional, which means that any erroneous line in the input data (file or remote database) will stop the entire bulk load for the table.\npgloader also implements data reformatting, a typical example of that being the transformation of MySQL datestamps 0000-00-00 and 0000-00-00 00:00:00 to PostgreSQL NULL value (because our calendar never had a year zero).\n</blockquote>\n<p>I started testing that with different circumstances and all test was pretty good. Therefore, I gave it a try and\nrun the final command to migrate that the result was pretty awesome in my Mac and I was excited though:</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Successfully migrated from <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> 5 to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> 9.5, roughly 16GB data, thanks to <a href=\"https://twitter.com/tapoueh\">@tapoueh</a> for a fantastic <a href=\"https://twitter.com/hashtag/pgloader?src=hash\">#pgloader</a> tool <a href=\"https://t.co/8lDziCnJqV\">pic.twitter.com/8lDziCnJqV</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/806763214092414976\">December 8, 2016</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p>Although, everything was pretty good on my local machine while I wanted to do that in our <strong>EC2</strong>, I faced with many difficulties as\nour server was not as perfect as my local machine with a low memory as small as 512MB until I made <a href=\"http://ccl.clozure.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ClozureCL</a> on the Ubuntu as a default\ncompiler for <a href=\"https://www.common-lisp.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lisp</a> which is written's lagrange of Pgloader and performance was incredibly unbelievable. </p>\n <blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/ClozureCL?src=hash\">#ClozureCL</a> instead of <a href=\"https://twitter.com/hashtag/SBCL?src=hash\">#SBCL</a> while migrating <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> with 16GB data on <a href=\"https://twitter.com/hashtag/AWS?src=hash\">#AWS</a> <a href=\"https://twitter.com/hashtag/EC2?src=hash\">#EC2</a> 512MB RAM!! That&#39;s awesome, thanks <a href=\"https://twitter.com/tapoueh\">@tapoueh</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/807632035300769792\">December 10, 2016</a></blockquote>\n <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n \nI encourage you to watch this video : [http://pgloader.io/](Why did pgloader get so much faster?). \n<p>Even though, many different ways of conversions are provided by Pgloader, I pick only migration from Mysql part and write my experience with that.\nHowever, feel free to check Pgloader website's documentation and do more with less!</p>\n<h2 id=\"pgloader-installation\"><a href=\"#pgloader-installation\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pgloader installation</h2>\n<p>Hopefully, Pgloader developed with increasing productivity and performance in mind. So, it is predictable that installing\nthis tools would be as easy as a command. To start with that you can read <a href=\"http://pgloader.io/howto/quickstart.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Quick Start</a> on pgloader.io. </p>\n<p>Binary build are available on distributions where pgloader is packaged, which currently includes only <strong>debian</strong> and <strong>apt.postgresql.org</strong> which covers both <strong>debian</strong> and <strong>ubuntu</strong> Operating Systems.</p>\n<p>Note that pgloader is easy enough to build from sources, see pgloader INSTALL.md file. For RPM based systems, see also the bootstrap-centos7.sh script that prepares your build environment so that building is then just a git clone then make away.</p>\n<p>Building for the <strong>Windows™ Operating System</strong> is easy enough and the platform is fully supported.</p>\n<ul>\n<li><strong>Mac</strong> <code class=\"language-text\">brew install pgloader</code></li>\n<li><strong>Ubuntu</strong> <code class=\"language-text\">apt-get install pgloader</code></li>\n<li><strong>Docker</strong>: You can also use a docker image for pgloader at <a href=\"https://hub.docker.com/r/dimitri/pgloader/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hub.docker.com/r/dimitri/pgloader/</a> </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker pull dimitri/pgloader\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --version\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --help</code></pre></div>\n<ul>\n<li><strong>Build From Source</strong> Pgloader is now a Common Lisp program, tested using the SBCL (>= 1.1.14) and Clozure CL implementations with Quicklisp.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apt-get install sbcl unzip libsqlite3-dev make curl gawk freetds-dev libzip-dev\ncd /path/to/pgloader\nmake pgloader\n./build/bin/pgloader --help</code></pre></div>\n<ul>\n<li><strong>Repository</strong>: <a href=\"https://github.com/dimitri/pgloader\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">To learn more information</a></li>\n</ul>\n<p>Please feel free to drop me an email if you need more help.</p>\n<h2 id=\"better-performance-with-clozurecl\"><a href=\"#better-performance-with-clozurecl\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Better Performance with ClozureCL</h2>\n<p>One of the important problem that I faced, was low memory and killing process by pgloader on our EC2 which has 512MB ram. So,\nDimitri in one of the issue on Github Suggest to use CCL instead of SBCL so I also recommend to do it as the performance is significantly\nbetter and no issue in dropping process because lack of memory. </p>\n<p>The preferred way to get Clozure CL is via Subversion. For example, to get Clozure CL 1.11 for Darwin/x86, you'd type (where the $ is the shell prompt):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">svn co http://svn.clozure.com/publicsvn/openmcl/release/1.11/darwinx86/ccl</code></pre></div>\n<p>Please follow all the steps (here)(<a href=\"http://ccl.clozure.com/download.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://ccl.clozure.com/download.html</a>) and after making that done remember to make Pgloader with CCL as follow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">make CL=ccl pgloader</code></pre></div>\n<p>Now, We are all good to begin.</p>\n<h2 id=\"migrating-from-mysql\"><a href=\"#migrating-from-mysql\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Migrating from MySQL</h2>\n<p>Just create a database where to host the MySQL data and definitions and have pgloader do the migration for you in a single command line:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">createdb pgdb</code></pre></div>\n<p>a single simple command to start, is just as easy as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pgloader mysql://user@localhost/mydb postgresql:///pgdb </code></pre></div>\n<p>where you can expand your Postgresql link as such:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgres://username:password@server:port/databasename</code></pre></div>\n<p>but it my not be enough. For instance, if you are connection to a remote database such a database on <strong>Heroku</strong> where\nit consumes SSL as default, you need to add your params to the url to enable ssl, so command would be as below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgres://username:password@server:port/databasename?sslmode=require</code></pre></div>\n<p>So, if you want to load your pg dump to Heroku you can run as simple as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">heroku pg:psql HEROKU_POSTGRESQL_GREEN_URL --app YOUR_APP_NAME_HERE &lt; pgdump</code></pre></div>\n<h2 id=\"common-issues\"><a href=\"#common-issues\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Common issues</h2>\n<p>You may see the following error for first time: <code class=\"language-text\">this is incompatible with sql_mode=only_full_group_by</code>\nbut no worries you can easily bypass that.\nYou can try to disable the only<em>full</em>group_by setting by executing the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql&gt; set global sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></pre></div>\n<p>or </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql&gt; set session sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></pre></div>\n<p>I hope you find this post helpful and feel free to drop an email your feedback which is already appreciated.</p>",
            "id": "dfa733e0-c45d-5ce6-9566-d6babb618589",
            "fields": {
              "slug": "pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql"
            },
            "frontmatter": {
              "date": "2016-12-08",
              "title": "Pgloader makes that easy to migrate From Mysql to Postgresql",
              "category": "DevOps",
              "tags": [
                "databases",
                "mysql",
                "postgresql"
              ],
              "banner": ""
            },
            "timeToRead": 6
          }
        ],
        "tagName": "postgresql"
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx",
      "id": "SitePage /tags/postgresql",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "b2913db0b60c21334662c615140e843f",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js": {
      "jsonName": "blog-which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js-33b",
      "internalComponentName": "ComponentBlogWhichOneShouldIChooseAngular2VueJsReactJsAndEmberJs",
      "path": "/blog/which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Post.tsx",
      "componentChunkName": "component---src-templates-post-tsx",
      "context": {
        "slug": "which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js",
        "prev": {
          "excerpt": "Decision made While we were developing our  affiliate manager software  in my company, we (development team) decided to migrate raw data from \na 3rd party  MySQL (MariaDB) database which company was using to our  Rails  default db engine which was…",
          "html": "<h2 id=\"decision-made\"><a href=\"#decision-made\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Decision made</h2>\n<p>While we were developing our <em>affiliate manager software</em> in my company, we (development team) decided to migrate raw data from\na 3rd party <strong>MySQL</strong>(MariaDB) database which company was using to our <strong>Rails</strong> default db engine which was <strong>PostgresSQL</strong>.\nThus, I was assigned to do this task. </p>\n<p>I went through many available tools and tested as much as possible. I could not make sure they all are capable\nof handling such a massive sql file. I was about to decide witting a migration script with <strong>NodeJS</strong> that\nI finally found <a href=\"http://pgloader.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pgloader</a> by <a href=\"https://twitter.com/tapoueh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dimitri Fontaine</a>. </p>\n<p>First, It looked to me very promising and I said to myself: \"Yes, this is it.\". Before counting, let me say what is Pgloader. </p>\n<blockquote>pgloader is a data loading tool for PostgreSQL, using the COPY command.\nIts main advantage over just using COPY or \\copy, and over using a Foreign Data Wrapper, is its transaction behaviour, where pgloader will keep a separate file of rejected data, but continue trying to copy good data in your database.\nThe default PostgreSQL behaviour is transactional, which means that any erroneous line in the input data (file or remote database) will stop the entire bulk load for the table.\npgloader also implements data reformatting, a typical example of that being the transformation of MySQL datestamps 0000-00-00 and 0000-00-00 00:00:00 to PostgreSQL NULL value (because our calendar never had a year zero).\n</blockquote>\n<p>I started testing that with different circumstances and all test was pretty good. Therefore, I gave it a try and\nrun the final command to migrate that the result was pretty awesome in my Mac and I was excited though:</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Successfully migrated from <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> 5 to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> 9.5, roughly 16GB data, thanks to <a href=\"https://twitter.com/tapoueh\">@tapoueh</a> for a fantastic <a href=\"https://twitter.com/hashtag/pgloader?src=hash\">#pgloader</a> tool <a href=\"https://t.co/8lDziCnJqV\">pic.twitter.com/8lDziCnJqV</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/806763214092414976\">December 8, 2016</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p>Although, everything was pretty good on my local machine while I wanted to do that in our <strong>EC2</strong>, I faced with many difficulties as\nour server was not as perfect as my local machine with a low memory as small as 512MB until I made <a href=\"http://ccl.clozure.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ClozureCL</a> on the Ubuntu as a default\ncompiler for <a href=\"https://www.common-lisp.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lisp</a> which is written's lagrange of Pgloader and performance was incredibly unbelievable. </p>\n <blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/ClozureCL?src=hash\">#ClozureCL</a> instead of <a href=\"https://twitter.com/hashtag/SBCL?src=hash\">#SBCL</a> while migrating <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> with 16GB data on <a href=\"https://twitter.com/hashtag/AWS?src=hash\">#AWS</a> <a href=\"https://twitter.com/hashtag/EC2?src=hash\">#EC2</a> 512MB RAM!! That&#39;s awesome, thanks <a href=\"https://twitter.com/tapoueh\">@tapoueh</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/807632035300769792\">December 10, 2016</a></blockquote>\n <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n \nI encourage you to watch this video : [http://pgloader.io/](Why did pgloader get so much faster?). \n<p>Even though, many different ways of conversions are provided by Pgloader, I pick only migration from Mysql part and write my experience with that.\nHowever, feel free to check Pgloader website's documentation and do more with less!</p>\n<h2 id=\"pgloader-installation\"><a href=\"#pgloader-installation\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pgloader installation</h2>\n<p>Hopefully, Pgloader developed with increasing productivity and performance in mind. So, it is predictable that installing\nthis tools would be as easy as a command. To start with that you can read <a href=\"http://pgloader.io/howto/quickstart.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Quick Start</a> on pgloader.io. </p>\n<p>Binary build are available on distributions where pgloader is packaged, which currently includes only <strong>debian</strong> and <strong>apt.postgresql.org</strong> which covers both <strong>debian</strong> and <strong>ubuntu</strong> Operating Systems.</p>\n<p>Note that pgloader is easy enough to build from sources, see pgloader INSTALL.md file. For RPM based systems, see also the bootstrap-centos7.sh script that prepares your build environment so that building is then just a git clone then make away.</p>\n<p>Building for the <strong>Windows™ Operating System</strong> is easy enough and the platform is fully supported.</p>\n<ul>\n<li><strong>Mac</strong> <code class=\"language-text\">brew install pgloader</code></li>\n<li><strong>Ubuntu</strong> <code class=\"language-text\">apt-get install pgloader</code></li>\n<li><strong>Docker</strong>: You can also use a docker image for pgloader at <a href=\"https://hub.docker.com/r/dimitri/pgloader/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hub.docker.com/r/dimitri/pgloader/</a> </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker pull dimitri/pgloader\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --version\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --help</code></pre></div>\n<ul>\n<li><strong>Build From Source</strong> Pgloader is now a Common Lisp program, tested using the SBCL (>= 1.1.14) and Clozure CL implementations with Quicklisp.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apt-get install sbcl unzip libsqlite3-dev make curl gawk freetds-dev libzip-dev\ncd /path/to/pgloader\nmake pgloader\n./build/bin/pgloader --help</code></pre></div>\n<ul>\n<li><strong>Repository</strong>: <a href=\"https://github.com/dimitri/pgloader\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">To learn more information</a></li>\n</ul>\n<p>Please feel free to drop me an email if you need more help.</p>\n<h2 id=\"better-performance-with-clozurecl\"><a href=\"#better-performance-with-clozurecl\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Better Performance with ClozureCL</h2>\n<p>One of the important problem that I faced, was low memory and killing process by pgloader on our EC2 which has 512MB ram. So,\nDimitri in one of the issue on Github Suggest to use CCL instead of SBCL so I also recommend to do it as the performance is significantly\nbetter and no issue in dropping process because lack of memory. </p>\n<p>The preferred way to get Clozure CL is via Subversion. For example, to get Clozure CL 1.11 for Darwin/x86, you'd type (where the $ is the shell prompt):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">svn co http://svn.clozure.com/publicsvn/openmcl/release/1.11/darwinx86/ccl</code></pre></div>\n<p>Please follow all the steps (here)(<a href=\"http://ccl.clozure.com/download.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://ccl.clozure.com/download.html</a>) and after making that done remember to make Pgloader with CCL as follow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">make CL=ccl pgloader</code></pre></div>\n<p>Now, We are all good to begin.</p>\n<h2 id=\"migrating-from-mysql\"><a href=\"#migrating-from-mysql\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Migrating from MySQL</h2>\n<p>Just create a database where to host the MySQL data and definitions and have pgloader do the migration for you in a single command line:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">createdb pgdb</code></pre></div>\n<p>a single simple command to start, is just as easy as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pgloader mysql://user@localhost/mydb postgresql:///pgdb </code></pre></div>\n<p>where you can expand your Postgresql link as such:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgres://username:password@server:port/databasename</code></pre></div>\n<p>but it my not be enough. For instance, if you are connection to a remote database such a database on <strong>Heroku</strong> where\nit consumes SSL as default, you need to add your params to the url to enable ssl, so command would be as below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgres://username:password@server:port/databasename?sslmode=require</code></pre></div>\n<p>So, if you want to load your pg dump to Heroku you can run as simple as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">heroku pg:psql HEROKU_POSTGRESQL_GREEN_URL --app YOUR_APP_NAME_HERE &lt; pgdump</code></pre></div>\n<h2 id=\"common-issues\"><a href=\"#common-issues\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Common issues</h2>\n<p>You may see the following error for first time: <code class=\"language-text\">this is incompatible with sql_mode=only_full_group_by</code>\nbut no worries you can easily bypass that.\nYou can try to disable the only<em>full</em>group_by setting by executing the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql&gt; set global sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></pre></div>\n<p>or </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql&gt; set session sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></pre></div>\n<p>I hope you find this post helpful and feel free to drop an email your feedback which is already appreciated.</p>",
          "id": "dfa733e0-c45d-5ce6-9566-d6babb618589",
          "fields": {
            "slug": "pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql"
          },
          "frontmatter": {
            "date": "2016-12-08",
            "title": "Pgloader makes that easy to migrate From Mysql to Postgresql",
            "category": "DevOps",
            "tags": [
              "databases",
              "mysql",
              "postgresql"
            ],
            "banner": ""
          },
          "timeToRead": 6
        },
        "next": null
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Post.tsx",
      "id": "SitePage /blog/which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "4267a5ee27f7b4a55b4ef49909504a38",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql": {
      "jsonName": "blog-pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql-063",
      "internalComponentName": "ComponentBlogPgloaderMakesThatEasyToMigrateFromMysqlToPostgresql",
      "path": "/blog/pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Post.tsx",
      "componentChunkName": "component---src-templates-post-tsx",
      "context": {
        "slug": "pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql",
        "prev": {
          "excerpt": "One of the common command on Linux is to compress or decompress files and folders. While it's easy to do, there is no progress bar\nfor usual command such as Tar, Zip, Importing to Database or Exporting logs. It may be interesting that there are lots…",
          "html": "<p>One of the common command on Linux is to compress or decompress files and folders. While it's easy to do, there is no progress bar\nfor usual command such as Tar, Zip, Importing to Database or Exporting logs. It may be interesting that there are lots of tools to use. However, I found\n<a href=\"http://www.ivarch.com/programs/pv.shtml\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pipe Viewer</a> very handy and useful. </p>\n<p><strong>PV</strong> <em>[Pipe Viewer]</em> is a terminal-based tool for monitoring\nthe progress of data through a pipeline. It can be inserted into any normal pipeline between two processes to give a visual indication of\nhow quickly data is passing through, how long it has taken, how near to completion it is, and an estimate of how long it will be until completion.</p>\n<h3 id=\"some-of-the-benefits-of-using-pv-are\"><a href=\"#some-of-the-benefits-of-using-pv-are\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Some of the benefits of using PV are:</h3>\n<ul>\n<li>Total data transferred</li>\n<li>Time elapsed</li>\n<li>Current throughput rate</li>\n<li>Percentage completed</li>\n<li>ETA</li>\n</ul>\n<h3 id=\"to-install-pv-follow-the-guides-below-depends-on-your-os\"><a href=\"#to-install-pv-follow-the-guides-below-depends-on-your-os\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>To Install PV, follow the guides below depends on your OS:</h3>\n<ul>\n<li><strong>CentOS / RHEL:</strong>\tSet up my YUM repository or use RepoForge, then do <code class=\"language-text\">yum install pv</code>.</li>\n<li><strong>Fedora:</strong>\tRun <code class=\"language-text\">yum install pv</code>; the \"extras\" repository may be required.</li>\n<li><strong>Debian / Ubuntu:</strong>\tRun <code class=\"language-text\">apt-get install pv</code> to get the latest packaged version from <code class=\"language-text\">unstable</code> / <code class=\"language-text\">testing</code>.</li>\n<li><strong>Slackware:</strong>\tUse this SlackBuild script.</li>\n<li><strong>Cygwin:</strong>\tAvailable as a package.</li>\n<li><strong>FreeBSD:</strong> Listed on FreshPorts.</li>\n<li><strong>OpenBSD:</strong> Listed under ports.</li>\n<li><strong>Solaris:</strong> Download binary packages from OpenCSW.</li>\n<li><strong>OpenSolaris:</strong>\tIncludes pv version 1.1.4 in the <code class=\"language-text\">/dev</code> repository (as of build 119). Install with <code class=\"language-text\">pkg install SUNWpipe-viewer</code>.</li>\n<li><strong>AIX:</strong> An RPM from <em>Pawel Piatek</em> is in the downloads section.</li>\n<li><strong>MacPorts:</strong>\tRun <code class=\"language-text\">port install pv</code> to get the latest version. </li>\n<li><strong>Mac HomeBrew:</strong>\tRun <code class=\"language-text\">brew update &amp; brew install pv</code> to get the latest version. </li>\n<li><strong>Exherbo:</strong>\tRun <code class=\"language-text\">cave resolve -x app-misc/pv</code> to get the latest version. </li>\n<li><strong>Gentoo:</strong>\tRun <code class=\"language-text\">emerge sys-apps/pv</code> to get the latest version. </li>\n<li><strong>IRIX Nekoware:</strong>\tAvailable in the <em>Nekoware</em> \"beta\" repository.</li>\n</ul>\n<p>As an example, I would like to start with using PV while importing a dump of <strong>MySQL</strong> database. </p>\n<p>You are able to import your <code class=\"language-text\">.sql</code> file into the database as easy as the command below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql --user=username --password=password database_name &lt; dump.sql</code></pre></div>\n<p>which in short is equivalent to </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql -u username -p password database_name &lt; dump.sql</code></pre></div>\n<p>Although it seems quite OK, It is not as helpful as it looks when you have a big file.\nWe might have considered better solution as we need to know the status of progress for our\nrecord. Therefore, here is the usage of PV while importing our dump. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv your_dump.sql | mysql -u root database_name</code></pre></div>\n<p>In this case, you are able to see the progress bar just as below:</p>\n<p><img src=\"/assets/images/dec2016/pv-sample.jpg\" alt=\"PV Status Bar\" title=\"Pipe Viewer example\"></p>\n<h3 id=\"more-examples-to-monitor-of-pv-data-progress-sent-via-a-pipe\"><a href=\"#more-examples-to-monitor-of-pv-data-progress-sent-via-a-pipe\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>More examples to Monitor of PV data progress, sent via a Pipe:</h3>\n<p>1- To copy a file called your_access.log to /tmp/something-access.log and show progress:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv your_access.log &gt; /tmp/something-access.log</code></pre></div>\n<p>2- To compress a lot of files within a folder and seeing progress bar</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">tar cf - /folder-with-big-files -P | pv -s $(du -sb /folder-with-big-files | awk &#39;{print $1}&#39;) | gzip &gt; big-files.tar.gz</code></pre></div>\n<p>3- To watch how quickly a file is transferred using nc(1):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv file | nc -w 1 somewhere.com 3000</code></pre></div>\n<p>4- To transfer a file from another process and passing the expected size to pv:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cat file | pv -s 12345 | nc -w 1 majidhajian.com 3000</code></pre></div>\n<p>5- To decompress a huge tar.gz file</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv file.tgz | tar xzf - -C target_directory</code></pre></div>\n<p>All in all, Result of all of them like I added a picture to show, is similar as follow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">12.16MB 0:00:20 [6.06MB/s] [==================&gt;               ] 55%  ETA 0:00:37</code></pre></div>\n<p>I encourage you to read more about this amazing tool and be familiar with that. I have plan to\npublish another article about <code class=\"language-text\">screen</code> which is another great tool and combination of both, will make your\nlife as a developer more relaxed. </p>",
          "id": "8d44fc67-497f-5a98-9566-a316ab6286db",
          "fields": {
            "slug": "progress-status-using-pipe-viewer-while-importing-my-sql-databases"
          },
          "frontmatter": {
            "date": "2016-12-07",
            "title": "Progress status using PipeViewer while importing MySQL databases",
            "category": "DevOps",
            "tags": [
              "linux",
              "mysql"
            ],
            "banner": ""
          },
          "timeToRead": 3
        },
        "next": {
          "excerpt": "It is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using \nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:   Live Demo…",
          "html": "<p>It is a very good sunday and exciting to me. The reason is that yesterday I spent couple of hours and I built my first Vue.js simple app using\nVux and uiElement in order to compare Vue with React, Angular2 and Ember.js. It's live here:  <a href=\"https://www.majidhajian.com/vue2-shop/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Live Demo - Vue.js Shop</a></p>\n<p>In the battle of front-end frameworks, these days, I feel I am confused that how to answer my question about \"which frameworks should I choose?\".\nAs a passionate Javascript developer, it is super tough to choose between the following frameworks or libraries to start a new project. All of them come with pros and cons as well as perfect features that makes you impressed and as confused as you are not able to stick on one. </p>\n<p>I tend to wrap up my research and experiences as a single table which can be reviewed below:</p>\n<div style=\"overflow-x:auto;\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Ember.js</th>\n<th>Angular 2</th>\n<th>Vue.js 2</th>\n<th>React.js</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Github Star</td>\n<td>17,620</td>\n<td>55,021 + 21,572</td>\n<td>46,272</td>\n<td>61,653</td>\n</tr>\n<tr>\n<td>Contributors</td>\n<td>651</td>\n<td>1571 + 408</td>\n<td>84</td>\n<td>954</td>\n</tr>\n<tr>\n<td>Stackoverflow</td>\n<td>20,822</td>\n<td>40,374</td>\n<td>4,789</td>\n<td>35,846</td>\n</tr>\n<tr>\n<td>Reactive Programming</td>\n<td>Not in the core - Addon : RxEmber - not up to date</td>\n<td>RxJs 5, In the core</td>\n<td>Partially in the core, Fully with addon</td>\n<td>Not in the core, very good plugin</td>\n</tr>\n<tr>\n<td>State Management</td>\n<td>Ember Data - core  Ember-Redux addon</td>\n<td>Observable Stream in core, Two perfect plugin for Redux One is a wrapper Redux =-angular and one is based on Redux but it has its own API, Ng-redux/store</td>\n<td>Vuex which considers as Core addon</td>\n<td>React-Redux supports with community</td>\n</tr>\n<tr>\n<td>Functional Programing</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Isomorphic</td>\n<td>Fast-boot Still beta</td>\n<td>Universal, part of the core</td>\n<td>different plugin, Nuxt, vue-server-renderer</td>\n<td>different approach, mostly good</td>\n</tr>\n<tr>\n<td>Native App Or Hybrid App</td>\n<td>different addons such as ember-cli-cordova</td>\n<td>NativeScript port</td>\n<td>weex, still under development from Alibaba</td>\n<td>React Native</td>\n</tr>\n<tr>\n<td>Browser Support</td>\n<td>IE9+</td>\n<td>IE10+ , Polyfill for IE9</td>\n<td>IE9+</td>\n<td>IE9+</td>\n</tr>\n<tr>\n<td>Animation Support</td>\n<td>with addon</td>\n<td>In core, @angular/animation</td>\n<td>in core Transition</td>\n<td>Addon</td>\n</tr>\n<tr>\n<td>Bundler</td>\n<td>Broccoli, however can be port to webpack and rollupjs</td>\n<td>Webpack, completely ready to be use with System.js or Rollup.js</td>\n<td>webpack, can be port to different bundler</td>\n<td>webpack can be port to different bundler</td>\n</tr>\n<tr>\n<td>App Structure</td>\n<td>Strictly Opinionated</td>\n<td>Partially Opinionated</td>\n<td>unopinionated</td>\n<td>unopinionated</td>\n</tr>\n<tr>\n<td>Sponsor</td>\n<td>Tilde INC</td>\n<td>Google</td>\n<td>Evan You! but to be adapted by Alibaba</td>\n<td>Facebook</td>\n</tr>\n<tr>\n<td>Typescript Support</td>\n<td>Through Addon with Pain, However, ES6 is more than enough for Ember</td>\n<td>Core</td>\n<td>can be port to typescript however can be painful while using addon due to lack of proper typing</td>\n<td>possible, however JSX is powerful enough</td>\n</tr>\n<tr>\n<td>Lazy Loading</td>\n<td>with Addon, natively needs more develop, however, result is aswesome</td>\n<td>in Core with ng router and webpack</td>\n<td>in core with vue-router and webpack</td>\n<td>addon with react-router and webpack</td>\n</tr>\n<tr>\n<td>Framework Architecture</td>\n<td>MVVM</td>\n<td>MVVM + Modular system through Component Architecture</td>\n<td>VM and component architecture</td>\n<td>VM and component architecture</td>\n</tr>\n<tr>\n<td>Tree Shaking</td>\n<td>Addon for broccoli</td>\n<td>webpack2 supports</td>\n<td>webpack2 supports</td>\n<td>webpack2 supports</td>\n</tr>\n<tr>\n<td>Deployment</td>\n<td>wide range of platforms with Ember-cli-deploy as easy as one command !!</td>\n<td>through addons with great support and less configuration,However, good pipeline for deployment</td>\n<td>Not really have  good pipeline and can be painful to design, however, many good examples are found</td>\n<td>wide rang of possibilities with Zero configuration</td>\n</tr>\n<tr>\n<td>Unit Test</td>\n<td>Qunit but not limited to</td>\n<td>Jasmine but not limited to</td>\n<td>Mocha but not limited to</td>\n<td>Jest but not limited to</td>\n</tr>\n<tr>\n<td>Test Runner</td>\n<td>Karma</td>\n<td>Karma</td>\n<td>Karma</td>\n<td>Karma</td>\n</tr>\n<tr>\n<td>End-to-End (integration) Test</td>\n<td>ember-testing,and can be integrated with different approach however, it may be painful</td>\n<td>protractor and can be integrated with different approach however, it may be painful</td>\n<td>Nightwatch or Testcafe</td>\n<td>Selenium WebDriver and many more</td>\n</tr>\n<tr>\n<td>Learning Curve</td>\n<td>Advanced</td>\n<td>Advanced</td>\n<td>Simple</td>\n<td>Simple</td>\n</tr>\n<tr>\n<td>Enterprise Adaptability</td>\n<td>YES, specially with Ember Engine</td>\n<td>Recommend for this section</td>\n<td>apparently it is however, not much real example</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Code Complexity</td>\n<td>Mature SDK like Rails</td>\n<td>Well-rich   framework like Java based frameworks</td>\n<td>Library</td>\n<td>Library</td>\n</tr>\n<tr>\n<td>Chrome Debugger</td>\n<td>YES</td>\n<td>YES</td>\n<td>YES</td>\n<td>YES</td>\n</tr>\n<tr>\n<td>Progressive web app</td>\n<td>Addon</td>\n<td>Addon and webpack plugin</td>\n<td>Addon,and webpack plugin</td>\n<td>Addon,and webpack plugin</td>\n</tr>\n<tr>\n<td>Job Opportunity</td>\n<td>not that much</td>\n<td>A lot</td>\n<td>rarely</td>\n<td>A lot</td>\n</tr>\n<tr>\n<td>Directive</td>\n<td>yes but different approach</td>\n<td>yes</td>\n<td>yes</td>\n<td>yes</td>\n</tr>\n<tr>\n<td>Data binding</td>\n<td>Two way, very efficient</td>\n<td>Two way, super efficient</td>\n<td>Two way, super efficient</td>\n<td>Two way, super efficient</td>\n</tr>\n<tr>\n<td>Filter, Pipe, mixin, helper</td>\n<td>All supported</td>\n<td>All supported</td>\n<td>All supported</td>\n<td>All supported</td>\n</tr>\n<tr>\n<td>Event Binding</td>\n<td>yes such as on-submit, also using actions</td>\n<td>yes such as ng-click and also using Emitter</td>\n<td>Yes such as v-on and also using Methods</td>\n<td>yes such as onclick and also using methods</td>\n</tr>\n</tbody>\n</table>\n</div>\n## Performance\n \n All have been developed with performance in mind,however, they are fairly similar with a minor differences which in my \n opinion, it ready does not matter in the end. The chart below shows that the final results is pretty much similar with little milliseconds discrepancies.\n \n![Quick Performance comparison](/assets/images/march2017/performance.jpg \"quick performance comparison\"){:class=\"img-responsive\"}\n<p>Benchmarked by: <a href=\"https://github.com/krausest/js-framework-benchmark\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">js-framework-benchmark</a>\nCredited to: <a href=\"http://www.stefankrause.net/wp/?p=392\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">stefan krause</a> </p>\n<h2 id=\"which-one-to-choose\"><a href=\"#which-one-to-choose\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Which one to choose?</h2>\n<p>As you see, There are many similarities between them, although they tend to follow their mindset. All of them are awesome\nand all of their works is highly appreciated. However, at the end of the day, we need to choose one in our team, therefore,\nhere is my opinion. </p>\n<h3 id=\"emberjs\"><a href=\"#emberjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ember.js</h3>\n<p>An awesome framework and as its builders say, it is going to be a SDK for web. Although learning ember doest not seem easy, it is\na fact that if you get used to it, you are not able to abandon it! I personally believe (as a one year Ember developer), it's by far\none of the best in Front-end technology and should be used for Semi-enterprise to enterprise application where all developers\nare mostly senior. Moreover, finding senior and ember developer should not be that much difficult for the company in order to expand the team in the future. </p>\n<h3 id=\"angular-2\"><a href=\"#angular-2\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Angular 2</h3>\n<p>Well, it has been designed to mitigate performance, productivity and unique codebase between different platforms. Hence, indeed, they did a great job can could achieve their goals.\nAngular's roadmap is very distinctive. One of the main strengths of Angular team is to be backed by Google. However, it's should be considered only for enterprise application.</p>\n<h3 id=\"vuejs\"><a href=\"#vuejs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vue.js</h3>\n<p>Nothing can be easier than Vue.js. Super slim and easy to learn. Vue's goal tends to stick on pure javascript object and functionality rather than make that complex.\nHence, Vue's performance has slightly better than other rivals and make that easy to learn and very handy to have a quick project. However, due to less community members and obscured\nroadmap as well as lack of large well-tested application in production, I am still doubtful to say it can be use in enterprise while it is the best to start\nfor small and medium applications. </p>\n<h3 id=\"reactjs\"><a href=\"#reactjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.js</h3>\n<p>Well, nothing to say. It's perfect at every single aspect. Although I personally do not like to write JSX code, I would say it is the\nmost powerful approach that I have seen so far. React is a tiny library to manipulate the DOM which fits small project need, whereas it can be powerful enough when it combines with other addons to build a enterprise app. In one word, </p>\n<h2 id=\"so-what-do-i-prefer-finally\"><a href=\"#so-what-do-i-prefer-finally\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>So what do I prefer finally?</h2>\n<p>In my perspective, choosing of the above frameworks is completely depends on your projects, the future of that and more importantly\nthe company and the team that you are working with. For some, it's is important to see huge backers and obvious roadmap then you should consider React and Angular2 while others think simplicity is the most important one then\nyou definitely should consider Vue.js. </p>\n<p>Like I said, I am a passionate Javascript developer and I love all of them. However, last but not least, my personal choices would be: 1- Angular, 2- Ember, 3- React and 4- Vue. </p>\n<p>My advice is \"do not spend to much time to choose between one of the frameworks named above, in fact, find the one that is the most desirable and adaptable among team's developers or you feel comfortable the most.\"</p>",
          "id": "97733994-8c9e-5380-b6b0-3eef063adda1",
          "fields": {
            "slug": "which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js"
          },
          "frontmatter": {
            "date": "2017-03-12",
            "title": "Which one should I choose? Angular 2, Vue.js, React.js and Ember.js?",
            "category": "Frontend",
            "tags": [
              "Angular",
              "React",
              "Vue.js",
              "Ember.js"
            ],
            "banner": ""
          },
          "timeToRead": 7
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Post.tsx",
      "id": "SitePage /blog/pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "f650a4812f6d6b8c1e501530f928aa9a",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /blog/progress-status-using-pipe-viewer-while-importing-my-sql-databases": {
      "jsonName": "blog-progress-status-using-pipe-viewer-while-importing-my-sql-databases-9d8",
      "internalComponentName": "ComponentBlogProgressStatusUsingPipeViewerWhileImportingMySqlDatabases",
      "path": "/blog/progress-status-using-pipe-viewer-while-importing-my-sql-databases",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Post.tsx",
      "componentChunkName": "component---src-templates-post-tsx",
      "context": {
        "slug": "progress-status-using-pipe-viewer-while-importing-my-sql-databases",
        "prev": null,
        "next": {
          "excerpt": "Decision made While we were developing our  affiliate manager software  in my company, we (development team) decided to migrate raw data from \na 3rd party  MySQL (MariaDB) database which company was using to our  Rails  default db engine which was…",
          "html": "<h2 id=\"decision-made\"><a href=\"#decision-made\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Decision made</h2>\n<p>While we were developing our <em>affiliate manager software</em> in my company, we (development team) decided to migrate raw data from\na 3rd party <strong>MySQL</strong>(MariaDB) database which company was using to our <strong>Rails</strong> default db engine which was <strong>PostgresSQL</strong>.\nThus, I was assigned to do this task. </p>\n<p>I went through many available tools and tested as much as possible. I could not make sure they all are capable\nof handling such a massive sql file. I was about to decide witting a migration script with <strong>NodeJS</strong> that\nI finally found <a href=\"http://pgloader.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pgloader</a> by <a href=\"https://twitter.com/tapoueh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dimitri Fontaine</a>. </p>\n<p>First, It looked to me very promising and I said to myself: \"Yes, this is it.\". Before counting, let me say what is Pgloader. </p>\n<blockquote>pgloader is a data loading tool for PostgreSQL, using the COPY command.\nIts main advantage over just using COPY or \\copy, and over using a Foreign Data Wrapper, is its transaction behaviour, where pgloader will keep a separate file of rejected data, but continue trying to copy good data in your database.\nThe default PostgreSQL behaviour is transactional, which means that any erroneous line in the input data (file or remote database) will stop the entire bulk load for the table.\npgloader also implements data reformatting, a typical example of that being the transformation of MySQL datestamps 0000-00-00 and 0000-00-00 00:00:00 to PostgreSQL NULL value (because our calendar never had a year zero).\n</blockquote>\n<p>I started testing that with different circumstances and all test was pretty good. Therefore, I gave it a try and\nrun the final command to migrate that the result was pretty awesome in my Mac and I was excited though:</p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Successfully migrated from <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> 5 to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> 9.5, roughly 16GB data, thanks to <a href=\"https://twitter.com/tapoueh\">@tapoueh</a> for a fantastic <a href=\"https://twitter.com/hashtag/pgloader?src=hash\">#pgloader</a> tool <a href=\"https://t.co/8lDziCnJqV\">pic.twitter.com/8lDziCnJqV</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/806763214092414976\">December 8, 2016</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p>Although, everything was pretty good on my local machine while I wanted to do that in our <strong>EC2</strong>, I faced with many difficulties as\nour server was not as perfect as my local machine with a low memory as small as 512MB until I made <a href=\"http://ccl.clozure.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ClozureCL</a> on the Ubuntu as a default\ncompiler for <a href=\"https://www.common-lisp.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Lisp</a> which is written's lagrange of Pgloader and performance was incredibly unbelievable. </p>\n <blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/ClozureCL?src=hash\">#ClozureCL</a> instead of <a href=\"https://twitter.com/hashtag/SBCL?src=hash\">#SBCL</a> while migrating <a href=\"https://twitter.com/hashtag/MySQL?src=hash\">#MySQL</a> to <a href=\"https://twitter.com/hashtag/PostgreSQL?src=hash\">#PostgreSQL</a> with 16GB data on <a href=\"https://twitter.com/hashtag/AWS?src=hash\">#AWS</a> <a href=\"https://twitter.com/hashtag/EC2?src=hash\">#EC2</a> 512MB RAM!! That&#39;s awesome, thanks <a href=\"https://twitter.com/tapoueh\">@tapoueh</a></p>&mdash; Majid Hajian (@mhadaily) <a href=\"https://twitter.com/mhadaily/status/807632035300769792\">December 10, 2016</a></blockquote>\n <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n \nI encourage you to watch this video : [http://pgloader.io/](Why did pgloader get so much faster?). \n<p>Even though, many different ways of conversions are provided by Pgloader, I pick only migration from Mysql part and write my experience with that.\nHowever, feel free to check Pgloader website's documentation and do more with less!</p>\n<h2 id=\"pgloader-installation\"><a href=\"#pgloader-installation\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pgloader installation</h2>\n<p>Hopefully, Pgloader developed with increasing productivity and performance in mind. So, it is predictable that installing\nthis tools would be as easy as a command. To start with that you can read <a href=\"http://pgloader.io/howto/quickstart.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Quick Start</a> on pgloader.io. </p>\n<p>Binary build are available on distributions where pgloader is packaged, which currently includes only <strong>debian</strong> and <strong>apt.postgresql.org</strong> which covers both <strong>debian</strong> and <strong>ubuntu</strong> Operating Systems.</p>\n<p>Note that pgloader is easy enough to build from sources, see pgloader INSTALL.md file. For RPM based systems, see also the bootstrap-centos7.sh script that prepares your build environment so that building is then just a git clone then make away.</p>\n<p>Building for the <strong>Windows™ Operating System</strong> is easy enough and the platform is fully supported.</p>\n<ul>\n<li><strong>Mac</strong> <code class=\"language-text\">brew install pgloader</code></li>\n<li><strong>Ubuntu</strong> <code class=\"language-text\">apt-get install pgloader</code></li>\n<li><strong>Docker</strong>: You can also use a docker image for pgloader at <a href=\"https://hub.docker.com/r/dimitri/pgloader/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hub.docker.com/r/dimitri/pgloader/</a> </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ docker pull dimitri/pgloader\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --version\n$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --help</code></pre></div>\n<ul>\n<li><strong>Build From Source</strong> Pgloader is now a Common Lisp program, tested using the SBCL (>= 1.1.14) and Clozure CL implementations with Quicklisp.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apt-get install sbcl unzip libsqlite3-dev make curl gawk freetds-dev libzip-dev\ncd /path/to/pgloader\nmake pgloader\n./build/bin/pgloader --help</code></pre></div>\n<ul>\n<li><strong>Repository</strong>: <a href=\"https://github.com/dimitri/pgloader\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">To learn more information</a></li>\n</ul>\n<p>Please feel free to drop me an email if you need more help.</p>\n<h2 id=\"better-performance-with-clozurecl\"><a href=\"#better-performance-with-clozurecl\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Better Performance with ClozureCL</h2>\n<p>One of the important problem that I faced, was low memory and killing process by pgloader on our EC2 which has 512MB ram. So,\nDimitri in one of the issue on Github Suggest to use CCL instead of SBCL so I also recommend to do it as the performance is significantly\nbetter and no issue in dropping process because lack of memory. </p>\n<p>The preferred way to get Clozure CL is via Subversion. For example, to get Clozure CL 1.11 for Darwin/x86, you'd type (where the $ is the shell prompt):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">svn co http://svn.clozure.com/publicsvn/openmcl/release/1.11/darwinx86/ccl</code></pre></div>\n<p>Please follow all the steps (here)(<a href=\"http://ccl.clozure.com/download.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://ccl.clozure.com/download.html</a>) and after making that done remember to make Pgloader with CCL as follow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">make CL=ccl pgloader</code></pre></div>\n<p>Now, We are all good to begin.</p>\n<h2 id=\"migrating-from-mysql\"><a href=\"#migrating-from-mysql\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Migrating from MySQL</h2>\n<p>Just create a database where to host the MySQL data and definitions and have pgloader do the migration for you in a single command line:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">createdb pgdb</code></pre></div>\n<p>a single simple command to start, is just as easy as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pgloader mysql://user@localhost/mydb postgresql:///pgdb </code></pre></div>\n<p>where you can expand your Postgresql link as such:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgres://username:password@server:port/databasename</code></pre></div>\n<p>but it my not be enough. For instance, if you are connection to a remote database such a database on <strong>Heroku</strong> where\nit consumes SSL as default, you need to add your params to the url to enable ssl, so command would be as below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">postgres://username:password@server:port/databasename?sslmode=require</code></pre></div>\n<p>So, if you want to load your pg dump to Heroku you can run as simple as:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">heroku pg:psql HEROKU_POSTGRESQL_GREEN_URL --app YOUR_APP_NAME_HERE &lt; pgdump</code></pre></div>\n<h2 id=\"common-issues\"><a href=\"#common-issues\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Common issues</h2>\n<p>You may see the following error for first time: <code class=\"language-text\">this is incompatible with sql_mode=only_full_group_by</code>\nbut no worries you can easily bypass that.\nYou can try to disable the only<em>full</em>group_by setting by executing the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql&gt; set global sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></pre></div>\n<p>or </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql&gt; set session sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></pre></div>\n<p>I hope you find this post helpful and feel free to drop an email your feedback which is already appreciated.</p>",
          "id": "dfa733e0-c45d-5ce6-9566-d6babb618589",
          "fields": {
            "slug": "pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql"
          },
          "frontmatter": {
            "date": "2016-12-08",
            "title": "Pgloader makes that easy to migrate From Mysql to Postgresql",
            "category": "DevOps",
            "tags": [
              "databases",
              "mysql",
              "postgresql"
            ],
            "banner": ""
          },
          "timeToRead": 6
        }
      },
      "pluginCreator___NODE": "Plugin default-site-plugin",
      "pluginCreatorId": "Plugin default-site-plugin",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Post.tsx",
      "id": "SitePage /blog/progress-status-using-pipe-viewer-while-importing-my-sql-databases",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "db17aaf7a6f60f29b6eebcf7abfeea19",
        "description": "Your site's \"gatsby-node.js\"",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /404/": {
      "jsonName": "404-22d",
      "internalComponentName": "Component404",
      "path": "/404/",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/404.tsx",
      "componentChunkName": "component---src-pages-404-tsx",
      "context": {},
      "pluginCreator___NODE": "Plugin gatsby-plugin-page-creator",
      "pluginCreatorId": "Plugin gatsby-plugin-page-creator",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/404.tsx",
      "id": "SitePage /404/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "aa9f5e9fd0f3ea5f4a3c5a5db69350d2",
        "description": "Plugin gatsby-plugin-page-creator",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /contact/": {
      "jsonName": "contact-26a",
      "internalComponentName": "ComponentContact",
      "path": "/contact/",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/contact.tsx",
      "componentChunkName": "component---src-pages-contact-tsx",
      "context": {},
      "pluginCreator___NODE": "Plugin gatsby-plugin-page-creator",
      "pluginCreatorId": "Plugin gatsby-plugin-page-creator",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/contact.tsx",
      "id": "SitePage /contact/",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "8a79e8b13d290df1e2f43333fae1d0c8",
        "description": "Plugin gatsby-plugin-page-creator",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /": {
      "jsonName": "index",
      "internalComponentName": "ComponentIndex",
      "path": "/",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/index.tsx",
      "componentChunkName": "component---src-pages-index-tsx",
      "context": {},
      "pluginCreator___NODE": "Plugin gatsby-plugin-page-creator",
      "pluginCreatorId": "Plugin gatsby-plugin-page-creator",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/index.tsx",
      "id": "SitePage /",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "fa294be8d16058001ca28b8cec6dfd6b",
        "description": "Plugin gatsby-plugin-page-creator",
        "owner": "internal-data-bridge"
      }
    },
    "SitePage /404.html": {
      "jsonName": "404-html-516",
      "internalComponentName": "Component404Html",
      "path": "/404.html",
      "component": "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/404.tsx",
      "componentChunkName": "component---src-pages-404-tsx",
      "context": {},
      "pluginCreator___NODE": "Plugin prod-404",
      "pluginCreatorId": "Plugin prod-404",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/404.tsx",
      "id": "SitePage /404.html",
      "parent": "SOURCE",
      "children": [],
      "internal": {
        "type": "SitePage",
        "contentDigest": "aa85054a55b88963c642ee05ca79a5fd",
        "description": "Plugin prod-404",
        "owner": "internal-data-bridge"
      }
    }
  },
  "status": {
    "plugins": {},
    "PLUGINS_HASH": "1b207da0044762b02d8db4acf96b3c61"
  },
  "componentDataDependencies": {
    "nodes": {
      "Site": [
        "sq--src-components-layout-tsx"
      ],
      "97733994-8c9e-5380-b6b0-3eef063adda1": [
        "/blog/which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js"
      ],
      "dfa733e0-c45d-5ce6-9566-d6babb618589": [
        "/blog/pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql"
      ],
      "8d44fc67-497f-5a98-9566-a316ab6286db": [
        "/blog/progress-status-using-pipe-viewer-while-importing-my-sql-databases"
      ]
    },
    "connections": {
      "MarkdownRemark": [
        "/",
        "/blog"
      ]
    }
  },
  "jsonDataPaths": {
    "sq--src-components-layout-tsx": 1536950682,
    "index": "442/path---index-6a9-njL18oUVyz8ybKq7mL9j8B0DvG4",
    "blog-which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js-33b": "870/path---blog-which-one-should-i-choose-angular-2-vue-js-react-js-and-ember-js-33-b-bfa-eFoWKx0sgX49N9e818pqrJhg",
    "blog-c06": "566/path---blog-c-06-a65-iuzEcIaX12M0l0EdNWuT0kxC6aI",
    "categories-b0b": "49/path---categories-b-0-b-a23-7823YZphILm6aKB4LdRqFlqr0k",
    "categories-dev-ops-42f": "114/path---categories-dev-ops-42-f-169-cU5QZX4XEArX56ru5s9prO1MddM",
    "blog-pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql-063": "648/path---blog-pgloader-makes-that-easy-to-migrate-from-mysql-to-postgresql-063-313-wtQV5L461AaYaRoGNGeJtyBCQ8",
    "blog-progress-status-using-pipe-viewer-while-importing-my-sql-databases-9d8": "308/path---blog-progress-status-using-pipe-viewer-while-importing-my-sql-databases-9-d-8-a66-4yvpf9eClL33nN5iP3G9PJCdcSc",
    "categories-frontend-383": "197/path---categories-frontend-383-451-u9moLXZPCmMF8sHoLNmtnYEIYM",
    "tags-d57": "130/path---tags-d-57-537-lwlMYaWTeshWWqpoIh8qDiqEHzo",
    "tags-angular-093": "317/path---tags-angular-093-cc4-vps4NNNQowD0Z5OkfAQEEtbmzI",
    "tags-ember-js-7d8": "234/path---tags-ember-js-7-d-8-f3a-mKP5VwlSzbsxxOqnvpQM7aqNBaY",
    "tags-react-df8": "677/path---tags-react-df-8-562-vIonCNVKNjAyEdae64hNc2zdqFY",
    "tags-vue-js-436": "780/path---tags-vue-js-436-454-sysm3ZHyXWTogXkw9TqwasCNM",
    "tags-databases-0ec": "325/path---tags-databases-0-ec-3c6-Apg12KXog1gFVdI95llav2N14iI",
    "tags-linux-15e": "407/path---tags-linux-15-e-9db-8E03KjmlKhaqyeIA95m7bsuCJVU",
    "tags-mysql-331": "761/path---tags-mysql-331-140-DnA0PMD9TXJW6Nn3dItpEPmjcrc",
    "tags-postgresql-864": "378/path---tags-postgresql-864-4e6-nJdPHhJqxxWzAsCJ5XJvn7bEbQ",
    "dev-404-page-5f9": "920/path---dev-404-page-5-f-9-fab-NZuapzHg3X9TaN1iIixfv1W23E",
    "contact-26a": "686/path---contact-26-a-cd9-NZuapzHg3X9TaN1iIixfv1W23E",
    "404-22d": "44/path---404-22-d-bce-NZuapzHg3X9TaN1iIixfv1W23E",
    "404-html-516": "164/path---404-html-516-62a-NZuapzHg3X9TaN1iIixfv1W23E"
  },
  "components": {
    "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Blog.tsx": {
      "query": "query usersMajidProjectsPersonalMhadailyGithubIoSrcTemplatesBlogTsx1723841426(\n  $skip: Int!\n  $limit: Int!\n) {\n  allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}, limit: $limit, skip: $skip) {\n    totalCount\n    edges {\n      node {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date(formatString: \"DD.MM.YYYY\")\n          category\n        }\n        excerpt(pruneLength: 200)\n        timeToRead\n      }\n    }\n  }\n}\n",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Blog.tsx"
    },
    "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/AllCategory.tsx": {
      "query": "",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/AllCategory.tsx"
    },
    "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Category.tsx": {
      "query": "",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Category.tsx"
    },
    "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/AllTag.tsx": {
      "query": "",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/AllTag.tsx"
    },
    "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx": {
      "query": "",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Tag.tsx"
    },
    "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Post.tsx": {
      "query": "query usersMajidProjectsPersonalMhadailyGithubIoSrcTemplatesPostTsx429989208(\n  $slug: String!\n) {\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    html\n    fields {\n      slug\n    }\n    frontmatter {\n      title\n      date(formatString: \"DD.MM.YYYY\")\n      category\n      tags\n      banner\n    }\n    timeToRead\n  }\n}\n",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/templates/Post.tsx"
    },
    "/Users/majid/Projects/Personal/mhadaily.github.io/.cache/dev-404-page.js": {
      "query": "",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/.cache/dev-404-page.js"
    },
    "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/404.tsx": {
      "query": "",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/404.tsx"
    },
    "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/contact.tsx": {
      "query": "",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/contact.tsx"
    },
    "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/index.tsx": {
      "query": "query usersMajidProjectsPersonalMhadailyGithubIoSrcPagesIndexTsx2223859495 {\n  allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}, limit: 1) {\n    totalCount\n    edges {\n      node {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date(formatString: \"DD.MM.YYYY\")\n          category\n        }\n        timeToRead\n      }\n    }\n  }\n}\n",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/pages/index.tsx"
    }
  },
  "staticQueryComponents": {
    "sq--src-components-layout-tsx": {
      "name": "LayoutQuery",
      "componentPath": "/Users/majid/Projects/Personal/mhadaily.github.io/src/components/Layout.tsx",
      "id": "sq--src-components-layout-tsx",
      "jsonName": "sq--src-components-layout-tsx",
      "query": "query LayoutQuery {\n  site {\n    buildTime(formatString: \"DD.MM.YYYY\")\n  }\n}\n",
      "hash": 1536950682
    }
  }
}