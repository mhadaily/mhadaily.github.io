{"pageContext":{"posts":[{"excerpt":"One of the common command on Linux is to compress or decompress files and folders. While it's easy to do, there is no progress bar\nfor usual command such as Tar, Zip, Importing to Database or Exporting logs. It may be interesting that there are lotsâ€¦","html":"<p>One of the common command on Linux is to compress or decompress files and folders. While it's easy to do, there is no progress bar\nfor usual command such as Tar, Zip, Importing to Database or Exporting logs. It may be interesting that there are lots of tools to use. However, I found\n<a href=\"http://www.ivarch.com/programs/pv.shtml\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pipe Viewer</a> very handy and useful. </p>\n<p><strong>PV</strong> <em>[Pipe Viewer]</em> is a terminal-based tool for monitoring\nthe progress of data through a pipeline. It can be inserted into any normal pipeline between two processes to give a visual indication of\nhow quickly data is passing through, how long it has taken, how near to completion it is, and an estimate of how long it will be until completion.</p>\n<h3 id=\"some-of-the-benefits-of-using-pv-are\"><a href=\"#some-of-the-benefits-of-using-pv-are\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Some of the benefits of using PV are:</h3>\n<ul>\n<li>Total data transferred</li>\n<li>Time elapsed</li>\n<li>Current throughput rate</li>\n<li>Percentage completed</li>\n<li>ETA</li>\n</ul>\n<h3 id=\"to-install-pv-follow-the-guides-below-depends-on-your-os\"><a href=\"#to-install-pv-follow-the-guides-below-depends-on-your-os\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>To Install PV, follow the guides below depends on your OS:</h3>\n<ul>\n<li><strong>CentOS / RHEL:</strong>\tSet up my YUM repository or use RepoForge, then do <code class=\"language-text\">yum install pv</code>.</li>\n<li><strong>Fedora:</strong>\tRun <code class=\"language-text\">yum install pv</code>; the \"extras\" repository may be required.</li>\n<li><strong>Debian / Ubuntu:</strong>\tRun <code class=\"language-text\">apt-get install pv</code> to get the latest packaged version from <code class=\"language-text\">unstable</code> / <code class=\"language-text\">testing</code>.</li>\n<li><strong>Slackware:</strong>\tUse this SlackBuild script.</li>\n<li><strong>Cygwin:</strong>\tAvailable as a package.</li>\n<li><strong>FreeBSD:</strong> Listed on FreshPorts.</li>\n<li><strong>OpenBSD:</strong> Listed under ports.</li>\n<li><strong>Solaris:</strong> Download binary packages from OpenCSW.</li>\n<li><strong>OpenSolaris:</strong>\tIncludes pv version 1.1.4 in the <code class=\"language-text\">/dev</code> repository (as of build 119). Install with <code class=\"language-text\">pkg install SUNWpipe-viewer</code>.</li>\n<li><strong>AIX:</strong> An RPM from <em>Pawel Piatek</em> is in the downloads section.</li>\n<li><strong>MacPorts:</strong>\tRun <code class=\"language-text\">port install pv</code> to get the latest version. </li>\n<li><strong>Mac HomeBrew:</strong>\tRun <code class=\"language-text\">brew update &amp; brew install pv</code> to get the latest version. </li>\n<li><strong>Exherbo:</strong>\tRun <code class=\"language-text\">cave resolve -x app-misc/pv</code> to get the latest version. </li>\n<li><strong>Gentoo:</strong>\tRun <code class=\"language-text\">emerge sys-apps/pv</code> to get the latest version. </li>\n<li><strong>IRIX Nekoware:</strong>\tAvailable in the <em>Nekoware</em> \"beta\" repository.</li>\n</ul>\n<p>As an example, I would like to start with using PV while importing a dump of <strong>MySQL</strong> database. </p>\n<p>You are able to import your <code class=\"language-text\">.sql</code> file into the database as easy as the command below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql --user=username --password=password database_name &lt; dump.sql</code></pre></div>\n<p>which in short is equivalent to </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mysql -u username -p password database_name &lt; dump.sql</code></pre></div>\n<p>Although it seems quite OK, It is not as helpful as it looks when you have a big file.\nWe might have considered better solution as we need to know the status of progress for our\nrecord. Therefore, here is the usage of PV while importing our dump. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv your_dump.sql | mysql -u root database_name</code></pre></div>\n<p>In this case, you are able to see the progress bar just as below:</p>\n<p><img src=\"/assets/images/dec2016/pv-sample.jpg\" alt=\"PV Status Bar\" title=\"Pipe Viewer example\"></p>\n<h3 id=\"more-examples-to-monitor-of-pv-data-progress-sent-via-a-pipe\"><a href=\"#more-examples-to-monitor-of-pv-data-progress-sent-via-a-pipe\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>More examples to Monitor of PV data progress, sent via a Pipe:</h3>\n<p>1- To copy a file called your_access.log to /tmp/something-access.log and show progress:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv your_access.log &gt; /tmp/something-access.log</code></pre></div>\n<p>2- To compress a lot of files within a folder and seeing progress bar</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">tar cf - /folder-with-big-files -P | pv -s $(du -sb /folder-with-big-files | awk &#39;{print $1}&#39;) | gzip &gt; big-files.tar.gz</code></pre></div>\n<p>3- To watch how quickly a file is transferred using nc(1):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv file | nc -w 1 somewhere.com 3000</code></pre></div>\n<p>4- To transfer a file from another process and passing the expected size to pv:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cat file | pv -s 12345 | nc -w 1 majidhajian.com 3000</code></pre></div>\n<p>5- To decompress a huge tar.gz file</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">pv file.tgz | tar xzf - -C target_directory</code></pre></div>\n<p>All in all, Result of all of them like I added a picture to show, is similar as follow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">12.16MB 0:00:20 [6.06MB/s] [==================&gt;               ] 55%  ETA 0:00:37</code></pre></div>\n<p>I encourage you to read more about this amazing tool and be familiar with that. I have plan to\npublish another article about <code class=\"language-text\">screen</code> which is another great tool and combination of both, will make your\nlife as a developer more relaxed. </p>","id":"8d44fc67-497f-5a98-9566-a316ab6286db","fields":{"slug":"progress-status-using-pipe-viewer-while-importing-my-sql-databases"},"frontmatter":{"date":"2016-12-07","title":"Progress status using PipeViewer while importing MySQL databases","category":"DevOps","tags":["linux","mysql"],"banner":""},"timeToRead":3}],"tagName":"linux"}}