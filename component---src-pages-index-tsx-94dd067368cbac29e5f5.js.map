{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["Homepage","styled","main","media","tablet","phone","GridRow","div","props","background","rgba","darken","theme","colors","primary","lighten","black","config","defaultBg","white","HomepageContent","center","data","allMarkdownRemark","edges","totalCount","fullWidth","title","siteTitle","src","siteLogo","alt","to","big","width","height","viewBox","xmlns","d","map","post","node","frontmatter","date","excerpt","timeToRead","slug","fields","category","key","className","IndexQuery"],"mappings":"2FAAA,+JAUMA,EAAWC,IAAOC,KAAV,kEAAGD,CAAH,8IAIHE,IAAMC,OAIND,IAAME,OAMXC,EAAeL,IAAOM,IAAV,iEAAGN,CAAH,iNAKF,SAACO,GAAD,OACZA,EAAMC,WAAN,2CAGIC,YAAKC,YAAO,GAAKH,EAAMI,MAAMC,OAAOC,SAAU,IAHlD,aAIIJ,YAAKK,YAAQ,GAAKP,EAAMI,MAAMC,OAAOG,OAAQ,IAJjD,UAI+DC,IAAOC,UAJtE,cAKI,QAGG,SAACV,GAAD,OAAiBA,EAAMC,WAAaD,EAAMI,MAAMC,OAAOM,MAAQ,QAE7D,SAACX,GAAD,OAAiBA,EAAMC,WAAaD,EAAMI,MAAMC,OAAOM,MAAQ,OAEjEhB,IAAMC,OAGND,IAAME,OAKXe,EAAkBnB,IAAOM,IAAV,yEAAGN,CAAH,qCAEL,SAACO,GAAD,OAAYA,EAAMa,OAAS,SAAW,UAGvC,sBAAyB,QAAtBC,KACmBC,kBAA3BC,EAD8B,EAC9BA,MAAOC,EADuB,EACvBA,WACf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,WAAW,GAClB,kBAAC,IAAD,CAAQC,MAAK,cAAgBV,IAAOW,YACpC,kBAAC5B,EAAD,KACE,kBAACM,EAAD,CAASG,YAAY,GACnB,kBAACW,EAAD,CAAiBC,QAAQ,GACvB,yBAAKQ,IAAKZ,IAAOa,SAAUC,IAAKd,IAAOW,YACvC,wCACW,6BADX,gBAIA,+FACA,kBAAC,OAAD,CAAMI,GAAG,YACP,kBAAC,IAAD,CAAQC,KAAK,GACX,yBACEC,MAAM,OACNC,OAAO,OACPC,QAAQ,gBACRC,MAAM,8BAEN,0BAAMC,EAAE,4NAPZ,YAYF,kBAAC,OAAD,CAAMN,GAAG,SACP,kBAAC,IAAD,CAAQC,KAAK,GACX,yBACEC,MAAM,OACNC,OAAO,OACPC,QAAQ,gBACRC,MAAM,8BAEN,0BAAMC,EAAE,4NAPZ,WAcN,kBAAChC,EAAD,KACE,kBAACc,EAAD,KACE,wCACA,iTAMA,6BACA,2CACCI,EAAMe,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CACEb,MAAOa,EAAKC,KAAKC,YAAYf,MAC7BgB,KAAMH,EAAKC,KAAKC,YAAYC,KAC5BC,QAASJ,EAAKC,KAAKG,QACnBC,WAAYL,EAAKC,KAAKI,WACtBC,KAAMN,EAAKC,KAAKM,OAAOD,KACvBE,SAAUR,EAAKC,KAAKC,YAAYM,SAChCC,IAAKT,EAAKC,KAAKM,OAAOD,UAG1B,uBAAGI,UAAW,aACZ,kBAAC,OAAD,CAAMlB,GAAI,SAAV,iBAAkCP,EAAlC,YAST,IAAM0B,EAAa","file":"component---src-pages-index-tsx-94dd067368cbac29e5f5.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport { rgba, darken, lighten } from 'polished';\nimport { Layout, Wrapper, Button, Article } from '../components';\nimport PageProps from '../models/PageProps';\nimport { Helmet } from 'react-helmet';\nimport config from '../../config/SiteConfig';\nimport { media } from '../utils/media';\n\nconst Homepage = styled.main`\n  display: flex;\n  height: 100vh;\n  flex-direction: row;\n  @media ${media.tablet} {\n    height: 100%;\n    flex-direction: column;\n  }\n  @media ${media.phone} {\n    height: 100%;\n    flex-direction: column;\n  }\n`;\n\nconst GridRow: any = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${(props: any) =>\n    props.background\n      ? `linear-gradient(\n      -185deg,\n      ${rgba(darken(0.1, props.theme.colors.primary), 0.7)}, \n      ${rgba(lighten(0.1, props.theme.colors.black), 0.9)}), url(${config.defaultBg}) no-repeat`\n      : null};\n  background-size: cover;\n  padding: 2rem 4rem;\n  color: ${(props: any) => (props.background ? props.theme.colors.white : null)};\n  h1 {\n    color: ${(props: any) => (props.background ? props.theme.colors.white : null)};\n  }\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\nconst HomepageContent = styled.div<{ center?: boolean }>`\n  max-width: 30rem;\n  text-align: ${(props) => (props.center ? 'center' : 'left')};\n`;\n\nexport default ({ data }: PageProps) => {\n  const { edges, totalCount } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <Wrapper fullWidth={true}>\n        <Helmet title={`Homepage | ${config.siteTitle}`} />\n        <Homepage>\n          <GridRow background={true}>\n            <HomepageContent center={true}>\n              <img src={config.siteLogo} alt={config.siteTitle} />\n              <h1>\n                Hi. I am <br />\n                Majid Hajian\n              </h1>\n              <p>I write about Dart, Flutter, JavaScript, Angular, React, and ...</p>\n              <Link to=\"/contact\">\n                <Button big={true}>\n                  <svg\n                    width=\"1792\"\n                    height=\"1792\"\n                    viewBox=\"0 0 1792 1792\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path d=\"M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-453-185-242 295q-18 23-49 23-13 0-22-4-19-7-30.5-23.5t-11.5-36.5v-349l864-1059-1069 925-395-162q-37-14-40-55-2-40 32-59l1664-960q15-9 32-9 20 0 36 11z\" />\n                  </svg>\n                  Contact\n                </Button>\n              </Link>\n              <Link to=\"/blog\">\n                <Button big={true}>\n                  <svg\n                    width=\"1792\"\n                    height=\"1792\"\n                    viewBox=\"0 0 1792 1792\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path d=\"M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-453-185-242 295q-18 23-49 23-13 0-22-4-19-7-30.5-23.5t-11.5-36.5v-349l864-1059-1069 925-395-162q-37-14-40-55-2-40 32-59l1664-960q15-9 32-9 20 0 36 11z\" />\n                  </svg>\n                  Blog\n                </Button>\n              </Link>\n            </HomepageContent>\n          </GridRow>\n          <GridRow>\n            <HomepageContent>\n              <h2>About Me</h2>\n              <p>\n                Though I am a results-driven softiware architect and developer by day who have\n                converted inactive designs to fully interactive, well-developed, accessible and\n                standards-based user interfaces. I am completely enthusiast and passionate about\n                Flutter/Dart and JavaScript world.\n              </p>\n              <hr />\n              <h2>Latest Blog</h2>\n              {edges.map((post) => (\n                <Article\n                  title={post.node.frontmatter.title}\n                  date={post.node.frontmatter.date}\n                  excerpt={post.node.excerpt}\n                  timeToRead={post.node.timeToRead}\n                  slug={post.node.fields.slug}\n                  category={post.node.frontmatter.category}\n                  key={post.node.fields.slug}\n                />\n              ))}\n              <p className={'textRight'}>\n                <Link to={'/blog'}>All articles ({totalCount})</Link>\n              </p>\n            </HomepageContent>\n          </GridRow>\n        </Homepage>\n      </Wrapper>\n    </Layout>\n  );\n};\nexport const IndexQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: 1) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            category\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}